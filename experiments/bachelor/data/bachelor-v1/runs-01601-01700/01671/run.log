INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799.96s
INFO     translator memory limit: 3584 MB
INFO     translator command line string: /infai/weidan00/downward/experiments/bachelor/.venv/bin/python3 /infai/weidan00/downward/experiments/bachelor/data/bachelor-v1/code-7aa5f34_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.003s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.015s wall-clock]
988 relevant atoms
663 auxiliary atoms
1651 final queue length
2846 total queue pushes
Completing instantiation... [0.030s CPU, 0.025s wall-clock]
Instantiating: [0.040s CPU, 0.043s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.004s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
18 uncovered facts
Choosing groups: [0.010s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.032s wall-clock]
850 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
34 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.016s wall-clock]
Reordering and filtering variables...
35 of 35 variables necessary.
18 of 35 mutex groups necessary.
578 of 578 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.008s wall-clock]
Translator variables: 35
Translator derived variables: 0
Translator facts: 342
Translator goal facts: 16
Translator mutex groups: 18
Translator total mutex groups size: 324
Translator operators: 578
Translator axioms: 0
Translator task size: 5001
Translator peak memory: 145868 KB
Writing output... [0.000s CPU, 0.012s wall-clock]
Done! [0.110s CPU, 0.128s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1799.78s
INFO     search memory limit: 3584 MB
INFO     search command line string: /infai/weidan00/downward/experiments/bachelor/data/bachelor-v1/code-7aa5f34_e5e41175/builds/release/bin/downward --search 'eager_wastar([add()], w=2)' --internal-plan-file sas_plan < output.sas
[t=6.0491e-05s, 17204 KB] reading input...
[t=0.00473216s, 17608 KB] done reading input!
[t=0.00687577s, 18068 KB] Simplifying 2278 unary operators... done! [1734 unary operators]
[t=0.00840118s, 18200 KB] time to simplify: 0.00162577s
[t=0.00864537s, 18200 KB] Initializing additive heuristic...
[t=0.00877332s, 18200 KB] Building successor generator...done!
[t=0.00916118s, 18200 KB] peak memory difference for successor generator creation: 0 KB
[t=0.00920022s, 18200 KB] time for successor generation creation: 0.000261782s
[t=0.00924928s, 18200 KB] Variables: 35
[t=0.00928871s, 18200 KB] FactPairs: 342
[t=0.00932762s, 18200 KB] Bytes per state: 16
[t=0.0094413s, 18200 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0095736s, 18200 KB] New best heuristic value for add: 87
[t=0.0096159s, 18200 KB] g=0, 1 evaluated, 0 expanded
[t=0.00966149s, 18200 KB] Initial heuristic value for add: 87
[t=0.00971055s, 18200 KB] pruning method: none
[t=0.00992707s, 18200 KB] New best heuristic value for add: 84
[t=0.00997034s, 18200 KB] g=2, 7 evaluated, 2 expanded
[t=0.0100384s, 18200 KB] New best heuristic value for add: 81
[t=0.0100793s, 18200 KB] g=2, 8 evaluated, 2 expanded
[t=0.0101747s, 18200 KB] New best heuristic value for add: 79
[t=0.0102151s, 18200 KB] g=2, 10 evaluated, 2 expanded
[t=0.0102814s, 18200 KB] New best heuristic value for add: 77
[t=0.0103221s, 18200 KB] g=2, 11 evaluated, 2 expanded
[t=0.0109352s, 18200 KB] New best heuristic value for add: 73
[t=0.0109793s, 18200 KB] g=4, 33 evaluated, 8 expanded
[t=0.0110984s, 18200 KB] New best heuristic value for add: 71
[t=0.0111397s, 18200 KB] g=4, 36 evaluated, 8 expanded
[t=0.0112049s, 18200 KB] New best heuristic value for add: 70
[t=0.0112454s, 18200 KB] g=4, 37 evaluated, 8 expanded
[t=0.0113109s, 18200 KB] New best heuristic value for add: 69
[t=0.0113512s, 18200 KB] g=4, 38 evaluated, 8 expanded
[t=0.0121955s, 18200 KB] New best heuristic value for add: 65
[t=0.0122402s, 18200 KB] g=6, 70 evaluated, 15 expanded
[t=0.0123339s, 18200 KB] New best heuristic value for add: 64
[t=0.012375s, 18200 KB] g=6, 72 evaluated, 15 expanded
[t=0.0125436s, 18200 KB] New best heuristic value for add: 63
[t=0.0125855s, 18200 KB] g=6, 76 evaluated, 15 expanded
[t=0.0136831s, 18200 KB] New best heuristic value for add: 59
[t=0.0137273s, 18200 KB] g=8, 120 evaluated, 23 expanded
[t=0.0139153s, 18200 KB] New best heuristic value for add: 58
[t=0.0139574s, 18200 KB] g=8, 126 evaluated, 23 expanded
[t=0.0140228s, 18200 KB] New best heuristic value for add: 57
[t=0.0140637s, 18200 KB] g=8, 127 evaluated, 23 expanded
[t=0.0154699s, 18200 KB] New best heuristic value for add: 54
[t=0.0155139s, 18200 KB] g=10, 185 evaluated, 32 expanded
[t=0.0157262s, 18200 KB] New best heuristic value for add: 53
[t=0.0157682s, 18200 KB] g=10, 192 evaluated, 32 expanded
[t=0.0158337s, 18200 KB] New best heuristic value for add: 52
[t=0.0158742s, 18200 KB] g=10, 193 evaluated, 32 expanded
[t=0.0176438s, 18200 KB] New best heuristic value for add: 50
[t=0.0176885s, 18200 KB] g=12, 267 evaluated, 42 expanded
[t=0.0179186s, 18200 KB] New best heuristic value for add: 49
[t=0.0179606s, 18200 KB] g=12, 275 evaluated, 42 expanded
[t=0.0180249s, 18200 KB] New best heuristic value for add: 48
[t=0.0180654s, 18200 KB] g=12, 276 evaluated, 42 expanded
[t=0.0201827s, 18200 KB] New best heuristic value for add: 46
[t=0.0202321s, 18200 KB] g=14, 369 evaluated, 53 expanded
[t=0.0204618s, 18200 KB] New best heuristic value for add: 45
[t=0.0205041s, 18200 KB] g=14, 377 evaluated, 53 expanded
[t=0.0205697s, 18200 KB] New best heuristic value for add: 44
[t=0.0206104s, 18200 KB] g=14, 378 evaluated, 53 expanded
[t=0.0231197s, 18200 KB] New best heuristic value for add: 40
[t=0.0231695s, 18200 KB] g=16, 490 evaluated, 65 expanded
[t=0.0264178s, 18200 KB] New best heuristic value for add: 39
[t=0.026465s, 18200 KB] g=18, 635 evaluated, 78 expanded
[t=0.0266686s, 18200 KB] New best heuristic value for add: 37
[t=0.0267105s, 18200 KB] g=18, 642 evaluated, 78 expanded
[t=0.0302587s, 18200 KB] New best heuristic value for add: 36
[t=0.0303049s, 18200 KB] g=20, 805 evaluated, 92 expanded
[t=0.0306188s, 18200 KB] New best heuristic value for add: 35
[t=0.0306607s, 18200 KB] g=20, 817 evaluated, 92 expanded
[t=0.0341329s, 18200 KB] New best heuristic value for add: 34
[t=0.0341784s, 18200 KB] g=22, 975 evaluated, 106 expanded
[t=0.0345048s, 18200 KB] New best heuristic value for add: 32
[t=0.0345484s, 18200 KB] g=22, 984 evaluated, 106 expanded
[t=0.0385778s, 18200 KB] New best heuristic value for add: 31
[t=0.0386243s, 18200 KB] g=24, 1172 evaluated, 121 expanded
[t=0.038734s, 18200 KB] New best heuristic value for add: 29
[t=0.0387758s, 18200 KB] g=24, 1175 evaluated, 121 expanded
[t=0.0430868s, 18200 KB] New best heuristic value for add: 28
[t=0.0431327s, 18200 KB] g=26, 1379 evaluated, 136 expanded
[t=0.0502646s, 18200 KB] New best heuristic value for add: 27
[t=0.0503141s, 18200 KB] g=28, 1716 evaluated, 164 expanded
[t=0.0569317s, 18200 KB] New best heuristic value for add: 26
[t=0.056982s, 18200 KB] g=28, 2018 evaluated, 191 expanded
[t=0.0625931s, 18200 KB] New best heuristic value for add: 25
[t=0.0626414s, 18200 KB] g=30, 2283 evaluated, 217 expanded
[t=0.0787364s, 18200 KB] New best heuristic value for add: 24
[t=0.0787958s, 18200 KB] g=30, 3038 evaluated, 292 expanded
[t=0.0834123s, 18200 KB] New best heuristic value for add: 23
[t=0.0834614s, 18200 KB] g=32, 3259 evaluated, 316 expanded
[t=0.123792s, 18200 KB] New best heuristic value for add: 22
[t=0.123858s, 18200 KB] g=34, 5157 evaluated, 536 expanded
[t=0.262855s, 18464 KB] New best heuristic value for add: 21
[t=0.262951s, 18464 KB] g=36, 11588 evaluated, 1415 expanded
[t=0.470391s, 18992 KB] New best heuristic value for add: 20
[t=0.470494s, 18992 KB] g=38, 20974 evaluated, 3004 expanded
[t=0.631601s, 19256 KB] New best heuristic value for add: 19
[t=0.631702s, 19256 KB] g=40, 28159 evaluated, 4528 expanded
[t=0.701934s, 19904 KB] New best heuristic value for add: 18
[t=0.702035s, 19904 KB] g=42, 31121 evaluated, 5320 expanded
[t=0.716058s, 19904 KB] New best heuristic value for add: 17
[t=0.716121s, 19904 KB] g=44, 31722 evaluated, 5525 expanded
[t=1.97711s, 22412 KB] New best heuristic value for add: 16
[t=1.97721s, 22412 KB] g=42, 89171 evaluated, 15600 expanded
[t=1.98459s, 22412 KB] New best heuristic value for add: 15
[t=1.98464s, 22412 KB] g=42, 89599 evaluated, 15668 expanded
[t=1.98604s, 22412 KB] New best heuristic value for add: 14
[t=1.98609s, 22412 KB] g=44, 89684 evaluated, 15684 expanded
[t=1.9918s, 22412 KB] New best heuristic value for add: 13
[t=1.99185s, 22412 KB] g=46, 90026 evaluated, 15761 expanded
[t=2.00012s, 22412 KB] New best heuristic value for add: 12
[t=2.00018s, 22412 KB] g=48, 90477 evaluated, 15886 expanded
[t=2.00357s, 22544 KB] New best heuristic value for add: 11
[t=2.00362s, 22544 KB] g=50, 90652 evaluated, 15951 expanded
[t=2.0681s, 22680 KB] New best heuristic value for add: 10
[t=2.06819s, 22680 KB] g=52, 94442 evaluated, 16875 expanded
[t=2.07262s, 22680 KB] New best heuristic value for add: 9
[t=2.07267s, 22680 KB] g=54, 94726 evaluated, 16979 expanded
[t=2.07434s, 22680 KB] New best heuristic value for add: 8
[t=2.07439s, 22680 KB] g=56, 94823 evaluated, 17031 expanded
[t=2.0916s, 22680 KB] New best heuristic value for add: 7
[t=2.09167s, 22680 KB] g=56, 95990 evaluated, 17372 expanded
[t=2.09208s, 22680 KB] New best heuristic value for add: 6
[t=2.09212s, 22680 KB] g=58, 96020 evaluated, 17382 expanded
[t=2.09263s, 22680 KB] New best heuristic value for add: 5
[t=2.09267s, 22680 KB] g=58, 96059 evaluated, 17398 expanded
[t=2.09278s, 22680 KB] New best heuristic value for add: 4
[t=2.09283s, 22680 KB] g=58, 96065 evaluated, 17401 expanded
[t=2.09292s, 22680 KB] New best heuristic value for add: 3
[t=2.09296s, 22680 KB] g=60, 96070 evaluated, 17403 expanded
[t=2.09301s, 22680 KB] New best heuristic value for add: 2
[t=2.09305s, 22680 KB] g=60, 96071 evaluated, 17405 expanded
[t=2.09311s, 22680 KB] New best heuristic value for add: 1
[t=2.09315s, 22680 KB] g=61, 96073 evaluated, 17406 expanded
[t=2.0932s, 22680 KB] New best heuristic value for add: 0
[t=2.09324s, 22680 KB] g=62, 96074 evaluated, 17407 expanded
[t=2.09328s, 22680 KB] Solution found!
[t=2.09334s, 22680 KB] Actual search time: 2.08362s
unstack q a (1)
put-down q (1)
unstack a j (1)
put-down a (1)
unstack j i (1)
put-down j (1)
unstack l f (1)
put-down l (1)
unstack g d (1)
put-down g (1)
unstack f e (1)
put-down f (1)
unstack i b (1)
put-down i (1)
unstack d c (1)
put-down d (1)
unstack b m (1)
stack b i (1)
unstack c o (1)
put-down c (1)
unstack e k (1)
stack e m (1)
unstack h n (1)
stack h c (1)
pick-up f (1)
stack f d (1)
pick-up k (1)
stack k f (1)
unstack b i (1)
put-down b (1)
pick-up i (1)
stack i k (1)
pick-up b (1)
stack b i (1)
pick-up g (1)
stack g b (1)
pick-up a (1)
stack a g (1)
pick-up p (1)
stack p a (1)
unstack e m (1)
put-down e (1)
pick-up m (1)
stack m p (1)
pick-up e (1)
stack e m (1)
unstack h c (1)
put-down h (1)
pick-up c (1)
stack c e (1)
pick-up h (1)
stack h c (1)
pick-up j (1)
stack j h (1)
pick-up o (1)
stack o j (1)
pick-up l (1)
stack l o (1)
pick-up n (1)
stack n l (1)
pick-up q (1)
stack q n (1)
[t=2.09338s, 22680 KB] Plan length: 62 step(s).
[t=2.09338s, 22680 KB] Plan cost: 62
[t=2.09338s, 22680 KB] Expanded 17408 state(s).
[t=2.09338s, 22680 KB] Reopened 0 state(s).
[t=2.09338s, 22680 KB] Evaluated 96074 state(s).
[t=2.09338s, 22680 KB] Evaluations: 96074
[t=2.09338s, 22680 KB] Generated 144265 state(s).
[t=2.09338s, 22680 KB] Dead ends: 0 state(s).
[t=2.09338s, 22680 KB] Number of registered states: 96074
[t=2.09338s, 22680 KB] Int hash set load factor: 96074/131072 = 0.732986
[t=2.09338s, 22680 KB] Int hash set resizes: 17
[t=2.09338s, 22680 KB] mean number of q cost that have been adjusted 0 times in relation to total number of q: -1
[t=2.09338s, 22680 KB] mean number of q cost that have been adjusted 1 times in relation to total number of q: -1
[t=2.09338s, 22680 KB] mean number of q cost that have been adjusted 2 times in relation to total number of q: -1
[t=2.09338s, 22680 KB] mean number of q that are at some point overconsitent in relation to total number of q: -1
[t=2.09338s, 22680 KB] mean number of q that are at first underconsisten in relation to total number of q: -1
[t=2.09338s, 22680 KB] mean number of state variables that are not in common between two following states in relation to total number of state variables: -1
[t=2.09338s, 22680 KB] variance number of state variables that are not in common between two following states in relation to total number of state variables: -1
[t=2.09338s, 22680 KB] Search time: 2.08394s
[t=2.09338s, 22680 KB] Total time: 2.09338s
Solution found.
Peak memory: 22680 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: validate domain.pddl problem.pddl sas_plan
