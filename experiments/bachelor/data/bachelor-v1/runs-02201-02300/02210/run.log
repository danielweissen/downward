INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799.97s
INFO     translator memory limit: 3584 MB
INFO     translator command line string: /infai/weidan00/downward/experiments/bachelor/.venv/bin/python3 /infai/weidan00/downward/experiments/bachelor/data/bachelor-v1/code-7aa5f34_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.007s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.002s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.001s wall-clock]
Preparing model... [0.010s CPU, 0.008s wall-clock]
Generated 13 rules.
Computing model... [0.030s CPU, 0.034s wall-clock]
2681 relevant atoms
1660 auxiliary atoms
4341 final queue length
7422 total queue pushes
Completing instantiation... [0.050s CPU, 0.048s wall-clock]
Instantiating: [0.100s CPU, 0.094s wall-clock]
Computing fact groups...
Finding invariants...
6 initial candidates
Finding invariants: [0.000s CPU, 0.001s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
40 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.003s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.040s CPU, 0.036s wall-clock]
20 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
1 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.021s wall-clock]
Reordering and filtering variables...
41 of 41 variables necessary.
0 of 1 mutex groups necessary.
1583 of 1583 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.005s wall-clock]
Translator variables: 41
Translator derived variables: 0
Translator facts: 120
Translator goal facts: 20
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 1583
Translator axioms: 0
Translator task size: 5007
Translator peak memory: 147404 KB
Writing output... [0.010s CPU, 0.014s wall-clock]
Done! [0.180s CPU, 0.182s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1799.73s
INFO     search memory limit: 3584 MB
INFO     search command line string: /infai/weidan00/downward/experiments/bachelor/data/bachelor-v1/code-7aa5f34_e5e41175/builds/release/bin/downward --search 'eager_wastar([add()], w=2)' --internal-plan-file sas_plan < output.sas
[t=5.7504e-05s, 17204 KB] reading input...
[t=0.00583684s, 17496 KB] done reading input!
[t=0.00790676s, 17896 KB] Simplifying 1620 unary operators... done! [1620 unary operators]
[t=0.00861072s, 18028 KB] time to simplify: 0.000805465s
[t=0.00878372s, 18028 KB] Initializing additive heuristic...
[t=0.00890501s, 18028 KB] Building successor generator...done!
[t=0.00930365s, 18060 KB] peak memory difference for successor generator creation: 32 KB
[t=0.0093429s, 18060 KB] time for successor generation creation: 0.000265211s
[t=0.00939586s, 18060 KB] Variables: 41
[t=0.00943564s, 18060 KB] FactPairs: 120
[t=0.00947496s, 18060 KB] Bytes per state: 8
[t=0.00959588s, 18060 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.00971059s, 18060 KB] New best heuristic value for add: 80
[t=0.00975338s, 18060 KB] g=0, 1 evaluated, 0 expanded
[t=0.00980204s, 18060 KB] Initial heuristic value for add: 80
[t=0.00984231s, 18060 KB] pruning method: none
[t=0.00990921s, 18060 KB] New best heuristic value for add: 79
[t=0.00995078s, 18060 KB] g=1, 2 evaluated, 1 expanded
[t=0.0100533s, 18060 KB] New best heuristic value for add: 77
[t=0.0100947s, 18060 KB] g=1, 6 evaluated, 1 expanded
[t=0.0105895s, 18060 KB] New best heuristic value for add: 76
[t=0.0106325s, 18060 KB] g=1, 39 evaluated, 1 expanded
[t=0.0107076s, 18060 KB] New best heuristic value for add: 73
[t=0.0107489s, 18060 KB] g=2, 41 evaluated, 2 expanded
[t=0.0108393s, 18060 KB] New best heuristic value for add: 71
[t=0.0108807s, 18060 KB] g=3, 44 evaluated, 3 expanded
[t=0.0114265s, 18060 KB] New best heuristic value for add: 69
[t=0.0114691s, 18060 KB] g=4, 81 evaluated, 4 expanded
[t=0.0115993s, 18060 KB] New best heuristic value for add: 67
[t=0.0116409s, 18060 KB] g=5, 87 evaluated, 5 expanded
[t=0.0121311s, 18060 KB] New best heuristic value for add: 65
[t=0.0121735s, 18060 KB] g=6, 121 evaluated, 6 expanded
[t=0.0123726s, 18060 KB] New best heuristic value for add: 64
[t=0.0124149s, 18060 KB] g=7, 131 evaluated, 7 expanded
[t=0.0125745s, 18060 KB] New best heuristic value for add: 63
[t=0.0126154s, 18060 KB] g=7, 140 evaluated, 7 expanded
[t=0.0129362s, 18060 KB] New best heuristic value for add: 62
[t=0.0129778s, 18060 KB] g=8, 161 evaluated, 8 expanded
[t=0.0133933s, 18060 KB] New best heuristic value for add: 61
[t=0.013435s, 18060 KB] g=9, 189 evaluated, 9 expanded
[t=0.0136391s, 18060 KB] New best heuristic value for add: 59
[t=0.0136805s, 18060 KB] g=10, 201 evaluated, 10 expanded
[t=0.0138304s, 18060 KB] New best heuristic value for add: 58
[t=0.0138712s, 18060 KB] g=11, 209 evaluated, 11 expanded
[t=0.0143309s, 18060 KB] New best heuristic value for add: 57
[t=0.0143731s, 18060 KB] g=12, 241 evaluated, 12 expanded
[t=0.0145746s, 18060 KB] New best heuristic value for add: 56
[t=0.0146155s, 18060 KB] g=13, 253 evaluated, 13 expanded
[t=0.0150438s, 18060 KB] New best heuristic value for add: 55
[t=0.0150858s, 18060 KB] g=14, 281 evaluated, 14 expanded
[t=0.0153498s, 18060 KB] New best heuristic value for add: 54
[t=0.0153916s, 18060 KB] g=15, 297 evaluated, 15 expanded
[t=0.0157464s, 18060 KB] New best heuristic value for add: 53
[t=0.015788s, 18060 KB] g=16, 321 evaluated, 16 expanded
[t=0.0160916s, 18060 KB] New best heuristic value for add: 52
[t=0.0161332s, 18060 KB] g=17, 341 evaluated, 17 expanded
[t=0.0164337s, 18060 KB] New best heuristic value for add: 50
[t=0.0164754s, 18060 KB] g=18, 361 evaluated, 18 expanded
[t=0.0165488s, 18060 KB] New best heuristic value for add: 49
[t=0.0165896s, 18060 KB] g=19, 363 evaluated, 19 expanded
[t=0.0169935s, 18060 KB] New best heuristic value for add: 48
[t=0.0170354s, 18060 KB] g=19, 391 evaluated, 19 expanded
[t=0.017211s, 18060 KB] New best heuristic value for add: 46
[t=0.0172528s, 18060 KB] g=20, 401 evaluated, 20 expanded
[t=0.0173243s, 18060 KB] New best heuristic value for add: 45
[t=0.0173653s, 18060 KB] g=21, 403 evaluated, 21 expanded
[t=0.0177793s, 18060 KB] New best heuristic value for add: 44
[t=0.0178209s, 18060 KB] g=21, 433 evaluated, 21 expanded
[t=0.0179747s, 18060 KB] New best heuristic value for add: 43
[t=0.0180161s, 18060 KB] g=22, 441 evaluated, 22 expanded
[t=0.018464s, 18060 KB] New best heuristic value for add: 42
[t=0.0185053s, 18060 KB] g=23, 474 evaluated, 23 expanded
[t=0.0186414s, 18060 KB] New best heuristic value for add: 41
[t=0.0186827s, 18060 KB] g=24, 481 evaluated, 24 expanded
[t=0.01928s, 18060 KB] New best heuristic value for add: 40
[t=0.0193233s, 18060 KB] g=26, 521 evaluated, 26 expanded
[t=0.0194116s, 18060 KB] New best heuristic value for add: 39
[t=0.0194529s, 18060 KB] g=27, 524 evaluated, 27 expanded
[t=0.0199605s, 18060 KB] New best heuristic value for add: 38
[t=0.0200037s, 18060 KB] g=28, 561 evaluated, 28 expanded
[t=0.0201028s, 18060 KB] New best heuristic value for add: 37
[t=0.0201436s, 18060 KB] g=29, 565 evaluated, 29 expanded
[t=0.0206308s, 18060 KB] New best heuristic value for add: 36
[t=0.0206728s, 18060 KB] g=30, 601 evaluated, 31 expanded
[t=0.0207716s, 18060 KB] New best heuristic value for add: 35
[t=0.0208139s, 18060 KB] g=31, 604 evaluated, 32 expanded
[t=0.0213097s, 18060 KB] New best heuristic value for add: 34
[t=0.0213521s, 18060 KB] g=32, 641 evaluated, 34 expanded
[t=0.0214714s, 18060 KB] New best heuristic value for add: 33
[t=0.0215128s, 18060 KB] g=33, 647 evaluated, 35 expanded
[t=0.0219759s, 18060 KB] New best heuristic value for add: 32
[t=0.0220178s, 18060 KB] g=34, 681 evaluated, 38 expanded
[t=0.0221015s, 18060 KB] New best heuristic value for add: 31
[t=0.0221423s, 18060 KB] g=35, 684 evaluated, 39 expanded
[t=0.0226382s, 18060 KB] New best heuristic value for add: 30
[t=0.0226805s, 18060 KB] g=36, 721 evaluated, 43 expanded
[t=0.0228074s, 18060 KB] New best heuristic value for add: 29
[t=0.0228482s, 18060 KB] g=37, 728 evaluated, 44 expanded
[t=0.0232837s, 18060 KB] New best heuristic value for add: 28
[t=0.0233247s, 18060 KB] g=38, 761 evaluated, 48 expanded
[t=0.0234066s, 18060 KB] New best heuristic value for add: 27
[t=0.0234471s, 18060 KB] g=39, 764 evaluated, 49 expanded
[t=0.0239266s, 18060 KB] New best heuristic value for add: 26
[t=0.0239686s, 18060 KB] g=40, 801 evaluated, 53 expanded
[t=0.0240921s, 18060 KB] New best heuristic value for add: 25
[t=0.0241326s, 18060 KB] g=41, 808 evaluated, 54 expanded
[t=0.024564s, 18060 KB] New best heuristic value for add: 24
[t=0.0246052s, 18060 KB] g=42, 841 evaluated, 58 expanded
[t=0.0247277s, 18060 KB] New best heuristic value for add: 23
[t=0.0247681s, 18060 KB] g=43, 848 evaluated, 59 expanded
[t=0.025191s, 18060 KB] New best heuristic value for add: 22
[t=0.0252325s, 18060 KB] g=44, 881 evaluated, 63 expanded
[t=0.0253602s, 18060 KB] New best heuristic value for add: 21
[t=0.0254012s, 18060 KB] g=45, 888 evaluated, 64 expanded
[t=0.0258207s, 18060 KB] New best heuristic value for add: 20
[t=0.0258618s, 18060 KB] g=46, 921 evaluated, 68 expanded
[t=0.0259814s, 18060 KB] New best heuristic value for add: 19
[t=0.0260219s, 18060 KB] g=47, 928 evaluated, 69 expanded
[t=0.0264316s, 18060 KB] New best heuristic value for add: 18
[t=0.0264726s, 18060 KB] g=48, 961 evaluated, 72 expanded
[t=0.026553s, 18060 KB] New best heuristic value for add: 17
[t=0.0265939s, 18060 KB] g=49, 964 evaluated, 73 expanded
[t=0.0270427s, 18060 KB] New best heuristic value for add: 16
[t=0.0270837s, 18060 KB] g=50, 1001 evaluated, 76 expanded
[t=0.0272022s, 18060 KB] New best heuristic value for add: 15
[t=0.0272482s, 18060 KB] g=51, 1008 evaluated, 77 expanded
[t=0.0277616s, 18060 KB] New best heuristic value for add: 14
[t=0.0278048s, 18060 KB] g=52, 1041 evaluated, 80 expanded
[t=0.0279235s, 18060 KB] New best heuristic value for add: 13
[t=0.0279643s, 18060 KB] g=53, 1048 evaluated, 81 expanded
[t=0.0283724s, 18060 KB] New best heuristic value for add: 12
[t=0.0284139s, 18060 KB] g=54, 1081 evaluated, 84 expanded
[t=0.0285305s, 18060 KB] New best heuristic value for add: 11
[t=0.0285716s, 18060 KB] g=55, 1088 evaluated, 85 expanded
[t=0.0289468s, 18060 KB] New best heuristic value for add: 10
[t=0.0289883s, 18060 KB] g=56, 1121 evaluated, 86 expanded
[t=0.0291102s, 18060 KB] New best heuristic value for add: 9
[t=0.0291507s, 18060 KB] g=57, 1128 evaluated, 87 expanded
[t=0.0295315s, 18060 KB] New best heuristic value for add: 8
[t=0.0295726s, 18060 KB] g=58, 1161 evaluated, 89 expanded
[t=0.0297437s, 18060 KB] New best heuristic value for add: 7
[t=0.0297843s, 18060 KB] g=59, 1174 evaluated, 90 expanded
[t=0.0301148s, 18060 KB] New best heuristic value for add: 6
[t=0.0301565s, 18060 KB] g=60, 1201 evaluated, 93 expanded
[t=0.0303244s, 18060 KB] New best heuristic value for add: 5
[t=0.030365s, 18060 KB] g=61, 1214 evaluated, 94 expanded
[t=0.0306774s, 18060 KB] New best heuristic value for add: 4
[t=0.0307184s, 18060 KB] g=62, 1241 evaluated, 96 expanded
[t=0.0308857s, 18060 KB] New best heuristic value for add: 3
[t=0.0309262s, 18060 KB] g=63, 1254 evaluated, 97 expanded
[t=0.0312362s, 18060 KB] New best heuristic value for add: 2
[t=0.0312769s, 18060 KB] g=64, 1281 evaluated, 99 expanded
[t=0.0314404s, 18060 KB] New best heuristic value for add: 1
[t=0.0314806s, 18060 KB] g=65, 1294 evaluated, 100 expanded
[t=0.0317684s, 18060 KB] New best heuristic value for add: 0
[t=0.0318089s, 18060 KB] g=66, 1321 evaluated, 101 expanded
[t=0.0318635s, 18060 KB] Solution found!
[t=0.0319073s, 18060 KB] Actual search time: 0.022061s
up f0 f8 (1)
stop f8 (1)
down f8 f2 (1)
stop f2 (1)
up f2 f13 (1)
stop f13 (1)
up f13 f19 (1)
stop f19 (1)
up f19 f28 (1)
stop f28 (1)
down f28 f15 (1)
stop f15 (1)
down f15 f6 (1)
stop f6 (1)
up f6 f19 (1)
stop f19 (1)
up f19 f20 (1)
stop f20 (1)
up f20 f30 (1)
stop f30 (1)
up f30 f32 (1)
stop f32 (1)
up f32 f33 (1)
stop f33 (1)
down f33 f1 (1)
stop f1 (1)
up f1 f11 (1)
stop f11 (1)
down f11 f5 (1)
stop f5 (1)
up f5 f13 (1)
stop f13 (1)
down f13 f7 (1)
stop f7 (1)
up f7 f15 (1)
stop f15 (1)
down f15 f8 (1)
stop f8 (1)
up f8 f19 (1)
stop f19 (1)
up f19 f22 (1)
stop f22 (1)
up f22 f23 (1)
stop f23 (1)
up f23 f24 (1)
stop f24 (1)
down f24 f6 (1)
stop f6 (1)
up f6 f27 (1)
stop f27 (1)
up f27 f28 (1)
stop f28 (1)
up f28 f31 (1)
stop f31 (1)
down f31 f14 (1)
stop f14 (1)
up f14 f32 (1)
stop f32 (1)
up f32 f37 (1)
stop f37 (1)
down f37 f33 (1)
stop f33 (1)
up f33 f38 (1)
stop f38 (1)
down f38 f2 (1)
stop f2 (1)
[t=0.0319502s, 18060 KB] Plan length: 66 step(s).
[t=0.0319502s, 18060 KB] Plan cost: 66
[t=0.0319502s, 18060 KB] Expanded 102 state(s).
[t=0.0319502s, 18060 KB] Reopened 0 state(s).
[t=0.0319502s, 18060 KB] Evaluated 1321 state(s).
[t=0.0319502s, 18060 KB] Evaluations: 1321
[t=0.0319502s, 18060 KB] Generated 4039 state(s).
[t=0.0319502s, 18060 KB] Dead ends: 0 state(s).
[t=0.0319502s, 18060 KB] Number of registered states: 1321
[t=0.0319502s, 18060 KB] Int hash set load factor: 1321/2048 = 0.64502
[t=0.0319502s, 18060 KB] Int hash set resizes: 11
[t=0.0319502s, 18060 KB] mean number of q cost that have been adjusted 0 times in relation to total number of q: -1
[t=0.0319502s, 18060 KB] mean number of q cost that have been adjusted 1 times in relation to total number of q: -1
[t=0.0319502s, 18060 KB] mean number of q cost that have been adjusted 2 times in relation to total number of q: -1
[t=0.0319502s, 18060 KB] mean number of q that are at some point overconsitent in relation to total number of q: -1
[t=0.0319502s, 18060 KB] mean number of q that are at first underconsisten in relation to total number of q: -1
[t=0.0319502s, 18060 KB] mean number of state variables that are not in common between two following states in relation to total number of state variables: -1
[t=0.0319502s, 18060 KB] variance number of state variables that are not in common between two following states in relation to total number of state variables: -1
[t=0.0319502s, 18060 KB] Search time: 0.0223549s
[t=0.0319502s, 18060 KB] Total time: 0.0319502s
Solution found.
Peak memory: 18060 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: validate domain.pddl problem.pddl sas_plan
