INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799.96s
INFO     translator memory limit: 3584 MB
INFO     translator command line string: /infai/weidan00/downward/experiments/bachelor/.venv/bin/python3 /infai/weidan00/downward/experiments/bachelor/data/bachelor-v1/code-7aa5f34_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.005s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.006s wall-clock]
Preparing model... [0.000s CPU, 0.004s wall-clock]
Generated 125 rules.
Computing model... [0.230s CPU, 0.219s wall-clock]
13179 relevant atoms
4383 auxiliary atoms
17562 final queue length
57308 total queue pushes
Completing instantiation... [0.860s CPU, 0.867s wall-clock]
Instantiating: [1.110s CPU, 1.103s wall-clock]
Computing fact groups...
Finding invariants...
15 initial candidates
Finding invariants: [0.020s CPU, 0.026s wall-clock]
Checking invariant weight... [0.000s CPU, 0.002s wall-clock]
Instantiating groups... [0.020s CPU, 0.013s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
39 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.040s CPU, 0.048s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
not in strips_to_sas, left out: Atom bottomcol(club0)
not in strips_to_sas, left out: Atom bottomcol(diamond0)
not in strips_to_sas, left out: Atom bottomcol(heart0)
not in strips_to_sas, left out: Atom bottomcol(spade0)
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.030s CPU, 0.034s wall-clock]
Translating task: [0.910s CPU, 0.908s wall-clock]
5016 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
14 propositions removed
Detecting unreachable propositions: [0.470s CPU, 0.474s wall-clock]
Reordering and filtering variables...
86 of 86 variables necessary.
90 of 162 mutex groups necessary.
12528 of 12528 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.130s CPU, 0.134s wall-clock]
Translator variables: 86
Translator derived variables: 0
Translator facts: 369
Translator goal facts: 4
Translator mutex groups: 90
Translator total mutex groups size: 441
Translator operators: 12528
Translator axioms: 0
Translator task size: 102153
Translator peak memory: 217292 KB
Writing output... [0.160s CPU, 0.182s wall-clock]
Done! [2.860s CPU, 2.894s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1797.02s
INFO     search memory limit: 3584 MB
INFO     search command line string: /infai/weidan00/downward/experiments/bachelor/data/bachelor-v1/code-7aa5f34_e5e41175/builds/release/bin/downward --search 'eager_wastar([add()], w=2)' --internal-plan-file sas_plan < output.sas
[t=7.423e-05s, 17204 KB] reading input...
[t=0.0900172s, 21556 KB] done reading input!
[t=0.0991217s, 24732 KB] Simplifying 46021 unary operators... done! [46021 unary operators]
[t=0.182762s, 28952 KB] time to simplify: 0.0837347s
[t=0.185393s, 28952 KB] Initializing additive heuristic...
[t=0.185572s, 28952 KB] Building successor generator...done!
[t=0.191424s, 28952 KB] peak memory difference for successor generator creation: 0 KB
[t=0.191469s, 28952 KB] time for successor generation creation: 0.00568787s
[t=0.191625s, 28952 KB] Variables: 86
[t=0.191673s, 28952 KB] FactPairs: 369
[t=0.191713s, 28952 KB] Bytes per state: 24
[t=0.191873s, 28952 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.192733s, 28952 KB] New best heuristic value for add: 136
[t=0.192801s, 28952 KB] g=0, 1 evaluated, 0 expanded
[t=0.192852s, 28952 KB] Initial heuristic value for add: 136
[t=0.192894s, 28952 KB] pruning method: none
[t=0.193504s, 28952 KB] New best heuristic value for add: 130
[t=0.193589s, 28952 KB] g=1, 2 evaluated, 1 expanded
[t=0.199557s, 28952 KB] New best heuristic value for add: 124
[t=0.199647s, 28952 KB] g=2, 13 evaluated, 2 expanded
[t=0.205021s, 28952 KB] New best heuristic value for add: 119
[t=0.205112s, 28952 KB] g=3, 23 evaluated, 3 expanded
[t=0.210478s, 28952 KB] New best heuristic value for add: 114
[t=0.210574s, 28952 KB] g=4, 33 evaluated, 4 expanded
[t=0.215924s, 28952 KB] New best heuristic value for add: 110
[t=0.216011s, 28952 KB] g=5, 43 evaluated, 5 expanded
[t=0.218667s, 28952 KB] New best heuristic value for add: 109
[t=0.218747s, 28952 KB] g=5, 48 evaluated, 5 expanded
[t=0.244878s, 28952 KB] New best heuristic value for add: 106
[t=0.244977s, 28952 KB] g=6, 98 evaluated, 11 expanded
[t=0.247185s, 28952 KB] New best heuristic value for add: 103
[t=0.24727s, 28952 KB] g=7, 102 evaluated, 12 expanded
[t=0.264187s, 28952 KB] New best heuristic value for add: 100
[t=0.264286s, 28952 KB] g=10, 135 evaluated, 16 expanded
[t=0.297051s, 28952 KB] New best heuristic value for add: 98
[t=0.297146s, 28952 KB] g=12, 198 evaluated, 25 expanded
[t=0.321524s, 28952 KB] New best heuristic value for add: 97
[t=0.321619s, 28952 KB] g=14, 244 evaluated, 31 expanded
[t=0.351821s, 28952 KB] New best heuristic value for add: 96
[t=0.351917s, 28952 KB] g=14, 302 evaluated, 38 expanded
[t=0.36317s, 28952 KB] New best heuristic value for add: 95
[t=0.36326s, 28952 KB] g=16, 325 evaluated, 41 expanded
[t=0.371441s, 28952 KB] New best heuristic value for add: 92
[t=0.371533s, 28952 KB] g=17, 342 evaluated, 43 expanded
[t=0.386894s, 28952 KB] New best heuristic value for add: 90
[t=0.386986s, 28952 KB] g=19, 373 evaluated, 47 expanded
[t=0.421302s, 28952 KB] New best heuristic value for add: 87
[t=0.4214s, 28952 KB] g=22, 443 evaluated, 58 expanded
[t=0.438795s, 28952 KB] New best heuristic value for add: 84
[t=0.438894s, 28952 KB] g=24, 477 evaluated, 62 expanded
[t=0.779598s, 28952 KB] New best heuristic value for add: 82
[t=0.779706s, 28952 KB] g=27, 1175 evaluated, 201 expanded, 20 reopened
[t=0.928267s, 28952 KB] New best heuristic value for add: 80
[t=0.92837s, 28952 KB] g=28, 1468 evaluated, 252 expanded, 22 reopened
[t=1.17714s, 28952 KB] New best heuristic value for add: 79
[t=1.17725s, 28952 KB] g=34, 1979 evaluated, 358 expanded, 35 reopened
[t=1.18377s, 28952 KB] New best heuristic value for add: 76
[t=1.18387s, 28952 KB] g=35, 1992 evaluated, 359 expanded, 35 reopened
[t=1.1859s, 28952 KB] New best heuristic value for add: 75
[t=1.18599s, 28952 KB] g=35, 1996 evaluated, 359 expanded, 35 reopened
[t=1.19345s, 28952 KB] New best heuristic value for add: 72
[t=1.19354s, 28952 KB] g=36, 2011 evaluated, 360 expanded, 35 reopened
[t=1.20009s, 28952 KB] New best heuristic value for add: 71
[t=1.20018s, 28952 KB] g=37, 2024 evaluated, 361 expanded, 35 reopened
[t=1.20654s, 28952 KB] New best heuristic value for add: 70
[t=1.20664s, 28952 KB] g=38, 2037 evaluated, 362 expanded, 35 reopened
[t=1.20767s, 28952 KB] New best heuristic value for add: 67
[t=1.20774s, 28952 KB] g=38, 2039 evaluated, 362 expanded, 35 reopened
[t=1.21493s, 28952 KB] New best heuristic value for add: 63
[t=1.21503s, 28952 KB] g=39, 2054 evaluated, 363 expanded, 35 reopened
[t=1.23323s, 28952 KB] New best heuristic value for add: 62
[t=1.23333s, 28952 KB] g=41, 2094 evaluated, 367 expanded, 35 reopened
[t=1.23572s, 28952 KB] New best heuristic value for add: 61
[t=1.2358s, 28952 KB] g=41, 2099 evaluated, 367 expanded, 35 reopened
[t=1.27643s, 28952 KB] New best heuristic value for add: 60
[t=1.27653s, 28952 KB] g=42, 2186 evaluated, 379 expanded, 35 reopened
[t=1.28125s, 28952 KB] New best heuristic value for add: 59
[t=1.28135s, 28952 KB] g=43, 2196 evaluated, 380 expanded, 35 reopened
[t=1.41021s, 28952 KB] New best heuristic value for add: 58
[t=1.41029s, 28952 KB] g=45, 2473 evaluated, 419 expanded, 35 reopened
[t=1.4314s, 28952 KB] New best heuristic value for add: 55
[t=1.4315s, 28952 KB] g=46, 2518 evaluated, 423 expanded, 35 reopened
[t=1.58011s, 28952 KB] New best heuristic value for add: 53
[t=1.5802s, 28952 KB] g=49, 2840 evaluated, 467 expanded, 35 reopened
[t=2.16867s, 28952 KB] New best heuristic value for add: 51
[t=2.16877s, 28952 KB] g=52, 4128 evaluated, 702 expanded, 62 reopened
[t=2.17502s, 28952 KB] New best heuristic value for add: 49
[t=2.17511s, 28952 KB] g=53, 4142 evaluated, 703 expanded, 62 reopened
[t=2.18005s, 28952 KB] New best heuristic value for add: 45
[t=2.18013s, 28952 KB] g=54, 4153 evaluated, 704 expanded, 62 reopened
[t=2.18929s, 28952 KB] New best heuristic value for add: 41
[t=2.18938s, 28952 KB] g=55, 4174 evaluated, 705 expanded, 62 reopened
[t=2.22913s, 28952 KB] New best heuristic value for add: 40
[t=2.22923s, 28952 KB] g=57, 4268 evaluated, 715 expanded, 62 reopened
[t=2.23012s, 28952 KB] New best heuristic value for add: 38
[t=2.2302s, 28952 KB] g=57, 4270 evaluated, 715 expanded, 62 reopened
[t=2.27478s, 28952 KB] New best heuristic value for add: 37
[t=2.27488s, 28952 KB] g=59, 4376 evaluated, 729 expanded, 62 reopened
[t=2.27938s, 28952 KB] New best heuristic value for add: 36
[t=2.27947s, 28952 KB] g=60, 4387 evaluated, 730 expanded, 62 reopened
[t=2.27994s, 28952 KB] New best heuristic value for add: 35
[t=2.28s, 28952 KB] g=60, 4388 evaluated, 730 expanded, 62 reopened
[t=2.2821s, 28952 KB] New best heuristic value for add: 33
[t=2.28217s, 28952 KB] g=60, 4393 evaluated, 730 expanded, 62 reopened
[t=2.28509s, 28952 KB] New best heuristic value for add: 31
[t=2.28517s, 28952 KB] g=61, 4400 evaluated, 731 expanded, 62 reopened
[t=2.29074s, 28952 KB] New best heuristic value for add: 30
[t=2.29083s, 28952 KB] g=62, 4414 evaluated, 732 expanded, 62 reopened
[t=2.29408s, 28952 KB] New best heuristic value for add: 29
[t=2.29417s, 28952 KB] g=63, 4422 evaluated, 733 expanded, 62 reopened
[t=2.2973s, 28952 KB] New best heuristic value for add: 27
[t=2.29739s, 28952 KB] g=63, 4430 evaluated, 733 expanded, 62 reopened
[t=2.30119s, 28952 KB] New best heuristic value for add: 26
[t=2.30127s, 28952 KB] g=64, 4440 evaluated, 734 expanded, 62 reopened
[t=2.30462s, 28952 KB] New best heuristic value for add: 25
[t=2.3047s, 28952 KB] g=64, 4449 evaluated, 734 expanded, 62 reopened
[t=2.30578s, 28952 KB] New best heuristic value for add: 24
[t=2.30586s, 28952 KB] g=64, 4452 evaluated, 734 expanded, 62 reopened
[t=2.30856s, 28952 KB] New best heuristic value for add: 21
[t=2.30864s, 28952 KB] g=65, 4460 evaluated, 735 expanded, 62 reopened
[t=2.3109s, 28952 KB] New best heuristic value for add: 18
[t=2.31098s, 28952 KB] g=66, 4467 evaluated, 736 expanded, 62 reopened
[t=2.31259s, 28952 KB] New best heuristic value for add: 16
[t=2.31266s, 28952 KB] g=67, 4472 evaluated, 737 expanded, 62 reopened
[t=2.31598s, 28952 KB] New best heuristic value for add: 15
[t=2.31607s, 28952 KB] g=68, 4483 evaluated, 738 expanded, 62 reopened
[t=2.3198s, 28952 KB] New best heuristic value for add: 14
[t=2.31988s, 28952 KB] g=69, 4495 evaluated, 739 expanded, 62 reopened
[t=2.32424s, 28952 KB] New best heuristic value for add: 13
[t=2.32432s, 28952 KB] g=70, 4509 evaluated, 740 expanded, 62 reopened
[t=2.32635s, 28952 KB] New best heuristic value for add: 12
[t=2.32642s, 28952 KB] g=71, 4516 evaluated, 741 expanded, 62 reopened
[t=2.32932s, 28952 KB] New best heuristic value for add: 11
[t=2.32939s, 28952 KB] g=72, 4526 evaluated, 742 expanded, 62 reopened
[t=2.33275s, 28952 KB] New best heuristic value for add: 10
[t=2.33284s, 28952 KB] g=73, 4539 evaluated, 743 expanded, 62 reopened
[t=2.33641s, 28952 KB] New best heuristic value for add: 9
[t=2.3365s, 28952 KB] g=74, 4553 evaluated, 744 expanded, 62 reopened
[t=2.33704s, 28952 KB] New best heuristic value for add: 8
[t=2.3371s, 28952 KB] g=74, 4555 evaluated, 744 expanded, 62 reopened
[t=2.339s, 28952 KB] New best heuristic value for add: 7
[t=2.33908s, 28952 KB] g=75, 4562 evaluated, 745 expanded, 62 reopened
[t=2.34213s, 28952 KB] New best heuristic value for add: 5
[t=2.34222s, 28952 KB] g=76, 4574 evaluated, 746 expanded, 62 reopened
[t=2.34464s, 28952 KB] New best heuristic value for add: 4
[t=2.34472s, 28952 KB] g=77, 4584 evaluated, 747 expanded, 62 reopened
[t=2.34611s, 28952 KB] New best heuristic value for add: 3
[t=2.34618s, 28952 KB] g=78, 4591 evaluated, 748 expanded, 62 reopened
[t=2.34715s, 28952 KB] New best heuristic value for add: 2
[t=2.34721s, 28952 KB] g=79, 4596 evaluated, 749 expanded, 62 reopened
[t=2.34798s, 28952 KB] New best heuristic value for add: 1
[t=2.34804s, 28952 KB] g=80, 4601 evaluated, 750 expanded, 62 reopened
[t=2.34846s, 28952 KB] New best heuristic value for add: 0
[t=2.34851s, 28952 KB] g=81, 4604 evaluated, 751 expanded, 62 reopened
[t=2.34866s, 28952 KB] Solution found!
[t=2.34873s, 28952 KB] Actual search time: 2.15583s
sendtohome cluba club9 club n1 club0 n0 (1)
sendtohome spadea spade5 spade n1 spade0 n0 (1)
sendtofree diamond9 spade10 n4 n3 (1)
sendtofree diamond5 diamond3 n3 n2 (1)
sendtofree diamond6 hearta n2 n1 (1)
sendtohome hearta spade2 heart n1 heart0 n0 (1)
sendtohome spade2 spade9 spade n2 spadea n1 (1)
colfromfreecell diamond9 spade10 n1 n2 (1)
sendtofree diamond3 heart2 n2 n1 (1)
sendtohome heart2 spade7 heart n2 hearta n1 (1)
colfromfreecell diamond6 spade7 n1 n2 (1)
sendtofree club9 diamond8 n2 n1 (1)
move diamond8 club6 spade9 (1)
move club7 heart9 diamond8 (1)
move spade5 club10 diamond6 (1)
move heart9 heart3 club10 (1)
sendtohome heart3 heart7 heart n3 heart2 n2 (1)
colfromfreecell diamond5 club6 n1 n2 (1)
sendtofree club5 diamond4 n2 n1 (1)
move diamond4 club2 spade5 (1)
sendtohome club2 club8 club n2 cluba n1 (1)
move heart7 heart6 club8 (1)
move heart6 diamonda club7 (1)
sendtohome-b diamonda diamond n1 diamond0 n0 n0 n1 (1)
sendtonewcol heart6 club7 n1 n0 (1)
colfromfreecell club5 heart6 n1 n2 (1)
move diamond4 spade5 club5 (1)
sendtofree diamond5 club6 n2 n1 (1)
move club6 heart8 heart7 (1)
colfromfreecell diamond5 club6 n1 n2 (1)
sendtofree heart8 diamond2 n2 n1 (1)
sendtohome-b diamond2 diamond n2 diamonda n1 n0 n1 (1)
sendtofree diamond9 spade10 n1 n0 (1)
homefromfreecell diamond3 diamond n3 diamond2 n2 n0 n1 (1)
sendtofree diamond5 club6 n1 n0 (1)
sendtohome diamond4 club5 diamond n4 diamond3 n3 (1)
homefromfreecell diamond5 diamond n5 diamond4 n4 n0 n1 (1)
sendtofree spade5 diamond6 n1 n0 (1)
sendtohome diamond6 spade7 diamond n6 diamond5 n5 (1)
newcolfromfreecell club9 n1 n0 n0 n1 (1)
colfromfreecell heart8 club9 n1 n2 (1)
move spade7 heart5 heart8 (1)
sendtofree heart5 spade3 n2 n1 (1)
sendtohome-b spade3 spade n3 spade2 n2 n0 n1 (1)
sendtonewcol spade10 spade6 n1 n0 (1)
colfromfreecell diamond9 spade10 n1 n2 (1)
sendtofree spade6 diamond10 n2 n1 (1)
colfromfreecell heart5 club6 n1 n2 (1)
sendtofree diamond10 club3 n2 n1 (1)
sendtohome club3 club4 club n3 club2 n2 (1)
sendtohome-b club4 club n4 club3 n3 n0 n1 (1)
sendtofree heart5 club6 n1 n0 (1)
sendtohome club5 heart6 club n5 club4 n4 (1)
sendtohome club6 heart7 club n6 club5 n5 (1)
sendtohome club7 diamond8 club n7 club6 n6 (1)
colfromfreecell spade5 heart6 n0 n1 (1)
sendtofree heart7 club8 n1 n0 (1)
sendtohome club8 spade4 club n8 club7 n7 (1)
sendtohome-b spade4 spade n4 spade3 n3 n1 n2 (1)
sendtonewcol heart9 club10 n2 n1 (1)
sendtohome spade5 heart6 spade n5 spade4 n4 (1)
homefromfreecell spade6 spade n6 spade5 n5 n0 n1 (1)
sendtohome spade7 heart8 spade n7 spade6 n6 (1)
sendtofree club10 diamond7 n1 n0 (1)
sendtohome diamond7 heart10 diamond n7 diamond6 n6 (1)
sendtohome diamond8 spade9 diamond n8 diamond7 n7 (1)
sendtohome diamond9 spade10 diamond n9 diamond8 n8 (1)
homefromfreecell diamond10 diamond n10 diamond9 n9 n0 n1 (1)
sendtofree spade9 heart4 n1 n0 (1)
sendtohome-b heart4 heart n4 heart3 n3 n1 n2 (1)
homefromfreecell heart5 heart n5 heart4 n4 n0 n1 (1)
sendtohome-b heart6 heart n6 heart5 n5 n2 n3 (1)
homefromfreecell heart7 heart n7 heart6 n6 n1 n2 (1)
sendtohome heart8 club9 heart n8 heart7 n7 (1)
sendtohome-b heart9 heart n9 heart8 n8 n3 n4 (1)
sendtohome heart10 spade8 heart n10 heart9 n9 (1)
sendtohome-b spade8 spade n8 spade7 n7 n4 n5 (1)
homefromfreecell spade9 spade n9 spade8 n8 n2 n3 (1)
sendtohome-b spade10 spade n10 spade9 n9 n5 n6 (1)
sendtohome-b club9 club n9 club8 n8 n6 n7 (1)
homefromfreecell club10 club n10 club9 n9 n3 n4 (1)
[t=2.34877s, 28952 KB] Plan length: 81 step(s).
[t=2.34877s, 28952 KB] Plan cost: 81
[t=2.34877s, 28952 KB] Expanded 752 state(s).
[t=2.34877s, 28952 KB] Reopened 62 state(s).
[t=2.34877s, 28952 KB] Evaluated 4605 state(s).
[t=2.34877s, 28952 KB] Evaluations: 4605
[t=2.34877s, 28952 KB] Generated 7947 state(s).
[t=2.34877s, 28952 KB] Dead ends: 57 state(s).
[t=2.34877s, 28952 KB] Number of registered states: 4605
[t=2.34877s, 28952 KB] Int hash set load factor: 4605/8192 = 0.562134
[t=2.34877s, 28952 KB] Int hash set resizes: 13
[t=2.34877s, 28952 KB] mean number of q cost that have been adjusted 0 times in relation to total number of q: -1
[t=2.34877s, 28952 KB] mean number of q cost that have been adjusted 1 times in relation to total number of q: -1
[t=2.34877s, 28952 KB] mean number of q cost that have been adjusted 2 times in relation to total number of q: -1
[t=2.34877s, 28952 KB] mean number of q that are at some point overconsitent in relation to total number of q: -1
[t=2.34877s, 28952 KB] mean number of q that are at first underconsisten in relation to total number of q: -1
[t=2.34877s, 28952 KB] mean number of state variables that are not in common between two following states in relation to total number of state variables: -1
[t=2.34877s, 28952 KB] variance number of state variables that are not in common between two following states in relation to total number of state variables: -1
[t=2.34877s, 28952 KB] Search time: 2.1569s
[t=2.34877s, 28952 KB] Total time: 2.34877s
Solution found.
Peak memory: 28952 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: validate domain.pddl problem.pddl sas_plan
