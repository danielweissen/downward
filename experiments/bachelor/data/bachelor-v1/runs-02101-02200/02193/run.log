INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799.95s
INFO     translator memory limit: 3584 MB
INFO     translator command line string: /infai/weidan00/downward/experiments/bachelor/.venv/bin/python3 /infai/weidan00/downward/experiments/bachelor/data/bachelor-v1/code-7aa5f34_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.006s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.002s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.002s wall-clock]
Preparing model... [0.010s CPU, 0.006s wall-clock]
Generated 13 rules.
Computing model... [0.020s CPU, 0.025s wall-clock]
1973 relevant atoms
1207 auxiliary atoms
3180 final queue length
5391 total queue pushes
Completing instantiation... [0.030s CPU, 0.035s wall-clock]
Instantiating: [0.060s CPU, 0.070s wall-clock]
Computing fact groups...
Finding invariants...
6 initial candidates
Finding invariants: [0.000s CPU, 0.001s wall-clock]
Checking invariant weight... [0.010s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
34 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.002s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.020s CPU, 0.027s wall-clock]
17 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
1 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.015s wall-clock]
Reordering and filtering variables...
35 of 35 variables necessary.
0 of 1 mutex groups necessary.
1143 of 1143 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.004s wall-clock]
Translator variables: 35
Translator derived variables: 0
Translator facts: 102
Translator goal facts: 17
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 1143
Translator axioms: 0
Translator task size: 3647
Translator peak memory: 145868 KB
Writing output... [0.010s CPU, 0.012s wall-clock]
Done! [0.130s CPU, 0.139s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1799.76s
INFO     search memory limit: 3584 MB
INFO     search command line string: /infai/weidan00/downward/experiments/bachelor/data/bachelor-v1/code-7aa5f34_e5e41175/builds/release/bin/downward --search 'eager_wastar([add()], w=2)' --internal-plan-file sas_plan < output.sas
[t=6.6595e-05s, 17204 KB] reading input...
[t=0.00443342s, 17376 KB] done reading input!
[t=0.00651575s, 17784 KB] Simplifying 1173 unary operators... done! [1173 unary operators]
[t=0.00707573s, 17784 KB] time to simplify: 0.000635672s
[t=0.00721208s, 17784 KB] Initializing additive heuristic...
[t=0.00734424s, 17784 KB] Building successor generator...done!
[t=0.00769581s, 17916 KB] peak memory difference for successor generator creation: 132 KB
[t=0.00773547s, 17916 KB] time for successor generation creation: 0.00021024s
[t=0.00778787s, 17916 KB] Variables: 35
[t=0.00782744s, 17916 KB] FactPairs: 102
[t=0.0078667s, 17916 KB] Bytes per state: 8
[t=0.00799171s, 17916 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0081097s, 17916 KB] New best heuristic value for add: 67
[t=0.00815312s, 17916 KB] g=0, 1 evaluated, 0 expanded
[t=0.00820417s, 17916 KB] Initial heuristic value for add: 67
[t=0.00824521s, 17916 KB] pruning method: none
[t=0.00832288s, 17916 KB] New best heuristic value for add: 66
[t=0.00836541s, 17916 KB] g=1, 2 evaluated, 1 expanded
[t=0.00861608s, 17916 KB] New best heuristic value for add: 65
[t=0.00865978s, 17916 KB] g=1, 20 evaluated, 1 expanded
[t=0.00875797s, 17916 KB] New best heuristic value for add: 64
[t=0.00879954s, 17916 KB] g=1, 25 evaluated, 1 expanded
[t=0.00896852s, 17916 KB] New best heuristic value for add: 63
[t=0.00901038s, 17916 KB] g=2, 36 evaluated, 2 expanded
[t=0.00946974s, 17916 KB] New best heuristic value for add: 61
[t=0.00951492s, 17916 KB] g=4, 70 evaluated, 4 expanded
[t=0.00959653s, 17916 KB] New best heuristic value for add: 60
[t=0.00963787s, 17916 KB] g=5, 73 evaluated, 5 expanded
[t=0.00985086s, 17916 KB] New best heuristic value for add: 59
[t=0.00989234s, 17916 KB] g=5, 89 evaluated, 5 expanded
[t=0.0101115s, 17916 KB] New best heuristic value for add: 57
[t=0.010155s, 17916 KB] g=6, 104 evaluated, 7 expanded
[t=0.0102484s, 17916 KB] New best heuristic value for add: 55
[t=0.0102909s, 17916 KB] g=7, 108 evaluated, 8 expanded
[t=0.0106835s, 17916 KB] New best heuristic value for add: 53
[t=0.0107278s, 17916 KB] g=8, 138 evaluated, 10 expanded
[t=0.0108077s, 17916 KB] New best heuristic value for add: 52
[t=0.0108493s, 17916 KB] g=9, 141 evaluated, 11 expanded
[t=0.0111208s, 17916 KB] New best heuristic value for add: 51
[t=0.0111639s, 17916 KB] g=9, 162 evaluated, 11 expanded
[t=0.0113236s, 17916 KB] New best heuristic value for add: 50
[t=0.0113661s, 17916 KB] g=10, 172 evaluated, 13 expanded
[t=0.0114256s, 17916 KB] New best heuristic value for add: 49
[t=0.0114664s, 17916 KB] g=11, 173 evaluated, 14 expanded
[t=0.0115412s, 17916 KB] New best heuristic value for add: 47
[t=0.0115821s, 17916 KB] g=11, 176 evaluated, 14 expanded
[t=0.0119556s, 17916 KB] New best heuristic value for add: 46
[t=0.0119991s, 17916 KB] g=12, 206 evaluated, 16 expanded
[t=0.0120597s, 17916 KB] New best heuristic value for add: 45
[t=0.0121015s, 17916 KB] g=13, 207 evaluated, 17 expanded
[t=0.0121767s, 17916 KB] New best heuristic value for add: 43
[t=0.0122179s, 17916 KB] g=13, 210 evaluated, 17 expanded
[t=0.012664s, 17916 KB] New best heuristic value for add: 41
[t=0.0127085s, 17916 KB] g=15, 248 evaluated, 20 expanded
[t=0.0131096s, 17916 KB] New best heuristic value for add: 39
[t=0.0131541s, 17916 KB] g=17, 278 evaluated, 23 expanded
[t=0.0135045s, 17916 KB] New best heuristic value for add: 38
[t=0.013548s, 17916 KB] g=18, 308 evaluated, 24 expanded
[t=0.0140147s, 17916 KB] New best heuristic value for add: 37
[t=0.0140588s, 17916 KB] g=21, 348 evaluated, 27 expanded
[t=0.0142716s, 17916 KB] New best heuristic value for add: 36
[t=0.0143143s, 17916 KB] g=21, 365 evaluated, 27 expanded
[t=0.0144691s, 17916 KB] New best heuristic value for add: 35
[t=0.014511s, 17916 KB] g=22, 376 evaluated, 28 expanded
[t=0.0149164s, 17916 KB] New best heuristic value for add: 34
[t=0.0149605s, 17916 KB] g=24, 410 evaluated, 31 expanded
[t=0.0150773s, 17916 KB] New best heuristic value for add: 33
[t=0.0151185s, 17916 KB] g=25, 417 evaluated, 32 expanded
[t=0.0154355s, 17916 KB] New best heuristic value for add: 32
[t=0.0154775s, 17916 KB] g=26, 444 evaluated, 35 expanded
[t=0.0155659s, 17916 KB] New best heuristic value for add: 31
[t=0.0156064s, 17916 KB] g=27, 448 evaluated, 36 expanded
[t=0.0159541s, 17916 KB] New best heuristic value for add: 30
[t=0.015996s, 17916 KB] g=28, 478 evaluated, 39 expanded
[t=0.0161088s, 17916 KB] New best heuristic value for add: 29
[t=0.0161494s, 17916 KB] g=29, 485 evaluated, 40 expanded
[t=0.0164766s, 17916 KB] New best heuristic value for add: 28
[t=0.0165181s, 17916 KB] g=30, 512 evaluated, 45 expanded
[t=0.0166848s, 17916 KB] New best heuristic value for add: 27
[t=0.0167279s, 17916 KB] g=31, 519 evaluated, 46 expanded
[t=0.0170406s, 17916 KB] New best heuristic value for add: 26
[t=0.0170827s, 17916 KB] g=32, 546 evaluated, 50 expanded
[t=0.0171679s, 17916 KB] New best heuristic value for add: 25
[t=0.0172089s, 17916 KB] g=33, 550 evaluated, 51 expanded
[t=0.0175501s, 17916 KB] New best heuristic value for add: 24
[t=0.0175943s, 17916 KB] g=34, 580 evaluated, 55 expanded
[t=0.0177041s, 17916 KB] New best heuristic value for add: 23
[t=0.0177448s, 17916 KB] g=35, 587 evaluated, 56 expanded
[t=0.0180494s, 17916 KB] New best heuristic value for add: 22
[t=0.0180911s, 17916 KB] g=36, 614 evaluated, 60 expanded
[t=0.0181997s, 17916 KB] New best heuristic value for add: 21
[t=0.0182406s, 17916 KB] g=37, 621 evaluated, 61 expanded
[t=0.0185318s, 17916 KB] New best heuristic value for add: 20
[t=0.0185739s, 17916 KB] g=38, 648 evaluated, 62 expanded
[t=0.018691s, 17916 KB] New best heuristic value for add: 19
[t=0.0187321s, 17916 KB] g=39, 656 evaluated, 63 expanded
[t=0.0190162s, 17916 KB] New best heuristic value for add: 18
[t=0.0190589s, 17916 KB] g=40, 682 evaluated, 66 expanded
[t=0.0192393s, 17916 KB] New best heuristic value for add: 17
[t=0.0192937s, 17916 KB] g=41, 698 evaluated, 67 expanded
[t=0.0195068s, 17916 KB] New best heuristic value for add: 16
[t=0.0195487s, 17916 KB] g=42, 716 evaluated, 70 expanded
[t=0.0197352s, 17916 KB] New best heuristic value for add: 15
[t=0.0197773s, 17916 KB] g=43, 733 evaluated, 71 expanded
[t=0.0199792s, 17916 KB] New best heuristic value for add: 14
[t=0.0200215s, 17916 KB] g=44, 750 evaluated, 74 expanded
[t=0.0202255s, 17916 KB] New best heuristic value for add: 13
[t=0.0202665s, 17916 KB] g=45, 769 evaluated, 75 expanded
[t=0.0204502s, 17916 KB] New best heuristic value for add: 12
[t=0.0204916s, 17916 KB] g=46, 784 evaluated, 78 expanded
[t=0.0206952s, 17916 KB] New best heuristic value for add: 11
[t=0.020736s, 17916 KB] g=47, 804 evaluated, 79 expanded
[t=0.0209109s, 17916 KB] New best heuristic value for add: 10
[t=0.0209522s, 17916 KB] g=48, 818 evaluated, 82 expanded
[t=0.0211874s, 17916 KB] New best heuristic value for add: 9
[t=0.0212388s, 17916 KB] g=49, 840 evaluated, 83 expanded
[t=0.0214155s, 17916 KB] New best heuristic value for add: 8
[t=0.0214598s, 17916 KB] g=50, 852 evaluated, 86 expanded
[t=0.0216918s, 17916 KB] New best heuristic value for add: 7
[t=0.0217348s, 17916 KB] g=51, 876 evaluated, 87 expanded
[t=0.0218662s, 17916 KB] New best heuristic value for add: 6
[t=0.0219083s, 17916 KB] g=52, 886 evaluated, 89 expanded
[t=0.0219969s, 17916 KB] New best heuristic value for add: 5
[t=0.0220387s, 17916 KB] g=53, 890 evaluated, 90 expanded
[t=0.0223205s, 17916 KB] New best heuristic value for add: 4
[t=0.0223631s, 17916 KB] g=54, 920 evaluated, 92 expanded
[t=0.0226627s, 17916 KB] New best heuristic value for add: 3
[t=0.0227059s, 17916 KB] g=55, 944 evaluated, 93 expanded
[t=0.022839s, 17916 KB] New best heuristic value for add: 2
[t=0.0228928s, 17916 KB] g=56, 954 evaluated, 95 expanded
[t=0.0231107s, 17916 KB] New best heuristic value for add: 1
[t=0.023152s, 17916 KB] g=57, 978 evaluated, 96 expanded
[t=0.0232661s, 17916 KB] New best heuristic value for add: 0
[t=0.0233076s, 17916 KB] g=58, 988 evaluated, 97 expanded
[t=0.0233537s, 17916 KB] Solution found!
[t=0.0233991s, 17916 KB] Actual search time: 0.0151427s
up f0 f3 (1)
stop f3 (1)
up f3 f25 (1)
stop f25 (1)
down f25 f8 (1)
stop f8 (1)
up f8 f31 (1)
stop f31 (1)
down f31 f10 (1)
stop f10 (1)
down f10 f4 (1)
stop f4 (1)
up f4 f14 (1)
stop f14 (1)
down f14 f7 (1)
stop f7 (1)
down f7 f3 (1)
stop f3 (1)
down f3 f0 (1)
stop f0 (1)
up f0 f3 (1)
stop f3 (1)
up f3 f15 (1)
stop f15 (1)
down f15 f5 (1)
stop f5 (1)
up f5 f16 (1)
stop f16 (1)
up f16 f17 (1)
stop f17 (1)
down f17 f8 (1)
stop f8 (1)
up f8 f18 (1)
stop f18 (1)
up f18 f19 (1)
stop f19 (1)
down f19 f14 (1)
stop f14 (1)
up f14 f22 (1)
stop f22 (1)
up f22 f23 (1)
stop f23 (1)
up f23 f25 (1)
stop f25 (1)
up f25 f26 (1)
stop f26 (1)
up f26 f28 (1)
stop f28 (1)
up f28 f30 (1)
stop f30 (1)
down f30 f7 (1)
stop f7 (1)
up f7 f31 (1)
stop f31 (1)
up f31 f33 (1)
stop f33 (1)
down f33 f3 (1)
stop f3 (1)
[t=0.0234422s, 17916 KB] Plan length: 58 step(s).
[t=0.0234422s, 17916 KB] Plan cost: 58
[t=0.0234422s, 17916 KB] Expanded 98 state(s).
[t=0.0234422s, 17916 KB] Reopened 0 state(s).
[t=0.0234422s, 17916 KB] Evaluated 988 state(s).
[t=0.0234422s, 17916 KB] Evaluations: 988
[t=0.0234422s, 17916 KB] Generated 3298 state(s).
[t=0.0234422s, 17916 KB] Dead ends: 0 state(s).
[t=0.0234422s, 17916 KB] Number of registered states: 988
[t=0.0234422s, 17916 KB] Int hash set load factor: 988/2048 = 0.482422
[t=0.0234422s, 17916 KB] Int hash set resizes: 11
[t=0.0234422s, 17916 KB] mean number of q cost that have been adjusted 0 times in relation to total number of q: -1
[t=0.0234422s, 17916 KB] mean number of q cost that have been adjusted 1 times in relation to total number of q: -1
[t=0.0234422s, 17916 KB] mean number of q cost that have been adjusted 2 times in relation to total number of q: -1
[t=0.0234422s, 17916 KB] mean number of q that are at some point overconsitent in relation to total number of q: -1
[t=0.0234422s, 17916 KB] mean number of q that are at first underconsisten in relation to total number of q: -1
[t=0.0234422s, 17916 KB] mean number of state variables that are not in common between two following states in relation to total number of state variables: -1
[t=0.0234422s, 17916 KB] variance number of state variables that are not in common between two following states in relation to total number of state variables: -1
[t=0.0234422s, 17916 KB] Search time: 0.0154511s
[t=0.0234422s, 17916 KB] Total time: 0.0234422s
Solution found.
Peak memory: 17916 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: validate domain.pddl problem.pddl sas_plan
