INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799.97s
INFO     translator memory limit: 3584 MB
INFO     translator command line string: /infai/weidan00/downward/experiments/bachelor/.venv/bin/python3 /infai/weidan00/downward/experiments/bachelor/data/bachelor-v1/code-7aa5f34_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.003s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.003s wall-clock]
Preparing model... [0.000s CPU, 0.002s wall-clock]
Generated 51 rules.
Computing model... [0.020s CPU, 0.023s wall-clock]
1072 relevant atoms
1096 auxiliary atoms
2168 final queue length
2585 total queue pushes
Completing instantiation... [0.030s CPU, 0.019s wall-clock]
Instantiating: [0.060s CPU, 0.048s wall-clock]
Computing fact groups...
Finding invariants...
6 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.002s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
0 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.010s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.007s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.010s CPU, 0.017s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
22 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.009s wall-clock]
Reordering and filtering variables...
22 of 22 variables necessary.
0 of 22 mutex groups necessary.
650 of 650 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.002s wall-clock]
Translator variables: 22
Translator derived variables: 0
Translator facts: 275
Translator goal facts: 15
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 650
Translator axioms: 0
Translator task size: 2862
Translator peak memory: 144844 KB
Writing output... [0.010s CPU, 0.008s wall-clock]
Done! [0.100s CPU, 0.097s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1799.82s
INFO     search memory limit: 3584 MB
INFO     search command line string: /infai/weidan00/downward/experiments/bachelor/data/bachelor-v1/code-7aa5f34_e5e41175/builds/release/bin/downward --search 'eager_wastar([add()], w=2)' --internal-plan-file sas_plan < output.sas
[t=5.7966e-05s, 17204 KB] reading input...
[t=0.00333917s, 17352 KB] done reading input!
[t=0.00517707s, 17748 KB] Simplifying 650 unary operators... done! [650 unary operators]
[t=0.00558336s, 17748 KB] time to simplify: 0.000464337s
[t=0.00572222s, 17748 KB] Initializing additive heuristic...
[t=0.00583278s, 17748 KB] Building successor generator...done!
[t=0.00624446s, 17880 KB] peak memory difference for successor generator creation: 132 KB
[t=0.00628683s, 17880 KB] time for successor generation creation: 0.000295011s
[t=0.00633647s, 17880 KB] Variables: 22
[t=0.00637601s, 17880 KB] FactPairs: 275
[t=0.00641556s, 17880 KB] Bytes per state: 12
[t=0.00652811s, 17880 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.00664684s, 17880 KB] New best heuristic value for add: 96
[t=0.0066897s, 17880 KB] g=0, 1 evaluated, 0 expanded
[t=0.00673874s, 17880 KB] Initial heuristic value for add: 96
[t=0.00677926s, 17880 KB] pruning method: none
[t=0.00686919s, 17880 KB] New best heuristic value for add: 95
[t=0.00691117s, 17880 KB] g=1, 3 evaluated, 1 expanded
[t=0.00734518s, 17880 KB] New best heuristic value for add: 94
[t=0.0073866s, 17880 KB] g=2, 30 evaluated, 2 expanded
[t=0.00776906s, 17880 KB] New best heuristic value for add: 93
[t=0.00781023s, 17880 KB] g=3, 57 evaluated, 3 expanded
[t=0.00822913s, 17880 KB] New best heuristic value for add: 92
[t=0.00827087s, 17880 KB] g=4, 84 evaluated, 4 expanded
[t=0.00862678s, 17880 KB] New best heuristic value for add: 91
[t=0.00866752s, 17880 KB] g=5, 109 evaluated, 5 expanded
[t=0.00905061s, 17880 KB] New best heuristic value for add: 90
[t=0.00909154s, 17880 KB] g=6, 135 evaluated, 6 expanded
[t=0.0094677s, 17880 KB] New best heuristic value for add: 89
[t=0.00950906s, 17880 KB] g=7, 161 evaluated, 7 expanded
[t=0.00984261s, 17880 KB] New best heuristic value for add: 88
[t=0.00988327s, 17880 KB] g=8, 184 evaluated, 8 expanded
[t=0.0102366s, 17880 KB] New best heuristic value for add: 87
[t=0.0102772s, 17880 KB] g=9, 208 evaluated, 9 expanded
[t=0.0106248s, 17880 KB] New best heuristic value for add: 86
[t=0.0106656s, 17880 KB] g=10, 232 evaluated, 10 expanded
[t=0.010977s, 17880 KB] New best heuristic value for add: 85
[t=0.0110179s, 17880 KB] g=11, 253 evaluated, 11 expanded
[t=0.0113626s, 17880 KB] New best heuristic value for add: 84
[t=0.0114032s, 17880 KB] g=12, 275 evaluated, 12 expanded
[t=0.0117219s, 17880 KB] New best heuristic value for add: 83
[t=0.0117624s, 17880 KB] g=13, 297 evaluated, 13 expanded
[t=0.0120625s, 17880 KB] New best heuristic value for add: 82
[t=0.012103s, 17880 KB] g=14, 317 evaluated, 14 expanded
[t=0.0124055s, 17880 KB] New best heuristic value for add: 81
[t=0.0124451s, 17880 KB] g=15, 338 evaluated, 15 expanded
[t=0.0127785s, 17880 KB] New best heuristic value for add: 80
[t=0.0128243s, 17880 KB] g=16, 362 evaluated, 16 expanded
[t=0.0130621s, 17880 KB] New best heuristic value for add: 79
[t=0.0131019s, 17880 KB] g=17, 378 evaluated, 17 expanded
[t=0.013344s, 17880 KB] New best heuristic value for add: 78
[t=0.0133835s, 17880 KB] g=18, 394 evaluated, 18 expanded
[t=0.0136592s, 17880 KB] New best heuristic value for add: 77
[t=0.0136989s, 17880 KB] g=19, 413 evaluated, 19 expanded
[t=0.0138573s, 17880 KB] New best heuristic value for add: 76
[t=0.0138961s, 17880 KB] g=20, 422 evaluated, 20 expanded
[t=0.0141445s, 17880 KB] New best heuristic value for add: 75
[t=0.0141836s, 17880 KB] g=21, 439 evaluated, 21 expanded
[t=0.014446s, 17880 KB] New best heuristic value for add: 74
[t=0.0144859s, 17880 KB] g=22, 457 evaluated, 22 expanded
[t=0.0147995s, 17880 KB] New best heuristic value for add: 73
[t=0.0148393s, 17880 KB] g=23, 478 evaluated, 23 expanded
[t=0.0151164s, 17880 KB] New best heuristic value for add: 72
[t=0.0151567s, 17880 KB] g=24, 497 evaluated, 24 expanded
[t=0.0154771s, 17880 KB] New best heuristic value for add: 71
[t=0.0155178s, 17880 KB] g=25, 516 evaluated, 25 expanded
[t=0.0158286s, 17880 KB] New best heuristic value for add: 70
[t=0.0158691s, 17880 KB] g=26, 537 evaluated, 26 expanded
[t=0.0161605s, 17880 KB] New best heuristic value for add: 69
[t=0.0161999s, 17880 KB] g=27, 557 evaluated, 27 expanded
[t=0.0165006s, 17880 KB] New best heuristic value for add: 68
[t=0.016545s, 17880 KB] g=28, 578 evaluated, 28 expanded
[t=0.0169687s, 17880 KB] New best heuristic value for add: 67
[t=0.017009s, 17880 KB] g=29, 609 evaluated, 29 expanded
[t=0.0172453s, 17880 KB] New best heuristic value for add: 66
[t=0.0172848s, 17880 KB] g=30, 625 evaluated, 30 expanded
[t=0.0175758s, 17880 KB] New best heuristic value for add: 65
[t=0.0176155s, 17880 KB] g=31, 645 evaluated, 31 expanded
[t=0.0179377s, 17880 KB] New best heuristic value for add: 64
[t=0.0179778s, 17880 KB] g=32, 668 evaluated, 32 expanded
[t=0.0184454s, 17880 KB] New best heuristic value for add: 63
[t=0.0184863s, 17880 KB] g=33, 702 evaluated, 34 expanded
[t=0.0187554s, 17880 KB] New best heuristic value for add: 62
[t=0.0187954s, 17880 KB] g=34, 721 evaluated, 35 expanded
[t=0.0190823s, 17880 KB] New best heuristic value for add: 61
[t=0.0191235s, 17880 KB] g=36, 741 evaluated, 37 expanded
[t=0.0194278s, 17880 KB] New best heuristic value for add: 60
[t=0.0194678s, 17880 KB] g=37, 762 evaluated, 38 expanded
[t=0.0197923s, 17880 KB] New best heuristic value for add: 59
[t=0.0198329s, 17880 KB] g=38, 785 evaluated, 39 expanded
[t=0.0204116s, 17880 KB] New best heuristic value for add: 58
[t=0.020453s, 17880 KB] g=38, 828 evaluated, 41 expanded
[t=0.0207647s, 17880 KB] New best heuristic value for add: 57
[t=0.0208048s, 17880 KB] g=39, 850 evaluated, 42 expanded
[t=0.0211467s, 17880 KB] New best heuristic value for add: 56
[t=0.0211873s, 17880 KB] g=40, 874 evaluated, 43 expanded
[t=0.0225437s, 17880 KB] New best heuristic value for add: 55
[t=0.0225855s, 17880 KB] g=42, 981 evaluated, 48 expanded
[t=0.0229121s, 17880 KB] New best heuristic value for add: 54
[t=0.0229525s, 17880 KB] g=43, 1004 evaluated, 49 expanded
[t=0.0234032s, 17880 KB] New best heuristic value for add: 53
[t=0.0234439s, 17880 KB] g=44, 1029 evaluated, 50 expanded
[t=0.023989s, 17880 KB] New best heuristic value for add: 52
[t=0.0240304s, 17880 KB] g=45, 1070 evaluated, 51 expanded
[t=0.0251911s, 17880 KB] New best heuristic value for add: 51
[t=0.0252335s, 17880 KB] g=47, 1162 evaluated, 56 expanded
[t=0.0255701s, 17880 KB] New best heuristic value for add: 50
[t=0.0256104s, 17880 KB] g=48, 1186 evaluated, 57 expanded
[t=0.0259664s, 17880 KB] New best heuristic value for add: 49
[t=0.0260073s, 17880 KB] g=49, 1212 evaluated, 58 expanded
[t=0.0264648s, 17880 KB] New best heuristic value for add: 48
[t=0.0265051s, 17880 KB] g=50, 1246 evaluated, 59 expanded
[t=0.0268195s, 17880 KB] New best heuristic value for add: 47
[t=0.0268597s, 17880 KB] g=51, 1269 evaluated, 60 expanded
[t=0.0271772s, 17880 KB] New best heuristic value for add: 46
[t=0.0272171s, 17880 KB] g=52, 1291 evaluated, 61 expanded
[t=0.0275825s, 17880 KB] New best heuristic value for add: 45
[t=0.027623s, 17880 KB] g=53, 1318 evaluated, 62 expanded
[t=0.0279244s, 17880 KB] New best heuristic value for add: 44
[t=0.0279642s, 17880 KB] g=54, 1340 evaluated, 63 expanded
[t=0.0282851s, 17880 KB] New best heuristic value for add: 43
[t=0.0283249s, 17880 KB] g=55, 1363 evaluated, 64 expanded
[t=0.0286602s, 17880 KB] New best heuristic value for add: 42
[t=0.0287004s, 17880 KB] g=56, 1388 evaluated, 65 expanded
[t=0.029035s, 17880 KB] New best heuristic value for add: 41
[t=0.0290754s, 17880 KB] g=57, 1412 evaluated, 66 expanded
[t=0.0294231s, 17880 KB] New best heuristic value for add: 40
[t=0.0294631s, 17880 KB] g=58, 1438 evaluated, 67 expanded
[t=0.0297282s, 17880 KB] New best heuristic value for add: 39
[t=0.0297677s, 17880 KB] g=59, 1457 evaluated, 68 expanded
[t=0.0305721s, 17880 KB] New best heuristic value for add: 38
[t=0.0306148s, 17880 KB] g=60, 1521 evaluated, 71 expanded
[t=0.0309344s, 17880 KB] New best heuristic value for add: 37
[t=0.0309764s, 17880 KB] g=61, 1544 evaluated, 72 expanded
[t=0.031124s, 17880 KB] New best heuristic value for add: 36
[t=0.0311634s, 17880 KB] g=62, 1553 evaluated, 73 expanded
[t=0.0314495s, 17880 KB] New best heuristic value for add: 35
[t=0.0314893s, 17880 KB] g=63, 1574 evaluated, 74 expanded
[t=0.0317907s, 17880 KB] New best heuristic value for add: 34
[t=0.0318318s, 17880 KB] g=64, 1596 evaluated, 75 expanded
[t=0.0322413s, 17880 KB] New best heuristic value for add: 33
[t=0.0322815s, 17880 KB] g=65, 1628 evaluated, 76 expanded
[t=0.0328242s, 17880 KB] New best heuristic value for add: 32
[t=0.0328648s, 17880 KB] g=66, 1672 evaluated, 78 expanded
[t=0.0331118s, 17880 KB] New best heuristic value for add: 31
[t=0.0331524s, 17880 KB] g=67, 1690 evaluated, 79 expanded
[t=0.0334095s, 17880 KB] New best heuristic value for add: 30
[t=0.0334492s, 17880 KB] g=68, 1709 evaluated, 80 expanded
[t=0.0336367s, 17880 KB] New best heuristic value for add: 29
[t=0.0336802s, 17880 KB] g=69, 1722 evaluated, 81 expanded
[t=0.0339792s, 17880 KB] New best heuristic value for add: 28
[t=0.0340187s, 17880 KB] g=70, 1745 evaluated, 82 expanded
[t=0.0343199s, 17880 KB] New best heuristic value for add: 27
[t=0.0343598s, 17880 KB] g=71, 1768 evaluated, 83 expanded
[t=0.0348362s, 17880 KB] New best heuristic value for add: 26
[t=0.0348763s, 17880 KB] g=72, 1807 evaluated, 84 expanded
[t=0.0361744s, 17880 KB] New best heuristic value for add: 25
[t=0.0362165s, 17880 KB] g=74, 1921 evaluated, 90 expanded
[t=0.0364959s, 17880 KB] New best heuristic value for add: 24
[t=0.0365361s, 17880 KB] g=75, 1943 evaluated, 91 expanded
[t=0.0368517s, 17880 KB] New best heuristic value for add: 23
[t=0.0368916s, 17880 KB] g=76, 1968 evaluated, 92 expanded
[t=0.0386156s, 17880 KB] New best heuristic value for add: 22
[t=0.0386589s, 17880 KB] g=78, 2102 evaluated, 98 expanded
[t=0.0389717s, 17880 KB] New best heuristic value for add: 21
[t=0.0390123s, 17880 KB] g=79, 2127 evaluated, 99 expanded
[t=0.0393404s, 17880 KB] New best heuristic value for add: 20
[t=0.0393804s, 17880 KB] g=80, 2154 evaluated, 100 expanded
[t=0.0398312s, 17880 KB] New best heuristic value for add: 19
[t=0.0398713s, 17880 KB] g=81, 2193 evaluated, 101 expanded
[t=0.040107s, 17880 KB] New best heuristic value for add: 18
[t=0.0401471s, 17880 KB] g=82, 2213 evaluated, 102 expanded
[t=0.0404746s, 17880 KB] New best heuristic value for add: 17
[t=0.0405146s, 17880 KB] g=83, 2242 evaluated, 103 expanded
[t=0.0408095s, 17880 KB] New best heuristic value for add: 16
[t=0.0408487s, 17880 KB] g=84, 2269 evaluated, 104 expanded
[t=0.040989s, 17880 KB] New best heuristic value for add: 15
[t=0.0410276s, 17880 KB] g=85, 2280 evaluated, 105 expanded
[t=0.0412849s, 17880 KB] New best heuristic value for add: 14
[t=0.0413288s, 17880 KB] g=86, 2303 evaluated, 106 expanded
[t=0.0416134s, 17880 KB] New best heuristic value for add: 13
[t=0.0416535s, 17880 KB] g=87, 2329 evaluated, 107 expanded
[t=0.0420017s, 17880 KB] New best heuristic value for add: 12
[t=0.0420408s, 17880 KB] g=88, 2363 evaluated, 108 expanded
[t=0.0423061s, 17880 KB] New best heuristic value for add: 11
[t=0.0423459s, 17880 KB] g=89, 2388 evaluated, 109 expanded
[t=0.0425669s, 17880 KB] New best heuristic value for add: 10
[t=0.0426057s, 17880 KB] g=90, 2409 evaluated, 110 expanded
[t=0.0428518s, 17880 KB] New best heuristic value for add: 9
[t=0.0428914s, 17880 KB] g=91, 2432 evaluated, 111 expanded
[t=0.0435816s, 17880 KB] New best heuristic value for add: 8
[t=0.0436223s, 17880 KB] g=93, 2507 evaluated, 115 expanded
[t=0.0438561s, 17880 KB] New best heuristic value for add: 7
[t=0.0438957s, 17880 KB] g=94, 2529 evaluated, 116 expanded
[t=0.0441551s, 17880 KB] New best heuristic value for add: 6
[t=0.0441946s, 17880 KB] g=95, 2554 evaluated, 117 expanded
[t=0.0453374s, 17880 KB] New best heuristic value for add: 5
[t=0.0453788s, 17880 KB] g=97, 2688 evaluated, 123 expanded
[t=0.0455963s, 17880 KB] New best heuristic value for add: 4
[t=0.0456357s, 17880 KB] g=98, 2711 evaluated, 124 expanded
[t=0.0458553s, 17880 KB] New best heuristic value for add: 3
[t=0.0458949s, 17880 KB] g=99, 2736 evaluated, 125 expanded
[t=0.0468913s, 17880 KB] New best heuristic value for add: 2
[t=0.0469324s, 17880 KB] g=101, 2892 evaluated, 132 expanded
[t=0.0471011s, 17880 KB] New best heuristic value for add: 1
[t=0.0471405s, 17880 KB] g=102, 2914 evaluated, 133 expanded
[t=0.0473041s, 17880 KB] New best heuristic value for add: 0
[t=0.0473429s, 17880 KB] g=103, 2940 evaluated, 134 expanded
[t=0.0474119s, 17880 KB] Solution found!
[t=0.0474553s, 17880 KB] Actual search time: 0.0406699s
load-truck obj53 tru5 pos5 (1)
drive-truck tru5 pos5 apt5 cit5 (1)
unload-truck obj53 tru5 apt5 (1)
load-truck obj43 tru4 pos4 (1)
drive-truck tru4 pos4 apt4 cit4 (1)
unload-truck obj43 tru4 apt4 (1)
load-truck obj33 tru3 pos3 (1)
drive-truck tru3 pos3 apt3 cit3 (1)
unload-truck obj33 tru3 apt3 (1)
load-truck obj23 tru2 pos2 (1)
drive-truck tru2 pos2 apt2 cit2 (1)
unload-truck obj23 tru2 apt2 (1)
load-truck obj13 tru1 pos1 (1)
drive-truck tru1 pos1 apt1 cit1 (1)
unload-truck obj13 tru1 apt1 (1)
load-airplane obj23 apn2 apt2 (1)
fly-airplane apn2 apt2 apt4 (1)
load-airplane obj43 apn2 apt4 (1)
unload-airplane obj23 apn2 apt4 (1)
load-truck obj23 tru4 apt4 (1)
drive-truck tru4 apt4 pos4 cit4 (1)
load-truck obj42 tru4 pos4 (1)
load-truck obj41 tru4 pos4 (1)
drive-truck tru4 pos4 apt4 cit4 (1)
unload-truck obj42 tru4 apt4 (1)
unload-truck obj41 tru4 apt4 (1)
drive-truck tru4 apt4 pos4 cit4 (1)
unload-truck obj23 tru4 pos4 (1)
load-airplane obj42 apn2 apt4 (1)
fly-airplane apn2 apt4 apt2 (1)
unload-airplane obj42 apn2 apt2 (1)
fly-airplane apn1 apt5 apt4 (1)
load-airplane obj41 apn1 apt4 (1)
fly-airplane apn1 apt4 apt3 (1)
drive-truck tru5 apt5 pos5 cit5 (1)
load-truck obj52 tru5 pos5 (1)
load-truck obj51 tru5 pos5 (1)
drive-truck tru5 pos5 apt5 cit5 (1)
unload-truck obj52 tru5 apt5 (1)
unload-truck obj51 tru5 apt5 (1)
drive-truck tru3 apt3 pos3 cit3 (1)
load-truck obj31 tru3 pos3 (1)
drive-truck tru3 pos3 apt3 cit3 (1)
unload-truck obj31 tru3 apt3 (1)
load-airplane obj31 apn1 apt3 (1)
drive-truck tru2 apt2 pos2 cit2 (1)
load-truck obj22 tru2 pos2 (1)
drive-truck tru2 pos2 apt2 cit2 (1)
unload-truck obj22 tru2 apt2 (1)
load-airplane obj22 apn2 apt2 (1)
fly-airplane apn2 apt2 apt5 (1)
load-airplane obj53 apn2 apt5 (1)
load-airplane obj52 apn2 apt5 (1)
fly-airplane apn2 apt5 apt2 (1)
unload-airplane obj53 apn2 apt2 (1)
fly-airplane apn2 apt2 apt4 (1)
unload-airplane obj52 apn2 apt4 (1)
unload-airplane obj22 apn2 apt4 (1)
fly-airplane apn2 apt4 apt5 (1)
load-airplane obj51 apn2 apt5 (1)
unload-airplane obj43 apn2 apt5 (1)
load-truck obj43 tru5 apt5 (1)
drive-truck tru5 apt5 pos5 cit5 (1)
unload-truck obj43 tru5 pos5 (1)
fly-airplane apn2 apt5 apt2 (1)
fly-airplane apn1 apt3 apt1 (1)
fly-airplane apn2 apt2 apt3 (1)
unload-airplane obj51 apn2 apt3 (1)
load-truck obj51 tru3 apt3 (1)
drive-truck tru3 apt3 pos3 cit3 (1)
unload-truck obj51 tru3 pos3 (1)
unload-airplane obj41 apn1 apt1 (1)
drive-truck tru2 apt2 pos2 cit2 (1)
load-truck obj21 tru2 pos2 (1)
drive-truck tru2 pos2 apt2 cit2 (1)
unload-truck obj21 tru2 apt2 (1)
drive-truck tru1 apt1 pos1 cit1 (1)
load-truck obj12 tru1 pos1 (1)
drive-truck tru1 pos1 apt1 cit1 (1)
unload-truck obj12 tru1 apt1 (1)
load-airplane obj12 apn1 apt1 (1)
fly-airplane apn1 apt1 apt2 (1)
load-airplane obj21 apn1 apt2 (1)
unload-airplane obj12 apn1 apt2 (1)
load-truck obj12 tru2 apt2 (1)
drive-truck tru2 apt2 pos2 cit2 (1)
unload-truck obj12 tru2 pos2 (1)
fly-airplane apn1 apt2 apt3 (1)
unload-airplane obj21 apn1 apt3 (1)
fly-airplane apn1 apt3 apt4 (1)
unload-airplane obj31 apn1 apt4 (1)
drive-truck tru3 pos3 apt3 cit3 (1)
load-truck obj21 tru3 apt3 (1)
drive-truck tru3 apt3 pos3 cit3 (1)
unload-truck obj21 tru3 pos3 (1)
drive-truck tru1 apt1 pos1 cit1 (1)
load-truck obj11 tru1 pos1 (1)
drive-truck tru1 pos1 apt1 cit1 (1)
unload-truck obj11 tru1 apt1 (1)
fly-airplane apn2 apt3 apt1 (1)
load-airplane obj11 apn2 apt1 (1)
fly-airplane apn2 apt1 apt3 (1)
unload-airplane obj11 apn2 apt3 (1)
[t=0.0474952s, 17880 KB] Plan length: 103 step(s).
[t=0.0474952s, 17880 KB] Plan cost: 103
[t=0.0474952s, 17880 KB] Expanded 135 state(s).
[t=0.0474952s, 17880 KB] Reopened 0 state(s).
[t=0.0474952s, 17880 KB] Evaluated 2947 state(s).
[t=0.0474952s, 17880 KB] Evaluations: 2947
[t=0.0474952s, 17880 KB] Generated 3251 state(s).
[t=0.0474952s, 17880 KB] Dead ends: 0 state(s).
[t=0.0474952s, 17880 KB] Number of registered states: 2947
[t=0.0474952s, 17880 KB] Int hash set load factor: 2947/4096 = 0.719482
[t=0.0474952s, 17880 KB] Int hash set resizes: 12
[t=0.0474952s, 17880 KB] mean number of q cost that have been adjusted 0 times in relation to total number of q: -1
[t=0.0474952s, 17880 KB] mean number of q cost that have been adjusted 1 times in relation to total number of q: -1
[t=0.0474952s, 17880 KB] mean number of q cost that have been adjusted 2 times in relation to total number of q: -1
[t=0.0474952s, 17880 KB] mean number of q that are at some point overconsitent in relation to total number of q: -1
[t=0.0474952s, 17880 KB] mean number of q that are at first underconsisten in relation to total number of q: -1
[t=0.0474952s, 17880 KB] mean number of state variables that are not in common between two following states in relation to total number of state variables: -1
[t=0.0474952s, 17880 KB] variance number of state variables that are not in common between two following states in relation to total number of state variables: -1
[t=0.0474952s, 17880 KB] Search time: 0.0409678s
[t=0.0474952s, 17880 KB] Total time: 0.0474952s
Solution found.
Peak memory: 17880 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: validate domain.pddl problem.pddl sas_plan
