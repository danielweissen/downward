INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799.96s
INFO     translator memory limit: 3584 MB
INFO     translator command line string: /infai/weidan00/downward/experiments/bachelor/.venv/bin/python3 /infai/weidan00/downward/experiments/bachelor/data/bachelor-v1/code-7aa5f34_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.004s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.003s wall-clock]
Preparing model... [0.000s CPU, 0.003s wall-clock]
Generated 51 rules.
Computing model... [0.090s CPU, 0.090s wall-clock]
6480 relevant atoms
3325 auxiliary atoms
9805 final queue length
13920 total queue pushes
Completing instantiation... [0.170s CPU, 0.171s wall-clock]
Instantiating: [0.260s CPU, 0.271s wall-clock]
Computing fact groups...
Finding invariants...
6 initial candidates
Finding invariants: [0.010s CPU, 0.003s wall-clock]
Checking invariant weight... [0.000s CPU, 0.001s wall-clock]
Instantiating groups... [0.010s CPU, 0.015s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.001s wall-clock]
Choosing groups...
0 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.030s CPU, 0.031s wall-clock]
Building STRIPS to SAS dictionary... [0.010s CPU, 0.001s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.008s wall-clock]
Translating task: [0.140s CPU, 0.143s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
65 propositions removed
Detecting unreachable propositions: [0.110s CPU, 0.103s wall-clock]
Reordering and filtering variables...
58 of 65 variables necessary.
0 of 65 mutex groups necessary.
2810 of 4980 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.015s wall-clock]
Translator variables: 58
Translator derived variables: 0
Translator facts: 651
Translator goal facts: 8
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 2810
Translator axioms: 0
Translator task size: 11627
Translator peak memory: 159948 KB
Writing output... [0.020s CPU, 0.026s wall-clock]
Done! [0.600s CPU, 0.605s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1799.3s
INFO     search memory limit: 3584 MB
INFO     search command line string: /infai/weidan00/downward/experiments/bachelor/data/bachelor-v1/code-7aa5f34_e5e41175/builds/release/bin/downward --search 'eager_wastar([add()], w=2)' --internal-plan-file sas_plan < output.sas
[t=6.6758e-05s, 17204 KB] reading input...
[t=0.0149017s, 18004 KB] done reading input!
[t=0.017425s, 18444 KB] Simplifying 2810 unary operators... done! [2810 unary operators]
[t=0.0189606s, 18708 KB] time to simplify: 0.00166448s
[t=0.0194105s, 18708 KB] Initializing additive heuristic...
[t=0.0195732s, 18708 KB] Building successor generator...done!
[t=0.0213187s, 18996 KB] peak memory difference for successor generator creation: 288 KB
[t=0.0213627s, 18996 KB] time for successor generation creation: 0.00160382s
[t=0.0214348s, 18996 KB] Variables: 58
[t=0.0214752s, 18996 KB] FactPairs: 651
[t=0.021515s, 18996 KB] Bytes per state: 20
[t=0.0216669s, 18996 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0218292s, 18996 KB] New best heuristic value for add: 48
[t=0.0218747s, 18996 KB] g=0, 1 evaluated, 0 expanded
[t=0.0219275s, 18996 KB] Initial heuristic value for add: 48
[t=0.0219769s, 18996 KB] pruning method: none
[t=0.0221967s, 18996 KB] New best heuristic value for add: 47
[t=0.0222399s, 18996 KB] g=1, 4 evaluated, 1 expanded
[t=0.0270793s, 18996 KB] New best heuristic value for add: 46
[t=0.0271338s, 18996 KB] g=2, 144 evaluated, 2 expanded
[t=0.0315323s, 18996 KB] New best heuristic value for add: 45
[t=0.0315852s, 18996 KB] g=3, 280 evaluated, 3 expanded
[t=0.0360459s, 18996 KB] New best heuristic value for add: 44
[t=0.0360987s, 18996 KB] g=4, 420 evaluated, 4 expanded
[t=0.040667s, 18996 KB] New best heuristic value for add: 43
[t=0.0407209s, 18996 KB] g=5, 561 evaluated, 5 expanded
[t=0.0451265s, 18996 KB] New best heuristic value for add: 42
[t=0.0451929s, 18996 KB] g=6, 699 evaluated, 6 expanded
[t=0.0498295s, 18996 KB] New best heuristic value for add: 41
[t=0.0498941s, 18996 KB] g=7, 845 evaluated, 7 expanded
[t=0.0544857s, 18996 KB] New best heuristic value for add: 40
[t=0.0545374s, 18996 KB] g=8, 988 evaluated, 8 expanded
[t=0.0589385s, 18996 KB] New best heuristic value for add: 39
[t=0.0589878s, 18996 KB] g=9, 1129 evaluated, 9 expanded
[t=0.0638048s, 18996 KB] New best heuristic value for add: 38
[t=0.0638573s, 18996 KB] g=10, 1280 evaluated, 10 expanded
[t=0.0683734s, 18996 KB] New best heuristic value for add: 37
[t=0.0684284s, 18996 KB] g=11, 1426 evaluated, 11 expanded
[t=0.0728593s, 18996 KB] New best heuristic value for add: 36
[t=0.0729183s, 18996 KB] g=12, 1566 evaluated, 12 expanded
[t=0.0776819s, 18996 KB] New best heuristic value for add: 35
[t=0.0777481s, 18996 KB] g=13, 1717 evaluated, 13 expanded
[t=0.0826195s, 18996 KB] New best heuristic value for add: 34
[t=0.0826875s, 18996 KB] g=14, 1864 evaluated, 14 expanded
[t=0.0876619s, 18996 KB] New best heuristic value for add: 33
[t=0.0877497s, 18996 KB] g=15, 2010 evaluated, 15 expanded
[t=0.0956182s, 18996 KB] New best heuristic value for add: 32
[t=0.095697s, 18996 KB] g=16, 2262 evaluated, 16 expanded
[t=0.0999277s, 18996 KB] New best heuristic value for add: 31
[t=0.099991s, 18996 KB] g=17, 2409 evaluated, 17 expanded
[t=0.103951s, 18996 KB] New best heuristic value for add: 30
[t=0.104018s, 18996 KB] g=18, 2548 evaluated, 18 expanded
[t=0.108105s, 18996 KB] New best heuristic value for add: 29
[t=0.108175s, 18996 KB] g=19, 2685 evaluated, 19 expanded
[t=0.111049s, 18996 KB] New best heuristic value for add: 28
[t=0.111124s, 18996 KB] g=20, 2780 evaluated, 20 expanded
[t=0.115427s, 18996 KB] New best heuristic value for add: 27
[t=0.115494s, 18996 KB] g=21, 2924 evaluated, 21 expanded
[t=0.119613s, 18996 KB] New best heuristic value for add: 26
[t=0.119694s, 18996 KB] g=22, 3063 evaluated, 22 expanded
[t=0.125474s, 18996 KB] New best heuristic value for add: 25
[t=0.12554s, 18996 KB] g=23, 3255 evaluated, 23 expanded
[t=0.130057s, 18996 KB] New best heuristic value for add: 24
[t=0.130133s, 18996 KB] g=24, 3399 evaluated, 24 expanded
[t=0.134558s, 18996 KB] New best heuristic value for add: 23
[t=0.134646s, 18996 KB] g=25, 3549 evaluated, 25 expanded
[t=0.138656s, 18996 KB] New best heuristic value for add: 22
[t=0.138733s, 18996 KB] g=26, 3690 evaluated, 26 expanded
[t=0.142782s, 18996 KB] New best heuristic value for add: 21
[t=0.142839s, 18996 KB] g=27, 3833 evaluated, 27 expanded
[t=0.144797s, 18996 KB] New best heuristic value for add: 20
[t=0.14485s, 18996 KB] g=28, 3889 evaluated, 28 expanded
[t=0.14888s, 18996 KB] New best heuristic value for add: 19
[t=0.148962s, 18996 KB] g=29, 4032 evaluated, 29 expanded
[t=0.152791s, 18996 KB] New best heuristic value for add: 18
[t=0.15287s, 18996 KB] g=30, 4174 evaluated, 30 expanded
[t=0.159344s, 18996 KB] New best heuristic value for add: 17
[t=0.159402s, 18996 KB] g=31, 4421 evaluated, 31 expanded
[t=0.163051s, 18996 KB] New best heuristic value for add: 16
[t=0.163137s, 18996 KB] g=32, 4562 evaluated, 32 expanded
[t=0.166684s, 18996 KB] New best heuristic value for add: 15
[t=0.166763s, 18996 KB] g=33, 4702 evaluated, 33 expanded
[t=0.169077s, 18996 KB] New best heuristic value for add: 14
[t=0.169124s, 18996 KB] g=34, 4795 evaluated, 34 expanded
[t=0.172686s, 18996 KB] New best heuristic value for add: 13
[t=0.172767s, 18996 KB] g=35, 4940 evaluated, 35 expanded
[t=0.176172s, 18996 KB] New best heuristic value for add: 12
[t=0.176256s, 18996 KB] g=36, 5080 evaluated, 36 expanded
[t=0.398194s, 19396 KB] New best heuristic value for add: 11
[t=0.39831s, 19396 KB] g=38, 14471 evaluated, 128 expanded
[t=0.402852s, 19652 KB] New best heuristic value for add: 10
[t=0.402942s, 19652 KB] g=39, 14617 evaluated, 129 expanded
[t=0.406063s, 19652 KB] New best heuristic value for add: 9
[t=0.406121s, 19652 KB] g=40, 14755 evaluated, 130 expanded
[t=0.409245s, 19652 KB] New best heuristic value for add: 8
[t=0.409301s, 19652 KB] g=41, 14894 evaluated, 131 expanded
[t=0.412386s, 19652 KB] New best heuristic value for add: 7
[t=0.41244s, 19652 KB] g=42, 15033 evaluated, 132 expanded
[t=0.415223s, 19652 KB] New best heuristic value for add: 6
[t=0.415276s, 19652 KB] g=43, 15171 evaluated, 133 expanded
[t=0.417536s, 19652 KB] New best heuristic value for add: 5
[t=0.417585s, 19652 KB] g=44, 15293 evaluated, 134 expanded
[t=0.420129s, 19652 KB] New best heuristic value for add: 4
[t=0.42018s, 19652 KB] g=45, 15437 evaluated, 135 expanded
[t=0.422752s, 19652 KB] New best heuristic value for add: 3
[t=0.422805s, 19652 KB] g=46, 15579 evaluated, 136 expanded
[t=0.442832s, 19656 KB] New best heuristic value for add: 2
[t=0.442922s, 19656 KB] g=48, 16775 evaluated, 145 expanded
[t=0.445608s, 19656 KB] New best heuristic value for add: 1
[t=0.445664s, 19656 KB] g=49, 16922 evaluated, 146 expanded
[t=0.448081s, 19656 KB] New best heuristic value for add: 0
[t=0.448126s, 19656 KB] g=50, 17071 evaluated, 147 expanded
[t=0.449628s, 19656 KB] Solution found!
[t=0.449682s, 19656 KB] Actual search time: 0.4277s
load-truck package15 truck9 city1-2 (1)
drive-truck truck9 city1-2 city1-3 city1 (1)
unload-truck package15 truck9 city1-3 (1)
load-truck package13 truck8 city1-1 (1)
drive-truck truck8 city1-1 city1-3 city1 (1)
unload-truck package13 truck8 city1-3 (1)
load-truck package14 truck5 city3-1 (1)
drive-truck truck5 city3-1 city3-3 city3 (1)
unload-truck package14 truck5 city3-3 (1)
load-truck package9 truck44 city3-2 (1)
drive-truck truck44 city3-2 city3-3 city3 (1)
unload-truck package9 truck44 city3-3 (1)
load-truck package12 truck42 city1-1 (1)
drive-truck truck42 city1-1 city1-3 city1 (1)
unload-truck package12 truck42 city1-3 (1)
load-airplane package15 plane5 city1-3 (1)
load-airplane package13 plane5 city1-3 (1)
fly-airplane plane5 city1-3 city4-3 (1)
unload-airplane package15 plane5 city4-3 (1)
load-truck package15 truck25 city4-3 (1)
drive-truck truck25 city4-3 city4-2 city4 (1)
unload-truck package15 truck25 city4-2 (1)
unload-airplane package13 plane5 city4-3 (1)
fly-airplane plane5 city4-3 city1-3 (1)
load-airplane package12 plane5 city1-3 (1)
fly-airplane plane5 city1-3 city2-3 (1)
unload-airplane package12 plane5 city2-3 (1)
load-truck package12 truck38 city2-3 (1)
drive-truck truck38 city2-3 city2-2 city2 (1)
unload-truck package12 truck38 city2-2 (1)
load-airplane package9 plane2 city3-3 (1)
fly-airplane plane2 city3-3 city4-3 (1)
unload-airplane package9 plane2 city4-3 (1)
load-truck package9 truck20 city4-3 (1)
drive-truck truck20 city4-3 city4-2 city4 (1)
unload-truck package9 truck20 city4-2 (1)
fly-airplane plane5 city2-3 city3-3 (1)
load-airplane package14 plane5 city3-3 (1)
load-airplane package11 plane5 city3-3 (1)
fly-airplane plane5 city3-3 city2-3 (1)
unload-airplane package11 plane5 city2-3 (1)
fly-airplane plane5 city2-3 city4-3 (1)
unload-airplane package14 plane5 city4-3 (1)
load-truck package14 truck14 city4-3 (1)
drive-truck truck14 city4-3 city4-2 city4 (1)
unload-truck package14 truck14 city4-2 (1)
drive-truck truck6 city2-2 city2-3 city2 (1)
load-truck package11 truck6 city2-3 (1)
drive-truck truck6 city2-3 city2-1 city2 (1)
unload-truck package11 truck6 city2-1 (1)
[t=0.449724s, 19656 KB] Plan length: 50 step(s).
[t=0.449724s, 19656 KB] Plan cost: 50
[t=0.449724s, 19656 KB] Expanded 148 state(s).
[t=0.449724s, 19656 KB] Reopened 0 state(s).
[t=0.449724s, 19656 KB] Evaluated 17212 state(s).
[t=0.449724s, 19656 KB] Evaluations: 17212
[t=0.449724s, 19656 KB] Generated 21659 state(s).
[t=0.449724s, 19656 KB] Dead ends: 0 state(s).
[t=0.449724s, 19656 KB] Number of registered states: 17212
[t=0.449724s, 19656 KB] Int hash set load factor: 17212/32768 = 0.525269
[t=0.449724s, 19656 KB] Int hash set resizes: 15
[t=0.449724s, 19656 KB] mean number of q cost that have been adjusted 0 times in relation to total number of q: -1
[t=0.449724s, 19656 KB] mean number of q cost that have been adjusted 1 times in relation to total number of q: -1
[t=0.449724s, 19656 KB] mean number of q cost that have been adjusted 2 times in relation to total number of q: -1
[t=0.449724s, 19656 KB] mean number of q that are at some point overconsitent in relation to total number of q: -1
[t=0.449724s, 19656 KB] mean number of q that are at first underconsisten in relation to total number of q: -1
[t=0.449724s, 19656 KB] mean number of state variables that are not in common between two following states in relation to total number of state variables: -1
[t=0.449724s, 19656 KB] variance number of state variables that are not in common between two following states in relation to total number of state variables: -1
[t=0.449724s, 19656 KB] Search time: 0.428058s
[t=0.449724s, 19656 KB] Total time: 0.449724s
Solution found.
Peak memory: 19656 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: validate domain.pddl problem.pddl sas_plan
