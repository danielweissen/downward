INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799.96s
INFO     translator memory limit: 3584 MB
INFO     translator command line string: /infai/weidan00/downward/experiments/bachelor/.venv/bin/python3 /infai/weidan00/downward/experiments/bachelor/data/bachelor-v1/code-7aa5f34_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.004s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.004s wall-clock]
Preparing model... [0.010s CPU, 0.004s wall-clock]
Generated 51 rules.
Computing model... [0.230s CPU, 0.231s wall-clock]
13500 relevant atoms
9238 auxiliary atoms
22738 final queue length
30781 total queue pushes
Completing instantiation... [0.330s CPU, 0.325s wall-clock]
Instantiating: [0.570s CPU, 0.572s wall-clock]
Computing fact groups...
Finding invariants...
6 initial candidates
Finding invariants: [0.000s CPU, 0.004s wall-clock]
Checking invariant weight... [0.000s CPU, 0.001s wall-clock]
Instantiating groups... [0.030s CPU, 0.023s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.002s wall-clock]
Choosing groups...
0 uncovered facts
Choosing groups: [0.000s CPU, 0.005s wall-clock]
Building translation key... [0.010s CPU, 0.003s wall-clock]
Computing fact groups: [0.060s CPU, 0.058s wall-clock]
Building STRIPS to SAS dictionary... [0.030s CPU, 0.030s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.002s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.020s CPU, 0.014s wall-clock]
Translating task: [0.280s CPU, 0.278s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
61 propositions removed
Detecting unreachable propositions: [0.190s CPU, 0.191s wall-clock]
Reordering and filtering variables...
43 of 61 variables necessary.
0 of 61 mutex groups necessary.
3866 of 10310 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.030s CPU, 0.026s wall-clock]
Translator variables: 43
Translator derived variables: 0
Translator facts: 761
Translator goal facts: 6
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 3866
Translator axioms: 0
Translator task size: 14556
Translator peak memory: 178808 KB
Writing output... [0.030s CPU, 0.036s wall-clock]
Done! [1.200s CPU, 1.213s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1798.69s
INFO     search memory limit: 3584 MB
INFO     search command line string: /infai/weidan00/downward/experiments/bachelor/data/bachelor-v1/code-7aa5f34_e5e41175/builds/release/bin/downward --search 'eager_wastar([add()], w=2)' --internal-plan-file sas_plan < output.sas
[t=6.0867e-05s, 17204 KB] reading input...
[t=0.0192968s, 18236 KB] done reading input!
[t=0.0218862s, 18768 KB] Simplifying 3866 unary operators... done! [3866 unary operators]
[t=0.0237697s, 19164 KB] time to simplify: 0.00205166s
[t=0.0242354s, 19164 KB] Initializing additive heuristic...
[t=0.0243856s, 19164 KB] Building successor generator...done!
[t=0.0261453s, 19368 KB] peak memory difference for successor generator creation: 204 KB
[t=0.0261868s, 19368 KB] time for successor generation creation: 0.00162556s
[t=0.0262509s, 19368 KB] Variables: 43
[t=0.0262985s, 19368 KB] FactPairs: 761
[t=0.0263377s, 19368 KB] Bytes per state: 20
[t=0.0264561s, 19368 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0266142s, 19368 KB] New best heuristic value for add: 41
[t=0.0266575s, 19368 KB] g=0, 1 evaluated, 0 expanded
[t=0.026708s, 19368 KB] Initial heuristic value for add: 41
[t=0.0267492s, 19368 KB] pruning method: none
[t=0.0280001s, 19368 KB] New best heuristic value for add: 40
[t=0.0280463s, 19368 KB] g=1, 32 evaluated, 1 expanded
[t=0.0285111s, 19368 KB] New best heuristic value for add: 39
[t=0.0285546s, 19368 KB] g=1, 43 evaluated, 1 expanded
[t=0.0336673s, 19368 KB] New best heuristic value for add: 38
[t=0.0337165s, 19368 KB] g=2, 176 evaluated, 2 expanded
[t=0.0364844s, 19368 KB] New best heuristic value for add: 37
[t=0.0365302s, 19368 KB] g=2, 250 evaluated, 2 expanded
[t=0.0390852s, 19368 KB] New best heuristic value for add: 36
[t=0.0391322s, 19368 KB] g=3, 318 evaluated, 3 expanded
[t=0.0436536s, 19368 KB] New best heuristic value for add: 35
[t=0.0437026s, 19368 KB] g=4, 441 evaluated, 4 expanded
[t=0.0490188s, 19368 KB] New best heuristic value for add: 34
[t=0.0490673s, 19368 KB] g=5, 582 evaluated, 5 expanded
[t=0.0584917s, 19368 KB] New best heuristic value for add: 33
[t=0.0585424s, 19368 KB] g=6, 834 evaluated, 6 expanded
[t=0.0635602s, 19368 KB] New best heuristic value for add: 32
[t=0.0636104s, 19368 KB] g=7, 966 evaluated, 7 expanded
[t=0.0690694s, 19368 KB] New best heuristic value for add: 31
[t=0.0691198s, 19368 KB] g=8, 1107 evaluated, 8 expanded
[t=0.0739986s, 19368 KB] New best heuristic value for add: 30
[t=0.0740494s, 19368 KB] g=9, 1236 evaluated, 9 expanded
[t=0.140718s, 19368 KB] New best heuristic value for add: 29
[t=0.140802s, 19368 KB] g=11, 3025 evaluated, 23 expanded
[t=0.146197s, 19368 KB] New best heuristic value for add: 28
[t=0.146246s, 19368 KB] g=12, 3169 evaluated, 24 expanded
[t=0.151549s, 19368 KB] New best heuristic value for add: 27
[t=0.151597s, 19368 KB] g=13, 3313 evaluated, 25 expanded
[t=0.415531s, 19500 KB] New best heuristic value for add: 26
[t=0.415642s, 19500 KB] g=15, 10762 evaluated, 90 expanded
[t=0.421101s, 19500 KB] New best heuristic value for add: 25
[t=0.421151s, 19500 KB] g=16, 10910 evaluated, 91 expanded
[t=0.426196s, 19500 KB] New best heuristic value for add: 24
[t=0.426248s, 19500 KB] g=17, 11047 evaluated, 92 expanded
[t=0.431263s, 19500 KB] New best heuristic value for add: 23
[t=0.431304s, 19500 KB] g=18, 11183 evaluated, 93 expanded
[t=0.436521s, 19500 KB] New best heuristic value for add: 22
[t=0.436572s, 19500 KB] g=19, 11326 evaluated, 94 expanded
[t=0.441248s, 19500 KB] New best heuristic value for add: 21
[t=0.441301s, 19500 KB] g=20, 11456 evaluated, 95 expanded
[t=0.623771s, 19892 KB] New best heuristic value for add: 20
[t=0.62388s, 19892 KB] g=22, 16642 evaluated, 137 expanded
[t=0.628973s, 19892 KB] New best heuristic value for add: 19
[t=0.629029s, 19892 KB] g=23, 16787 evaluated, 138 expanded
[t=0.634048s, 19892 KB] New best heuristic value for add: 18
[t=0.634101s, 19892 KB] g=24, 16932 evaluated, 139 expanded
[t=0.807517s, 20160 KB] New best heuristic value for add: 17
[t=0.807628s, 20160 KB] g=26, 22244 evaluated, 182 expanded
[t=0.812375s, 20160 KB] New best heuristic value for add: 16
[t=0.812424s, 20160 KB] g=27, 22389 evaluated, 183 expanded
[t=0.817151s, 20160 KB] New best heuristic value for add: 15
[t=0.817208s, 20160 KB] g=28, 22535 evaluated, 184 expanded
[t=1.06405s, 20940 KB] New best heuristic value for add: 14
[t=1.06416s, 20940 KB] g=30, 30395 evaluated, 256 expanded
[t=1.06829s, 20940 KB] New best heuristic value for add: 13
[t=1.06834s, 20940 KB] g=31, 30524 evaluated, 257 expanded
[t=1.07303s, 20940 KB] New best heuristic value for add: 12
[t=1.07308s, 20940 KB] g=32, 30671 evaluated, 258 expanded
[t=1.33358s, 21216 KB] New best heuristic value for add: 11
[t=1.33369s, 21216 KB] g=34, 39032 evaluated, 335 expanded
[t=1.33833s, 21216 KB] New best heuristic value for add: 10
[t=1.33839s, 21216 KB] g=35, 39177 evaluated, 336 expanded
[t=1.34257s, 21216 KB] New best heuristic value for add: 9
[t=1.34262s, 21216 KB] g=36, 39308 evaluated, 337 expanded
[t=1.50582s, 21480 KB] New best heuristic value for add: 8
[t=1.50594s, 21480 KB] g=38, 44597 evaluated, 379 expanded
[t=1.5106s, 21480 KB] New best heuristic value for add: 7
[t=1.51065s, 21480 KB] g=39, 44743 evaluated, 380 expanded
[t=1.51523s, 21480 KB] New best heuristic value for add: 6
[t=1.51529s, 21480 KB] g=40, 44890 evaluated, 381 expanded
[t=1.75984s, 21880 KB] New best heuristic value for add: 5
[t=1.75995s, 21880 KB] g=42, 53343 evaluated, 461 expanded
[t=1.76364s, 21880 KB] New best heuristic value for add: 4
[t=1.76369s, 21880 KB] g=43, 53473 evaluated, 462 expanded
[t=1.76758s, 21880 KB] New best heuristic value for add: 3
[t=1.76763s, 21880 KB] g=44, 53622 evaluated, 463 expanded
[t=1.77051s, 21880 KB] New best heuristic value for add: 2
[t=1.77056s, 21880 KB] g=45, 53744 evaluated, 464 expanded
[t=1.77384s, 21880 KB] New best heuristic value for add: 1
[t=1.7739s, 21880 KB] g=46, 53893 evaluated, 465 expanded
[t=1.77648s, 21880 KB] New best heuristic value for add: 0
[t=1.77653s, 21880 KB] g=47, 54041 evaluated, 466 expanded
[t=1.77766s, 21880 KB] Solution found!
[t=1.77771s, 21880 KB] Actual search time: 1.75096s
drive-truck truck20 city7-2 city7-1 city7 (1)
fly-airplane plane2 city16-3 city1-3 (1)
load-truck package24 truck26 city13-1 (1)
drive-truck truck26 city13-1 city13-3 city13 (1)
unload-truck package24 truck26 city13-3 (1)
fly-airplane plane1 city5-3 city20-3 (1)
load-airplane package21 plane1 city20-3 (1)
fly-airplane plane1 city20-3 city6-3 (1)
unload-airplane package21 plane1 city6-3 (1)
drive-truck truck33 city20-1 city20-2 city20 (1)
load-truck package20 truck33 city20-2 (1)
drive-truck truck33 city20-2 city20-3 city20 (1)
unload-truck package20 truck33 city20-3 (1)
fly-airplane plane3 city2-3 city13-3 (1)
load-airplane package24 plane3 city13-3 (1)
load-airplane package23 plane3 city13-3 (1)
fly-airplane plane3 city13-3 city2-3 (1)
unload-airplane package23 plane3 city2-3 (1)
fly-airplane plane3 city2-3 city7-3 (1)
unload-airplane package24 plane3 city7-3 (1)
drive-truck truck20 city7-1 city7-3 city7 (1)
load-truck package24 truck20 city7-3 (1)
drive-truck truck20 city7-3 city7-1 city7 (1)
unload-truck package24 truck20 city7-1 (1)
drive-truck truck2 city2-1 city2-3 city2 (1)
load-truck package23 truck2 city2-3 (1)
drive-truck truck2 city2-3 city2-1 city2 (1)
unload-truck package23 truck2 city2-1 (1)
fly-airplane plane4 city7-3 city15-3 (1)
load-airplane package22 plane4 city15-3 (1)
fly-airplane plane4 city15-3 city1-3 (1)
unload-airplane package22 plane4 city1-3 (1)
fly-airplane plane4 city1-3 city20-3 (1)
load-airplane package20 plane4 city20-3 (1)
fly-airplane plane4 city20-3 city7-3 (1)
unload-airplane package20 plane4 city7-3 (1)
drive-truck truck20 city7-1 city7-3 city7 (1)
load-truck package20 truck20 city7-3 (1)
drive-truck truck20 city7-3 city7-1 city7 (1)
unload-truck package20 truck20 city7-1 (1)
fly-airplane plane4 city7-3 city3-3 (1)
load-airplane package19 plane4 city3-3 (1)
fly-airplane plane4 city3-3 city1-3 (1)
unload-airplane package19 plane4 city1-3 (1)
load-truck package19 truck13 city1-3 (1)
drive-truck truck13 city1-3 city1-2 city1 (1)
unload-truck package19 truck13 city1-2 (1)
[t=1.77775s, 21880 KB] Plan length: 47 step(s).
[t=1.77775s, 21880 KB] Plan cost: 47
[t=1.77775s, 21880 KB] Expanded 467 state(s).
[t=1.77775s, 21880 KB] Reopened 0 state(s).
[t=1.77775s, 21880 KB] Evaluated 54128 state(s).
[t=1.77775s, 21880 KB] Evaluations: 54128
[t=1.77775s, 21880 KB] Generated 68803 state(s).
[t=1.77775s, 21880 KB] Dead ends: 0 state(s).
[t=1.77775s, 21880 KB] Number of registered states: 54128
[t=1.77775s, 21880 KB] Int hash set load factor: 54128/65536 = 0.825928
[t=1.77775s, 21880 KB] Int hash set resizes: 16
[t=1.77775s, 21880 KB] mean number of q cost that have been adjusted 0 times in relation to total number of q: -1
[t=1.77775s, 21880 KB] mean number of q cost that have been adjusted 1 times in relation to total number of q: -1
[t=1.77775s, 21880 KB] mean number of q cost that have been adjusted 2 times in relation to total number of q: -1
[t=1.77775s, 21880 KB] mean number of q that are at some point overconsitent in relation to total number of q: -1
[t=1.77775s, 21880 KB] mean number of q that are at first underconsisten in relation to total number of q: -1
[t=1.77775s, 21880 KB] mean number of state variables that are not in common between two following states in relation to total number of state variables: -1
[t=1.77775s, 21880 KB] variance number of state variables that are not in common between two following states in relation to total number of state variables: -1
[t=1.77775s, 21880 KB] Search time: 1.7513s
[t=1.77775s, 21880 KB] Total time: 1.77775s
Solution found.
Peak memory: 21880 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: validate domain.pddl problem.pddl sas_plan
