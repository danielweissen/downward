INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799.96s
INFO     translator memory limit: 3584 MB
INFO     translator command line string: /infai/weidan00/downward/experiments/bachelor/.venv/bin/python3 /infai/weidan00/downward/experiments/bachelor/data/bachelor-v1/code-7aa5f34_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.006s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.007s wall-clock]
Preparing model... [0.000s CPU, 0.005s wall-clock]
Generated 125 rules.
Computing model... [0.420s CPU, 0.417s wall-clock]
26200 relevant atoms
6039 auxiliary atoms
32239 final queue length
114054 total queue pushes
Completing instantiation... [1.940s CPU, 1.942s wall-clock]
Instantiating: [2.380s CPU, 2.380s wall-clock]
Computing fact groups...
Finding invariants...
15 initial candidates
Finding invariants: [0.030s CPU, 0.031s wall-clock]
Checking invariant weight... [0.000s CPU, 0.002s wall-clock]
Instantiating groups... [0.020s CPU, 0.021s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.001s wall-clock]
Choosing groups...
52 uncovered facts
Choosing groups: [0.010s CPU, 0.003s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.060s CPU, 0.062s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
not in strips_to_sas, left out: Atom bottomcol(c0)
not in strips_to_sas, left out: Atom bottomcol(d0)
not in strips_to_sas, left out: Atom bottomcol(h0)
not in strips_to_sas, left out: Atom bottomcol(s0)
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.070s CPU, 0.067s wall-clock]
Translating task: [1.630s CPU, 1.635s wall-clock]
10728 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
14 propositions removed
Detecting unreachable propositions: [0.920s CPU, 0.923s wall-clock]
Reordering and filtering variables...
110 of 110 variables necessary.
106 of 210 mutex groups necessary.
25354 of 25354 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.270s CPU, 0.270s wall-clock]
Translator variables: 110
Translator derived variables: 0
Translator facts: 483
Translator goal facts: 4
Translator mutex groups: 106
Translator total mutex groups size: 543
Translator operators: 25354
Translator axioms: 0
Translator task size: 207472
Translator peak memory: 294500 KB
Writing output... [0.320s CPU, 0.369s wall-clock]
Done! [5.650s CPU, 5.724s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1794.21s
INFO     search memory limit: 3584 MB
INFO     search command line string: /infai/weidan00/downward/experiments/bachelor/data/bachelor-v1/code-7aa5f34_e5e41175/builds/release/bin/downward --search 'eager_wastar([add()], w=2)' --internal-plan-file sas_plan < output.sas
[t=5.9612e-05s, 17204 KB] reading input...
[t=0.179316s, 25796 KB] done reading input!
[t=0.195403s, 31700 KB] Simplifying 94204 unary operators... done! [94204 unary operators]
[t=0.353243s, 40424 KB] time to simplify: 0.165083s
[t=0.365493s, 40424 KB] Initializing additive heuristic...
[t=0.36571s, 40424 KB] Building successor generator...done!
[t=0.378105s, 40424 KB] peak memory difference for successor generator creation: 0 KB
[t=0.378158s, 40424 KB] time for successor generation creation: 0.0120054s
[t=0.378414s, 40424 KB] Variables: 110
[t=0.378467s, 40424 KB] FactPairs: 483
[t=0.378518s, 40424 KB] Bytes per state: 28
[t=0.378665s, 40424 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.38037s, 40424 KB] New best heuristic value for add: 197
[t=0.380441s, 40424 KB] g=0, 1 evaluated, 0 expanded
[t=0.380493s, 40424 KB] Initial heuristic value for add: 197
[t=0.380534s, 40424 KB] pruning method: none
[t=0.38186s, 40424 KB] New best heuristic value for add: 190
[t=0.381928s, 40424 KB] g=1, 2 evaluated, 1 expanded
[t=0.393111s, 40424 KB] New best heuristic value for add: 184
[t=0.393194s, 40424 KB] g=2, 11 evaluated, 2 expanded
[t=0.403157s, 40424 KB] New best heuristic value for add: 178
[t=0.403242s, 40424 KB] g=3, 19 evaluated, 3 expanded
[t=0.414273s, 40424 KB] New best heuristic value for add: 173
[t=0.414359s, 40424 KB] g=4, 28 evaluated, 4 expanded
[t=0.416844s, 40424 KB] New best heuristic value for add: 172
[t=0.416921s, 40424 KB] g=4, 30 evaluated, 4 expanded
[t=0.42685s, 40424 KB] New best heuristic value for add: 167
[t=0.426937s, 40424 KB] g=5, 38 evaluated, 5 expanded
[t=0.437986s, 40424 KB] New best heuristic value for add: 166
[t=0.438075s, 40424 KB] g=5, 47 evaluated, 5 expanded
[t=0.44847s, 40424 KB] New best heuristic value for add: 162
[t=0.448576s, 40424 KB] g=6, 64 evaluated, 8 expanded
[t=0.55615s, 40424 KB] New best heuristic value for add: 157
[t=0.556258s, 40424 KB] g=9, 172 evaluated, 20 expanded
[t=0.800587s, 40424 KB] New best heuristic value for add: 154
[t=0.80069s, 40424 KB] g=14, 393 evaluated, 49 expanded
[t=1.0537s, 40424 KB] New best heuristic value for add: 153
[t=1.05379s, 40424 KB] g=17, 625 evaluated, 87 expanded
[t=1.14814s, 40424 KB] New best heuristic value for add: 151
[t=1.14825s, 40424 KB] g=20, 711 evaluated, 98 expanded
[t=1.24086s, 40424 KB] New best heuristic value for add: 148
[t=1.24096s, 40424 KB] g=21, 792 evaluated, 108 expanded
[t=1.42389s, 40424 KB] New best heuristic value for add: 147
[t=1.424s, 40424 KB] g=25, 958 evaluated, 134 expanded
[t=1.4476s, 40424 KB] New best heuristic value for add: 143
[t=1.4477s, 40424 KB] g=26, 978 evaluated, 136 expanded
[t=1.46882s, 40424 KB] New best heuristic value for add: 142
[t=1.46891s, 40424 KB] g=28, 996 evaluated, 138 expanded
[t=1.47132s, 40424 KB] New best heuristic value for add: 141
[t=1.4714s, 40424 KB] g=28, 998 evaluated, 138 expanded
[t=1.47261s, 40424 KB] New best heuristic value for add: 138
[t=1.47268s, 40424 KB] g=28, 999 evaluated, 138 expanded
[t=1.56059s, 40424 KB] New best heuristic value for add: 137
[t=1.56069s, 40424 KB] g=32, 1080 evaluated, 151 expanded
[t=1.56306s, 40424 KB] New best heuristic value for add: 134
[t=1.56313s, 40424 KB] g=32, 1082 evaluated, 151 expanded
[t=1.66288s, 40424 KB] New best heuristic value for add: 132
[t=1.66298s, 40424 KB] g=33, 1170 evaluated, 160 expanded
[t=3.06642s, 40424 KB] New best heuristic value for add: 125
[t=3.06655s, 40424 KB] g=42, 2457 evaluated, 370 expanded, 3 reopened
[t=3.81305s, 40424 KB] New best heuristic value for add: 124
[t=3.81317s, 40424 KB] g=43, 3154 evaluated, 473 expanded, 3 reopened
[t=3.82535s, 40424 KB] New best heuristic value for add: 120
[t=3.82544s, 40424 KB] g=44, 3165 evaluated, 474 expanded, 3 reopened
[t=8.66857s, 40424 KB] New best heuristic value for add: 117
[t=8.66869s, 40424 KB] g=46, 7812 evaluated, 2293 expanded, 862 reopened
[t=8.68214s, 40424 KB] New best heuristic value for add: 114
[t=8.68224s, 40424 KB] g=47, 7824 evaluated, 2294 expanded, 862 reopened
[t=8.69663s, 40424 KB] New best heuristic value for add: 112
[t=8.69672s, 40424 KB] g=48, 7837 evaluated, 2295 expanded, 862 reopened
[t=8.71204s, 40424 KB] New best heuristic value for add: 111
[t=8.71214s, 40424 KB] g=49, 7851 evaluated, 2296 expanded, 862 reopened
[t=8.72517s, 40424 KB] New best heuristic value for add: 110
[t=8.72526s, 40424 KB] g=50, 7863 evaluated, 2297 expanded, 862 reopened
[t=8.72854s, 40424 KB] New best heuristic value for add: 107
[t=8.72862s, 40424 KB] g=50, 7866 evaluated, 2297 expanded, 862 reopened
[t=8.73406s, 40424 KB] New best heuristic value for add: 105
[t=8.73414s, 40424 KB] g=50, 7871 evaluated, 2297 expanded, 862 reopened
[t=8.73744s, 40424 KB] New best heuristic value for add: 104
[t=8.73751s, 40424 KB] g=50, 7874 evaluated, 2297 expanded, 862 reopened
[t=8.74513s, 40424 KB] New best heuristic value for add: 103
[t=8.74521s, 40424 KB] g=51, 7881 evaluated, 2298 expanded, 862 reopened
[t=8.75388s, 40424 KB] New best heuristic value for add: 102
[t=8.75397s, 40424 KB] g=51, 7889 evaluated, 2298 expanded, 862 reopened
[t=8.75939s, 40424 KB] New best heuristic value for add: 101
[t=8.75947s, 40424 KB] g=52, 7894 evaluated, 2299 expanded, 862 reopened
[t=8.77347s, 40424 KB] New best heuristic value for add: 100
[t=8.77356s, 40424 KB] g=53, 7907 evaluated, 2300 expanded, 862 reopened
[t=8.7768s, 40424 KB] New best heuristic value for add: 97
[t=8.77688s, 40424 KB] g=53, 7910 evaluated, 2300 expanded, 862 reopened
[t=8.78012s, 40424 KB] New best heuristic value for add: 95
[t=8.7802s, 40424 KB] g=53, 7913 evaluated, 2300 expanded, 862 reopened
[t=8.78878s, 40424 KB] New best heuristic value for add: 94
[t=8.78886s, 40424 KB] g=54, 7921 evaluated, 2301 expanded, 862 reopened
[t=8.80799s, 40424 KB] New best heuristic value for add: 90
[t=8.80809s, 40424 KB] g=55, 7939 evaluated, 2302 expanded, 862 reopened
[t=8.81025s, 40424 KB] New best heuristic value for add: 88
[t=8.81033s, 40424 KB] g=55, 7941 evaluated, 2302 expanded, 862 reopened
[t=8.83036s, 40424 KB] New best heuristic value for add: 84
[t=8.83046s, 40424 KB] g=56, 7960 evaluated, 2303 expanded, 862 reopened
[t=8.84197s, 40424 KB] New best heuristic value for add: 83
[t=8.84206s, 40424 KB] g=56, 7971 evaluated, 2303 expanded, 862 reopened
[t=8.85265s, 40424 KB] New best heuristic value for add: 80
[t=8.85276s, 40424 KB] g=57, 7981 evaluated, 2304 expanded, 862 reopened
[t=8.90601s, 40424 KB] New best heuristic value for add: 77
[t=8.90612s, 40424 KB] g=59, 8032 evaluated, 2308 expanded, 862 reopened
[t=8.91243s, 40424 KB] New best heuristic value for add: 75
[t=8.91253s, 40424 KB] g=60, 8038 evaluated, 2309 expanded, 862 reopened
[t=8.91773s, 40424 KB] New best heuristic value for add: 73
[t=8.91781s, 40424 KB] g=60, 8043 evaluated, 2309 expanded, 862 reopened
[t=8.92489s, 40424 KB] New best heuristic value for add: 71
[t=8.92499s, 40424 KB] g=61, 8050 evaluated, 2310 expanded, 862 reopened
[t=8.93584s, 40424 KB] New best heuristic value for add: 67
[t=8.93594s, 40424 KB] g=62, 8061 evaluated, 2311 expanded, 862 reopened
[t=9.04748s, 40424 KB] New best heuristic value for add: 64
[t=9.04759s, 40424 KB] g=67, 8172 evaluated, 2322 expanded, 862 reopened
[t=9.05163s, 40424 KB] New best heuristic value for add: 62
[t=9.05171s, 40424 KB] g=67, 8176 evaluated, 2322 expanded, 862 reopened
[t=9.05974s, 40424 KB] New best heuristic value for add: 59
[t=9.05984s, 40424 KB] g=68, 8184 evaluated, 2323 expanded, 862 reopened
[t=9.07078s, 40424 KB] New best heuristic value for add: 54
[t=9.07087s, 40424 KB] g=69, 8195 evaluated, 2324 expanded, 862 reopened
[t=9.0846s, 40424 KB] New best heuristic value for add: 50
[t=9.08471s, 40424 KB] g=70, 8209 evaluated, 2325 expanded, 862 reopened
[t=9.09438s, 40424 KB] New best heuristic value for add: 47
[t=9.09447s, 40424 KB] g=71, 8219 evaluated, 2326 expanded, 862 reopened
[t=9.10973s, 40424 KB] New best heuristic value for add: 45
[t=9.10983s, 40424 KB] g=72, 8235 evaluated, 2327 expanded, 862 reopened
[t=9.11647s, 40424 KB] New best heuristic value for add: 43
[t=9.11656s, 40424 KB] g=73, 8242 evaluated, 2328 expanded, 862 reopened
[t=9.1296s, 40424 KB] New best heuristic value for add: 40
[t=9.12969s, 40424 KB] g=74, 8256 evaluated, 2329 expanded, 862 reopened
[t=9.14072s, 40424 KB] New best heuristic value for add: 39
[t=9.14081s, 40424 KB] g=75, 8268 evaluated, 2330 expanded, 862 reopened
[t=9.14911s, 40424 KB] New best heuristic value for add: 36
[t=9.14921s, 40424 KB] g=76, 8277 evaluated, 2331 expanded, 862 reopened
[t=9.16448s, 40424 KB] New best heuristic value for add: 35
[t=9.16458s, 40424 KB] g=77, 8294 evaluated, 2332 expanded, 862 reopened
[t=9.32091s, 40424 KB] New best heuristic value for add: 34
[t=9.32102s, 40424 KB] g=79, 8470 evaluated, 2348 expanded, 862 reopened
[t=9.32361s, 40424 KB] New best heuristic value for add: 33
[t=9.32371s, 40424 KB] g=79, 8473 evaluated, 2348 expanded, 862 reopened
[t=9.33567s, 40424 KB] New best heuristic value for add: 32
[t=9.33578s, 40424 KB] g=80, 8487 evaluated, 2349 expanded, 862 reopened
[t=9.33674s, 40424 KB] New best heuristic value for add: 31
[t=9.33683s, 40424 KB] g=80, 8488 evaluated, 2349 expanded, 862 reopened
[t=9.3465s, 40424 KB] New best heuristic value for add: 30
[t=9.3466s, 40424 KB] g=81, 8499 evaluated, 2350 expanded, 862 reopened
[t=9.35509s, 40424 KB] New best heuristic value for add: 29
[t=9.3552s, 40424 KB] g=82, 8509 evaluated, 2351 expanded, 862 reopened
[t=9.35782s, 40424 KB] New best heuristic value for add: 28
[t=9.35792s, 40424 KB] g=83, 8512 evaluated, 2352 expanded, 862 reopened
[t=9.35972s, 40424 KB] New best heuristic value for add: 26
[t=9.35981s, 40424 KB] g=83, 8514 evaluated, 2352 expanded, 862 reopened
[t=9.36582s, 40424 KB] New best heuristic value for add: 25
[t=9.36593s, 40424 KB] g=84, 8521 evaluated, 2353 expanded, 862 reopened
[t=9.44409s, 40424 KB] New best heuristic value for add: 24
[t=9.4442s, 40424 KB] g=87, 8615 evaluated, 2363 expanded, 862 reopened
[t=9.4458s, 40424 KB] New best heuristic value for add: 23
[t=9.44587s, 40424 KB] g=87, 8617 evaluated, 2363 expanded, 862 reopened
[t=9.46389s, 40424 KB] New best heuristic value for add: 21
[t=9.46399s, 40424 KB] g=88, 8639 evaluated, 2364 expanded, 862 reopened
[t=9.46891s, 40424 KB] New best heuristic value for add: 20
[t=9.46899s, 40424 KB] g=89, 8645 evaluated, 2365 expanded, 862 reopened
[t=9.47762s, 40424 KB] New best heuristic value for add: 19
[t=9.4777s, 40424 KB] g=90, 8656 evaluated, 2366 expanded, 862 reopened
[t=9.48606s, 40424 KB] New best heuristic value for add: 18
[t=9.48615s, 40424 KB] g=91, 8667 evaluated, 2367 expanded, 862 reopened
[t=9.49416s, 40424 KB] New best heuristic value for add: 17
[t=9.49424s, 40424 KB] g=92, 8678 evaluated, 2368 expanded, 862 reopened
[t=9.5022s, 40424 KB] New best heuristic value for add: 16
[t=9.50229s, 40424 KB] g=93, 8690 evaluated, 2369 expanded, 862 reopened
[t=9.50898s, 40424 KB] New best heuristic value for add: 15
[t=9.50906s, 40424 KB] g=93, 8700 evaluated, 2369 expanded, 862 reopened
[t=9.51291s, 40424 KB] New best heuristic value for add: 14
[t=9.51299s, 40424 KB] g=94, 8706 evaluated, 2370 expanded, 862 reopened
[t=9.51812s, 40424 KB] New best heuristic value for add: 13
[t=9.5182s, 40424 KB] g=94, 8714 evaluated, 2370 expanded, 862 reopened
[t=9.52365s, 40424 KB] New best heuristic value for add: 12
[t=9.52373s, 40424 KB] g=95, 8723 evaluated, 2371 expanded, 862 reopened
[t=9.53259s, 40424 KB] New best heuristic value for add: 11
[t=9.53267s, 40424 KB] g=96, 8738 evaluated, 2372 expanded, 862 reopened
[t=9.53986s, 40424 KB] New best heuristic value for add: 10
[t=9.53995s, 40424 KB] g=97, 8751 evaluated, 2373 expanded, 862 reopened
[t=9.54491s, 40424 KB] New best heuristic value for add: 9
[t=9.54499s, 40424 KB] g=98, 8760 evaluated, 2374 expanded, 862 reopened
[t=9.55114s, 40424 KB] New best heuristic value for add: 8
[t=9.55122s, 40424 KB] g=99, 8771 evaluated, 2375 expanded, 862 reopened
[t=9.55624s, 40424 KB] New best heuristic value for add: 7
[t=9.55632s, 40424 KB] g=100, 8780 evaluated, 2376 expanded, 862 reopened
[t=9.56262s, 40424 KB] New best heuristic value for add: 6
[t=9.56271s, 40424 KB] g=101, 8791 evaluated, 2377 expanded, 862 reopened
[t=9.57079s, 40424 KB] New best heuristic value for add: 5
[t=9.57087s, 40424 KB] g=102, 8805 evaluated, 2378 expanded, 862 reopened
[t=9.5741s, 40424 KB] New best heuristic value for add: 4
[t=9.57417s, 40424 KB] g=103, 8811 evaluated, 2379 expanded, 862 reopened
[t=9.57654s, 40424 KB] New best heuristic value for add: 3
[t=9.57661s, 40424 KB] g=104, 8816 evaluated, 2380 expanded, 862 reopened
[t=9.57805s, 40424 KB] New best heuristic value for add: 2
[t=9.57811s, 40424 KB] g=105, 8819 evaluated, 2381 expanded, 862 reopened
[t=9.57955s, 40424 KB] New best heuristic value for add: 1
[t=9.57961s, 40424 KB] g=106, 8823 evaluated, 2382 expanded, 862 reopened
[t=9.58047s, 40424 KB] New best heuristic value for add: 0
[t=9.58052s, 40424 KB] g=107, 8826 evaluated, 2383 expanded, 862 reopened
[t=9.5808s, 40424 KB] Solution found!
[t=9.58087s, 40424 KB] Actual search time: 9.20034s
sendtohome sa h3 s n1 s0 n0 (1)
sendtofree s5 da n4 n3 (1)
sendtohome da s9 d n1 d0 n0 (1)
sendtofree hj d3 n3 n2 (1)
sendtofree d3 s2 n2 n1 (1)
sendtohome s2 c7 s n2 sa n1 (1)
move d8 s10 s9 (1)
move c7 c6 d8 (1)
move h5 s3 c6 (1)
sendtohome s3 s6 s n3 s2 n2 (1)
move h5 c6 s6 (1)
move c6 h6 d7 (1)
colfromfreecell s5 h6 n1 n2 (1)
sendtofree hk h9 n2 n1 (1)
move h9 ca s10 (1)
sendtohome ca d5 c n1 c0 n0 (1)
move d5 d2 c6 (1)
sendtohome d2 dk d n2 da n1 (1)
homefromfreecell d3 d n3 d2 n2 n1 n2 (1)
sendtofree h9 s10 n2 n1 (1)
sendtofree-b dk n1 n0 n0 n1 (1)
newcolfromfreecell hj n1 n0 n0 n1 (1)
move s10 h4 hj (1)
move h4 s4 s5 (1)
move h3 ha s4 (1)
sendtohome ha s7 h n1 h0 n0 (1)
colfromfreecell h9 s10 n1 n2 (1)
sendtofree h3 s4 n2 n1 (1)
sendtohome s4 d6 s n4 s3 n3 (1)
move d6 c2 s7 (1)
sendtohome-b c2 c n2 ca n1 n0 n1 (1)
sendtofree h4 s5 n1 n0 (1)
sendtohome s5 h6 s n5 s4 n4 (1)
move h6 c3 c7 (1)
sendtohome-b c3 c n3 c2 n2 n1 n2 (1)
sendtonewcol h5 s6 n2 n1 (1)
sendtohome s6 s8 s n6 s5 n5 (1)
newcolfromfreecell hk n1 n0 n0 n1 (1)
move s8 sq h9 (1)
move sq c4 hk (1)
move-b c4 h5 n0 n1 (1)
sendtofree d5 c6 n1 n0 (1)
colfromfreecell h3 c4 n0 n1 (1)
sendtofree c6 d7 n1 n0 (1)
move d7 h2 s8 (1)
sendtohome h2 h8 h n2 ha n1 (1)
sendtohome h3 c4 h n3 h2 n2 (1)
sendtohome c4 h5 c n4 c3 n3 (1)
homefromfreecell h4 h n4 h3 n3 n0 n1 (1)
sendtofree h6 c7 n1 n0 (1)
move c7 d8 h8 (1)
sendtohome-b h5 h n5 h4 n4 n1 n2 (1)
sendtonewcol h10 h7 n2 n1 (1)
homefromfreecell h6 h n6 h5 n5 n0 n1 (1)
sendtohome h7 c10 h n7 h6 n6 (1)
sendtofree d8 s9 n1 n0 (1)
move s9 d9 h10 (1)
newcolfromfreecell d8 n1 n0 n0 n1 (1)
move c7 h8 d8 (1)
sendtohome h8 hq h n8 h7 n7 (1)
move d6 s7 c7 (1)
sendtohome s7 d10 s n7 s6 n6 (1)
move d9 cj c10 (1)
move d10 d4 cj (1)
sendtohome d4 dq d n4 d3 n3 (1)
homefromfreecell d5 d n5 d4 n4 n1 n2 (1)
sendtofree d9 c10 n2 n1 (1)
sendtohome d6 c7 d n6 d5 n5 (1)
sendtohome d7 s8 d n7 d6 n6 (1)
sendtohome s8 h9 s n8 s7 n7 (1)
sendtohome h9 s10 h n9 h8 n8 (1)
sendtohome s9 h10 s n9 s8 n8 (1)
sendtohome s10 hj s n10 s9 n9 (1)
move c10 sk hj (1)
sendtohome-b h10 h n10 h9 n9 n0 n1 (1)
sendtofree sk c8 n1 n0 (1)
newcolfromfreecell d9 n1 n0 n0 n1 (1)
move c8 sj d9 (1)
sendtohome sj ck s n11 s10 n10 (1)
sendtohome sq hk s n12 sj n11 (1)
move hq c9 ck (1)
homefromfreecell sk s n13 sq n12 n1 n2 (1)
sendtofree d10 cj n2 n1 (1)
move cj dj dq (1)
move c10 hj dj (1)
sendtohome-b hj h n11 h10 n10 n0 n1 (1)
sendtofree c10 dj n1 n0 (1)
sendtohome hq ck h n12 hj n11 (1)
sendtohome-b hk h n13 hq n12 n1 n2 (1)
sendtonewcol c9 c5 n2 n1 (1)
sendtohome-b c5 c n5 c4 n4 n1 n2 (1)
homefromfreecell c6 c n6 c5 n5 n0 n1 (1)
sendtohome c7 d8 c n7 c6 n6 (1)
sendtohome c8 d9 c n8 c7 n7 (1)
sendtofree dj cq n1 n0 (1)
sendtonewcol cj dq n2 n1 (1)
sendtohome-b c9 c n9 c8 n8 n1 n2 (1)
homefromfreecell c10 c n10 c9 n9 n0 n1 (1)
sendtohome-b cj c n11 c10 n10 n2 n3 (1)
sendtohome-b cq c n12 cj n11 n3 n4 (1)
sendtohome-b ck c n13 cq n12 n4 n5 (1)
sendtohome-b d8 d n8 d7 n7 n5 n6 (1)
sendtohome-b d9 d n9 d8 n8 n6 n7 (1)
homefromfreecell d10 d n10 d9 n9 n1 n2 (1)
homefromfreecell dj d n11 d10 n10 n2 n3 (1)
sendtohome-b dq d n12 dj n11 n7 n8 (1)
homefromfreecell dk d n13 dq n12 n3 n4 (1)
[t=9.58092s, 40424 KB] Plan length: 107 step(s).
[t=9.58092s, 40424 KB] Plan cost: 107
[t=9.58092s, 40424 KB] Expanded 2384 state(s).
[t=9.58092s, 40424 KB] Reopened 862 state(s).
[t=9.58092s, 40424 KB] Evaluated 8827 state(s).
[t=9.58092s, 40424 KB] Evaluations: 8827
[t=9.58092s, 40424 KB] Generated 24696 state(s).
[t=9.58092s, 40424 KB] Dead ends: 565 state(s).
[t=9.58092s, 40424 KB] Number of registered states: 8827
[t=9.58092s, 40424 KB] Int hash set load factor: 8827/16384 = 0.538757
[t=9.58092s, 40424 KB] Int hash set resizes: 14
[t=9.58092s, 40424 KB] mean number of q cost that have been adjusted 0 times in relation to total number of q: -1
[t=9.58092s, 40424 KB] mean number of q cost that have been adjusted 1 times in relation to total number of q: -1
[t=9.58092s, 40424 KB] mean number of q cost that have been adjusted 2 times in relation to total number of q: -1
[t=9.58092s, 40424 KB] mean number of q that are at some point overconsitent in relation to total number of q: -1
[t=9.58092s, 40424 KB] mean number of q that are at first underconsisten in relation to total number of q: -1
[t=9.58092s, 40424 KB] mean number of state variables that are not in common between two following states in relation to total number of state variables: -1
[t=9.58092s, 40424 KB] variance number of state variables that are not in common between two following states in relation to total number of state variables: -1
[t=9.58092s, 40424 KB] Search time: 9.20225s
[t=9.58092s, 40424 KB] Total time: 9.58092s
Solution found.
Peak memory: 40424 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: validate domain.pddl problem.pddl sas_plan
