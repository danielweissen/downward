INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799.96s
INFO     translator memory limit: 3584 MB
INFO     translator command line string: /infai/weidan00/downward/experiments/bachelor/.venv/bin/python3 /infai/weidan00/downward/experiments/bachelor/data/bachelor-v1/code-7aa5f34_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.003s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.002s wall-clock]
Preparing model... [0.000s CPU, 0.002s wall-clock]
Generated 24 rules.
Computing model... [0.010s CPU, 0.010s wall-clock]
651 relevant atoms
440 auxiliary atoms
1091 final queue length
1472 total queue pushes
Completing instantiation... [0.010s CPU, 0.013s wall-clock]
Instantiating: [0.030s CPU, 0.027s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.005s wall-clock]
Collecting mutex groups... [0.010s CPU, 0.000s wall-clock]
Choosing groups...
0 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.010s CPU, 0.013s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
3 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.007s wall-clock]
Reordering and filtering variables...
45 of 45 variables necessary.
42 of 45 mutex groups necessary.
338 of 338 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.003s wall-clock]
Translator variables: 45
Translator derived variables: 0
Translator facts: 214
Translator goal facts: 42
Translator mutex groups: 42
Translator total mutex groups size: 168
Translator operators: 338
Translator axioms: 0
Translator task size: 2323
Translator peak memory: 144076 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.060s CPU, 0.071s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1799.84s
INFO     search memory limit: 3584 MB
INFO     search command line string: /infai/weidan00/downward/experiments/bachelor/data/bachelor-v1/code-7aa5f34_e5e41175/builds/release/bin/downward --search 'eager_wastar([add()], w=2)' --internal-plan-file sas_plan < output.sas
[t=6.916e-05s, 17204 KB] reading input...
[t=0.00255627s, 17344 KB] done reading input!
[t=0.00448796s, 17608 KB] Simplifying 674 unary operators... done! [674 unary operators]
[t=0.00502182s, 17740 KB] time to simplify: 0.000609987s
[t=0.00517434s, 17740 KB] Initializing additive heuristic...
[t=0.00529849s, 17740 KB] Building successor generator...done!
[t=0.00556758s, 17740 KB] peak memory difference for successor generator creation: 0 KB
[t=0.00560558s, 17740 KB] time for successor generation creation: 0.000147969s
[t=0.00565366s, 17740 KB] Variables: 45
[t=0.00569324s, 17740 KB] FactPairs: 214
[t=0.0057329s, 17740 KB] Bytes per state: 16
[t=0.00585348s, 17740 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.00596767s, 17740 KB] New best heuristic value for add: 126
[t=0.00601099s, 17740 KB] g=0, 1 evaluated, 0 expanded
[t=0.00605832s, 17740 KB] Initial heuristic value for add: 126
[t=0.00609898s, 17740 KB] pruning method: none
[t=0.00618467s, 17740 KB] New best heuristic value for add: 125
[t=0.00622627s, 17740 KB] g=1, 3 evaluated, 1 expanded
[t=0.00751473s, 17740 KB] New best heuristic value for add: 124
[t=0.00755945s, 17740 KB] g=2, 87 evaluated, 2 expanded
[t=0.00813166s, 17740 KB] New best heuristic value for add: 123
[t=0.00817529s, 17740 KB] g=3, 129 evaluated, 3 expanded
[t=0.00826887s, 17740 KB] New best heuristic value for add: 122
[t=0.00831073s, 17740 KB] g=5, 132 evaluated, 5 expanded
[t=0.00954426s, 17740 KB] New best heuristic value for add: 121
[t=0.00958737s, 17740 KB] g=6, 214 evaluated, 6 expanded
[t=0.0101087s, 17740 KB] New best heuristic value for add: 120
[t=0.0101509s, 17740 KB] g=7, 255 evaluated, 7 expanded
[t=0.0103009s, 17740 KB] New best heuristic value for add: 119
[t=0.0103426s, 17740 KB] g=9, 261 evaluated, 9 expanded
[t=0.0115401s, 17740 KB] New best heuristic value for add: 118
[t=0.0115864s, 17740 KB] g=10, 341 evaluated, 10 expanded
[t=0.012093s, 17740 KB] New best heuristic value for add: 117
[t=0.0121354s, 17740 KB] g=11, 381 evaluated, 11 expanded
[t=0.0122936s, 17740 KB] New best heuristic value for add: 116
[t=0.0123352s, 17740 KB] g=13, 390 evaluated, 13 expanded
[t=0.013495s, 17740 KB] New best heuristic value for add: 115
[t=0.0135391s, 17740 KB] g=14, 468 evaluated, 14 expanded
[t=0.0140318s, 17740 KB] New best heuristic value for add: 114
[t=0.0140735s, 17740 KB] g=15, 507 evaluated, 15 expanded
[t=0.0143189s, 17740 KB] New best heuristic value for add: 113
[t=0.014362s, 17740 KB] g=17, 519 evaluated, 17 expanded
[t=0.0154938s, 17740 KB] New best heuristic value for add: 112
[t=0.0155374s, 17740 KB] g=18, 595 evaluated, 18 expanded
[t=0.0160183s, 17740 KB] New best heuristic value for add: 111
[t=0.0160611s, 17740 KB] g=19, 633 evaluated, 19 expanded
[t=0.0162861s, 17740 KB] New best heuristic value for add: 110
[t=0.0163288s, 17740 KB] g=21, 648 evaluated, 21 expanded
[t=0.0174265s, 17740 KB] New best heuristic value for add: 109
[t=0.0174698s, 17740 KB] g=22, 722 evaluated, 22 expanded
[t=0.0179354s, 17740 KB] New best heuristic value for add: 108
[t=0.0179786s, 17740 KB] g=23, 759 evaluated, 23 expanded
[t=0.0182347s, 17740 KB] New best heuristic value for add: 107
[t=0.0182768s, 17740 KB] g=25, 777 evaluated, 25 expanded
[t=0.0193254s, 17740 KB] New best heuristic value for add: 106
[t=0.0193695s, 17740 KB] g=26, 849 evaluated, 26 expanded
[t=0.0198206s, 17740 KB] New best heuristic value for add: 105
[t=0.0198625s, 17740 KB] g=27, 885 evaluated, 27 expanded
[t=0.020148s, 17740 KB] New best heuristic value for add: 104
[t=0.0201902s, 17740 KB] g=29, 906 evaluated, 29 expanded
[t=0.0212106s, 17740 KB] New best heuristic value for add: 103
[t=0.021254s, 17740 KB] g=30, 976 evaluated, 30 expanded
[t=0.0216967s, 17740 KB] New best heuristic value for add: 102
[t=0.0217388s, 17740 KB] g=31, 1011 evaluated, 31 expanded
[t=0.0221602s, 17740 KB] New best heuristic value for add: 101
[t=0.022204s, 17740 KB] g=33, 1035 evaluated, 33 expanded
[t=0.0231923s, 17740 KB] New best heuristic value for add: 100
[t=0.0232359s, 17740 KB] g=34, 1103 evaluated, 34 expanded
[t=0.0236665s, 17740 KB] New best heuristic value for add: 99
[t=0.0237083s, 17740 KB] g=35, 1137 evaluated, 35 expanded
[t=0.0240615s, 17740 KB] New best heuristic value for add: 98
[t=0.0241098s, 17740 KB] g=37, 1164 evaluated, 37 expanded
[t=0.0250879s, 17740 KB] New best heuristic value for add: 97
[t=0.0251309s, 17740 KB] g=38, 1230 evaluated, 38 expanded
[t=0.0255539s, 17740 KB] New best heuristic value for add: 96
[t=0.0255957s, 17740 KB] g=39, 1263 evaluated, 39 expanded
[t=0.0259788s, 17740 KB] New best heuristic value for add: 95
[t=0.0260309s, 17740 KB] g=41, 1293 evaluated, 41 expanded
[t=0.0269449s, 17740 KB] New best heuristic value for add: 94
[t=0.0269961s, 17740 KB] g=42, 1357 evaluated, 42 expanded
[t=0.0274063s, 17740 KB] New best heuristic value for add: 93
[t=0.0274483s, 17740 KB] g=43, 1389 evaluated, 43 expanded
[t=0.0278607s, 17740 KB] New best heuristic value for add: 92
[t=0.027903s, 17740 KB] g=45, 1422 evaluated, 45 expanded
[t=0.0288132s, 17740 KB] New best heuristic value for add: 91
[t=0.0288555s, 17740 KB] g=46, 1484 evaluated, 46 expanded
[t=0.029251s, 17740 KB] New best heuristic value for add: 90
[t=0.029293s, 17740 KB] g=47, 1515 evaluated, 47 expanded
[t=0.0297362s, 17740 KB] New best heuristic value for add: 89
[t=0.029778s, 17740 KB] g=49, 1551 evaluated, 49 expanded
[t=0.0306226s, 17740 KB] New best heuristic value for add: 88
[t=0.030665s, 17740 KB] g=50, 1611 evaluated, 50 expanded
[t=0.0310525s, 17740 KB] New best heuristic value for add: 87
[t=0.0310943s, 17740 KB] g=51, 1641 evaluated, 51 expanded
[t=0.0315626s, 17740 KB] New best heuristic value for add: 86
[t=0.0316046s, 17740 KB] g=53, 1680 evaluated, 53 expanded
[t=0.0324141s, 17740 KB] New best heuristic value for add: 85
[t=0.0324571s, 17740 KB] g=54, 1738 evaluated, 54 expanded
[t=0.032831s, 17740 KB] New best heuristic value for add: 84
[t=0.0328732s, 17740 KB] g=55, 1767 evaluated, 55 expanded
[t=0.0333721s, 17740 KB] New best heuristic value for add: 83
[t=0.0334141s, 17740 KB] g=57, 1809 evaluated, 57 expanded
[t=0.0341958s, 17740 KB] New best heuristic value for add: 82
[t=0.0342392s, 17740 KB] g=58, 1865 evaluated, 58 expanded
[t=0.0346005s, 17740 KB] New best heuristic value for add: 81
[t=0.0346504s, 17740 KB] g=59, 1893 evaluated, 59 expanded
[t=0.0353423s, 17740 KB] New best heuristic value for add: 80
[t=0.0353877s, 17740 KB] g=61, 1938 evaluated, 61 expanded
[t=0.0361375s, 17740 KB] New best heuristic value for add: 79
[t=0.0361812s, 17740 KB] g=62, 1992 evaluated, 62 expanded
[t=0.036526s, 17740 KB] New best heuristic value for add: 78
[t=0.0365717s, 17740 KB] g=63, 2019 evaluated, 63 expanded
[t=0.037131s, 17740 KB] New best heuristic value for add: 77
[t=0.0371743s, 17740 KB] g=65, 2067 evaluated, 65 expanded
[t=0.0378898s, 17740 KB] New best heuristic value for add: 76
[t=0.0379332s, 17740 KB] g=66, 2119 evaluated, 66 expanded
[t=0.0382642s, 17740 KB] New best heuristic value for add: 75
[t=0.0383056s, 17740 KB] g=67, 2145 evaluated, 67 expanded
[t=0.0388956s, 17740 KB] New best heuristic value for add: 74
[t=0.038938s, 17740 KB] g=69, 2196 evaluated, 69 expanded
[t=0.0396231s, 17740 KB] New best heuristic value for add: 73
[t=0.0396694s, 17740 KB] g=70, 2246 evaluated, 70 expanded
[t=0.03999s, 17740 KB] New best heuristic value for add: 72
[t=0.0400334s, 17740 KB] g=71, 2271 evaluated, 71 expanded
[t=0.0406576s, 17740 KB] New best heuristic value for add: 71
[t=0.0407066s, 17740 KB] g=73, 2325 evaluated, 73 expanded
[t=0.0413855s, 17740 KB] New best heuristic value for add: 70
[t=0.0414355s, 17740 KB] g=74, 2373 evaluated, 74 expanded
[t=0.041747s, 17740 KB] New best heuristic value for add: 69
[t=0.0417914s, 17740 KB] g=75, 2397 evaluated, 75 expanded
[t=0.0424517s, 17740 KB] New best heuristic value for add: 68
[t=0.0424989s, 17740 KB] g=77, 2454 evaluated, 77 expanded
[t=0.0431286s, 17740 KB] New best heuristic value for add: 67
[t=0.043175s, 17740 KB] g=78, 2500 evaluated, 78 expanded
[t=0.0434829s, 17740 KB] New best heuristic value for add: 66
[t=0.0435265s, 17740 KB] g=79, 2523 evaluated, 79 expanded
[t=0.0442089s, 17740 KB] New best heuristic value for add: 65
[t=0.0442536s, 17740 KB] g=81, 2583 evaluated, 81 expanded
[t=0.0448467s, 17740 KB] New best heuristic value for add: 64
[t=0.0448904s, 17740 KB] g=82, 2627 evaluated, 82 expanded
[t=0.0451815s, 17740 KB] New best heuristic value for add: 63
[t=0.0452232s, 17740 KB] g=83, 2649 evaluated, 83 expanded
[t=0.0459255s, 17740 KB] New best heuristic value for add: 62
[t=0.0459703s, 17740 KB] g=85, 2712 evaluated, 85 expanded
[t=0.0465318s, 17740 KB] New best heuristic value for add: 61
[t=0.0465752s, 17740 KB] g=86, 2754 evaluated, 86 expanded
[t=0.0468459s, 17740 KB] New best heuristic value for add: 60
[t=0.0468869s, 17740 KB] g=87, 2775 evaluated, 87 expanded
[t=0.0476112s, 17740 KB] New best heuristic value for add: 59
[t=0.0476543s, 17740 KB] g=89, 2841 evaluated, 89 expanded
[t=0.048185s, 17740 KB] New best heuristic value for add: 58
[t=0.0482276s, 17740 KB] g=90, 2881 evaluated, 90 expanded
[t=0.0484857s, 17740 KB] New best heuristic value for add: 57
[t=0.0485264s, 17740 KB] g=91, 2901 evaluated, 91 expanded
[t=0.0492761s, 17740 KB] New best heuristic value for add: 56
[t=0.0493194s, 17740 KB] g=93, 2970 evaluated, 93 expanded
[t=0.0498134s, 17740 KB] New best heuristic value for add: 55
[t=0.0498553s, 17740 KB] g=94, 3008 evaluated, 94 expanded
[t=0.0501065s, 17740 KB] New best heuristic value for add: 54
[t=0.0501476s, 17740 KB] g=95, 3027 evaluated, 95 expanded
[t=0.0509189s, 17740 KB] New best heuristic value for add: 53
[t=0.0509622s, 17740 KB] g=97, 3099 evaluated, 97 expanded
[t=0.0514303s, 17740 KB] New best heuristic value for add: 52
[t=0.0514723s, 17740 KB] g=98, 3135 evaluated, 98 expanded
[t=0.0517061s, 17740 KB] New best heuristic value for add: 51
[t=0.0517471s, 17740 KB] g=99, 3153 evaluated, 99 expanded
[t=0.052538s, 17740 KB] New best heuristic value for add: 50
[t=0.0525806s, 17740 KB] g=101, 3228 evaluated, 101 expanded
[t=0.0530423s, 17740 KB] New best heuristic value for add: 49
[t=0.053085s, 17740 KB] g=102, 3262 evaluated, 102 expanded
[t=0.0533084s, 17740 KB] New best heuristic value for add: 48
[t=0.0533495s, 17740 KB] g=103, 3279 evaluated, 103 expanded
[t=0.054164s, 17740 KB] New best heuristic value for add: 47
[t=0.0542068s, 17740 KB] g=105, 3357 evaluated, 105 expanded
[t=0.0546174s, 17740 KB] New best heuristic value for add: 46
[t=0.0546598s, 17740 KB] g=106, 3389 evaluated, 106 expanded
[t=0.0548757s, 17740 KB] New best heuristic value for add: 45
[t=0.0549164s, 17740 KB] g=107, 3405 evaluated, 107 expanded
[t=0.0557546s, 17740 KB] New best heuristic value for add: 44
[t=0.0557969s, 17740 KB] g=109, 3486 evaluated, 109 expanded
[t=0.0561809s, 17740 KB] New best heuristic value for add: 43
[t=0.0562229s, 17740 KB] g=110, 3516 evaluated, 110 expanded
[t=0.0564239s, 17740 KB] New best heuristic value for add: 42
[t=0.0564655s, 17740 KB] g=111, 3531 evaluated, 111 expanded
[t=0.0573302s, 17740 KB] New best heuristic value for add: 41
[t=0.0573733s, 17740 KB] g=113, 3615 evaluated, 113 expanded
[t=0.057735s, 17740 KB] New best heuristic value for add: 40
[t=0.0577774s, 17740 KB] g=114, 3643 evaluated, 114 expanded
[t=0.0579674s, 17740 KB] New best heuristic value for add: 39
[t=0.0580096s, 17740 KB] g=115, 3657 evaluated, 115 expanded
[t=0.0589005s, 17740 KB] New best heuristic value for add: 38
[t=0.0589442s, 17740 KB] g=117, 3744 evaluated, 117 expanded
[t=0.0592814s, 17740 KB] New best heuristic value for add: 37
[t=0.0593235s, 17740 KB] g=118, 3770 evaluated, 118 expanded
[t=0.0595096s, 17740 KB] New best heuristic value for add: 36
[t=0.0595511s, 17740 KB] g=119, 3783 evaluated, 119 expanded
[t=0.0607952s, 17740 KB] New best heuristic value for add: 35
[t=0.0608412s, 17740 KB] g=121, 3873 evaluated, 121 expanded
[t=0.0611516s, 17740 KB] New best heuristic value for add: 34
[t=0.0611938s, 17740 KB] g=122, 3897 evaluated, 122 expanded
[t=0.0613634s, 17740 KB] New best heuristic value for add: 33
[t=0.0614111s, 17740 KB] g=123, 3909 evaluated, 123 expanded
[t=0.0623417s, 17740 KB] New best heuristic value for add: 32
[t=0.0623848s, 17740 KB] g=125, 4002 evaluated, 125 expanded
[t=0.0626686s, 17740 KB] New best heuristic value for add: 31
[t=0.0627102s, 17740 KB] g=126, 4024 evaluated, 126 expanded
[t=0.0628679s, 17740 KB] New best heuristic value for add: 30
[t=0.0629091s, 17740 KB] g=127, 4035 evaluated, 127 expanded
[t=0.0638676s, 17740 KB] New best heuristic value for add: 29
[t=0.0639106s, 17740 KB] g=129, 4131 evaluated, 129 expanded
[t=0.0641707s, 17740 KB] New best heuristic value for add: 28
[t=0.064212s, 17740 KB] g=130, 4151 evaluated, 130 expanded
[t=0.064366s, 17740 KB] New best heuristic value for add: 27
[t=0.064407s, 17740 KB] g=131, 4161 evaluated, 131 expanded
[t=0.0653858s, 17740 KB] New best heuristic value for add: 26
[t=0.0654284s, 17740 KB] g=133, 4260 evaluated, 133 expanded
[t=0.0656642s, 17740 KB] New best heuristic value for add: 25
[t=0.0657052s, 17740 KB] g=134, 4278 evaluated, 134 expanded
[t=0.0658421s, 17740 KB] New best heuristic value for add: 24
[t=0.0658842s, 17740 KB] g=135, 4287 evaluated, 135 expanded
[t=0.066885s, 17740 KB] New best heuristic value for add: 23
[t=0.0669281s, 17740 KB] g=137, 4389 evaluated, 137 expanded
[t=0.0671453s, 17740 KB] New best heuristic value for add: 22
[t=0.0671873s, 17740 KB] g=138, 4405 evaluated, 138 expanded
[t=0.0673142s, 17740 KB] New best heuristic value for add: 21
[t=0.0673549s, 17740 KB] g=139, 4413 evaluated, 139 expanded
[t=0.0683774s, 17740 KB] New best heuristic value for add: 20
[t=0.0684219s, 17740 KB] g=141, 4518 evaluated, 141 expanded
[t=0.0686118s, 17740 KB] New best heuristic value for add: 19
[t=0.068653s, 17740 KB] g=142, 4532 evaluated, 142 expanded
[t=0.0687688s, 17740 KB] New best heuristic value for add: 18
[t=0.0688098s, 17740 KB] g=143, 4539 evaluated, 143 expanded
[t=0.0698476s, 17740 KB] New best heuristic value for add: 17
[t=0.0698899s, 17740 KB] g=145, 4647 evaluated, 145 expanded
[t=0.0700621s, 17740 KB] New best heuristic value for add: 16
[t=0.0701036s, 17740 KB] g=146, 4659 evaluated, 146 expanded
[t=0.0702092s, 17740 KB] New best heuristic value for add: 15
[t=0.0702499s, 17740 KB] g=147, 4665 evaluated, 147 expanded
[t=0.0713117s, 17740 KB] New best heuristic value for add: 14
[t=0.0713542s, 17740 KB] g=149, 4776 evaluated, 149 expanded
[t=0.0715009s, 17740 KB] New best heuristic value for add: 13
[t=0.0715422s, 17740 KB] g=150, 4786 evaluated, 150 expanded
[t=0.0716374s, 17740 KB] New best heuristic value for add: 12
[t=0.0716782s, 17740 KB] g=151, 4791 evaluated, 151 expanded
[t=0.0727534s, 17740 KB] New best heuristic value for add: 11
[t=0.0727956s, 17740 KB] g=153, 4905 evaluated, 153 expanded
[t=0.0729251s, 17740 KB] New best heuristic value for add: 10
[t=0.0729669s, 17740 KB] g=154, 4913 evaluated, 154 expanded
[t=0.0730518s, 17740 KB] New best heuristic value for add: 9
[t=0.0730922s, 17740 KB] g=155, 4917 evaluated, 155 expanded
[t=0.0741912s, 17740 KB] New best heuristic value for add: 8
[t=0.0742371s, 17740 KB] g=157, 5034 evaluated, 157 expanded
[t=0.0743412s, 17740 KB] New best heuristic value for add: 7
[t=0.0743818s, 17740 KB] g=158, 5040 evaluated, 158 expanded
[t=0.0744563s, 17740 KB] New best heuristic value for add: 6
[t=0.0744964s, 17740 KB] g=159, 5043 evaluated, 159 expanded
[t=0.0756162s, 17844 KB] New best heuristic value for add: 5
[t=0.0756621s, 17844 KB] g=161, 5163 evaluated, 161 expanded
[t=0.0757496s, 17844 KB] New best heuristic value for add: 4
[t=0.0757903s, 17844 KB] g=162, 5167 evaluated, 162 expanded
[t=0.0758508s, 17844 KB] New best heuristic value for add: 3
[t=0.075891s, 17844 KB] g=163, 5169 evaluated, 163 expanded
[t=0.0770289s, 17844 KB] New best heuristic value for add: 2
[t=0.0770717s, 17844 KB] g=163, 5292 evaluated, 165 expanded
[t=0.0771243s, 17844 KB] New best heuristic value for add: 1
[t=0.0771647s, 17844 KB] g=164, 5293 evaluated, 166 expanded
[t=0.0774929s, 17844 KB] New best heuristic value for add: 0
[t=0.0775338s, 17844 KB] g=165, 5336 evaluated, 167 expanded
[t=0.0775749s, 17844 KB] Solution found!
[t=0.0776325s, 17844 KB] Actual search time: 0.0715293s
pick ball1 rooma left (1)
move rooma roomb (1)
drop ball1 roomb left (1)
move roomb rooma (1)
pick ball10 rooma left (1)
move rooma roomb (1)
drop ball10 roomb left (1)
move roomb rooma (1)
pick ball11 rooma left (1)
move rooma roomb (1)
drop ball11 roomb left (1)
move roomb rooma (1)
pick ball12 rooma left (1)
move rooma roomb (1)
drop ball12 roomb left (1)
move roomb rooma (1)
pick ball13 rooma left (1)
move rooma roomb (1)
drop ball13 roomb left (1)
move roomb rooma (1)
pick ball14 rooma left (1)
move rooma roomb (1)
drop ball14 roomb left (1)
move roomb rooma (1)
pick ball15 rooma left (1)
move rooma roomb (1)
drop ball15 roomb left (1)
move roomb rooma (1)
pick ball16 rooma left (1)
move rooma roomb (1)
drop ball16 roomb left (1)
move roomb rooma (1)
pick ball17 rooma left (1)
move rooma roomb (1)
drop ball17 roomb left (1)
move roomb rooma (1)
pick ball18 rooma left (1)
move rooma roomb (1)
drop ball18 roomb left (1)
move roomb rooma (1)
pick ball19 rooma left (1)
move rooma roomb (1)
drop ball19 roomb left (1)
move roomb rooma (1)
pick ball2 rooma left (1)
move rooma roomb (1)
drop ball2 roomb left (1)
move roomb rooma (1)
pick ball20 rooma left (1)
move rooma roomb (1)
drop ball20 roomb left (1)
move roomb rooma (1)
pick ball21 rooma left (1)
move rooma roomb (1)
drop ball21 roomb left (1)
move roomb rooma (1)
pick ball22 rooma left (1)
move rooma roomb (1)
drop ball22 roomb left (1)
move roomb rooma (1)
pick ball23 rooma left (1)
move rooma roomb (1)
drop ball23 roomb left (1)
move roomb rooma (1)
pick ball24 rooma left (1)
move rooma roomb (1)
drop ball24 roomb left (1)
move roomb rooma (1)
pick ball25 rooma left (1)
move rooma roomb (1)
drop ball25 roomb left (1)
move roomb rooma (1)
pick ball26 rooma left (1)
move rooma roomb (1)
drop ball26 roomb left (1)
move roomb rooma (1)
pick ball27 rooma left (1)
move rooma roomb (1)
drop ball27 roomb left (1)
move roomb rooma (1)
pick ball28 rooma left (1)
move rooma roomb (1)
drop ball28 roomb left (1)
move roomb rooma (1)
pick ball29 rooma left (1)
move rooma roomb (1)
drop ball29 roomb left (1)
move roomb rooma (1)
pick ball3 rooma left (1)
move rooma roomb (1)
drop ball3 roomb left (1)
move roomb rooma (1)
pick ball30 rooma left (1)
move rooma roomb (1)
drop ball30 roomb left (1)
move roomb rooma (1)
pick ball31 rooma left (1)
move rooma roomb (1)
drop ball31 roomb left (1)
move roomb rooma (1)
pick ball32 rooma left (1)
move rooma roomb (1)
drop ball32 roomb left (1)
move roomb rooma (1)
pick ball33 rooma left (1)
move rooma roomb (1)
drop ball33 roomb left (1)
move roomb rooma (1)
pick ball34 rooma left (1)
move rooma roomb (1)
drop ball34 roomb left (1)
move roomb rooma (1)
pick ball35 rooma left (1)
move rooma roomb (1)
drop ball35 roomb left (1)
move roomb rooma (1)
pick ball36 rooma left (1)
move rooma roomb (1)
drop ball36 roomb left (1)
move roomb rooma (1)
pick ball37 rooma left (1)
move rooma roomb (1)
drop ball37 roomb left (1)
move roomb rooma (1)
pick ball38 rooma left (1)
move rooma roomb (1)
drop ball38 roomb left (1)
move roomb rooma (1)
pick ball39 rooma left (1)
move rooma roomb (1)
drop ball39 roomb left (1)
move roomb rooma (1)
pick ball4 rooma left (1)
move rooma roomb (1)
drop ball4 roomb left (1)
move roomb rooma (1)
pick ball40 rooma left (1)
move rooma roomb (1)
drop ball40 roomb left (1)
move roomb rooma (1)
pick ball41 rooma left (1)
move rooma roomb (1)
drop ball41 roomb left (1)
move roomb rooma (1)
pick ball42 rooma left (1)
move rooma roomb (1)
drop ball42 roomb left (1)
move roomb rooma (1)
pick ball5 rooma left (1)
move rooma roomb (1)
drop ball5 roomb left (1)
move roomb rooma (1)
pick ball6 rooma left (1)
move rooma roomb (1)
drop ball6 roomb left (1)
move roomb rooma (1)
pick ball7 rooma left (1)
move rooma roomb (1)
drop ball7 roomb left (1)
move roomb rooma (1)
pick ball8 rooma left (1)
pick ball9 rooma right (1)
move rooma roomb (1)
drop ball8 roomb left (1)
drop ball9 roomb right (1)
[t=0.0776757s, 17844 KB] Plan length: 165 step(s).
[t=0.0776757s, 17844 KB] Plan cost: 165
[t=0.0776757s, 17844 KB] Expanded 168 state(s).
[t=0.0776757s, 17844 KB] Reopened 0 state(s).
[t=0.0776757s, 17844 KB] Evaluated 5336 state(s).
[t=0.0776757s, 17844 KB] Evaluations: 5336
[t=0.0776757s, 17844 KB] Generated 5502 state(s).
[t=0.0776757s, 17844 KB] Dead ends: 0 state(s).
[t=0.0776757s, 17844 KB] Number of registered states: 5336
[t=0.0776757s, 17844 KB] Int hash set load factor: 5336/8192 = 0.651367
[t=0.0776757s, 17844 KB] Int hash set resizes: 13
[t=0.0776757s, 17844 KB] mean number of q cost that have been adjusted 0 times in relation to total number of q: -1
[t=0.0776757s, 17844 KB] mean number of q cost that have been adjusted 1 times in relation to total number of q: -1
[t=0.0776757s, 17844 KB] mean number of q cost that have been adjusted 2 times in relation to total number of q: -1
[t=0.0776757s, 17844 KB] mean number of q that are at some point overconsitent in relation to total number of q: -1
[t=0.0776757s, 17844 KB] mean number of q that are at first underconsisten in relation to total number of q: -1
[t=0.0776757s, 17844 KB] mean number of state variables that are not in common between two following states in relation to total number of state variables: -1
[t=0.0776757s, 17844 KB] variance number of state variables that are not in common between two following states in relation to total number of state variables: -1
[t=0.0776757s, 17844 KB] Search time: 0.0718228s
[t=0.0776757s, 17844 KB] Total time: 0.0776757s
Solution found.
Peak memory: 17844 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: validate domain.pddl problem.pddl sas_plan
