INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799.96s
INFO     translator memory limit: 3584 MB
INFO     translator command line string: /infai/weidan00/downward/experiments/bachelor/.venv/bin/python3 /infai/weidan00/downward/experiments/bachelor/data/bachelor-v1/code-7aa5f34_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.002s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 24 rules.
Computing model... [0.000s CPU, 0.005s wall-clock]
321 relevant atoms
220 auxiliary atoms
541 final queue length
724 total queue pushes
Completing instantiation... [0.010s CPU, 0.006s wall-clock]
Instantiating: [0.020s CPU, 0.015s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
0 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.005s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.000s wall-clock]
Translating task: [0.010s CPU, 0.007s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
3 propositions removed
Detecting unreachable propositions: [0.000s CPU, 0.003s wall-clock]
Reordering and filtering variables...
23 of 23 variables necessary.
20 of 23 mutex groups necessary.
162 of 162 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.002s wall-clock]
Translator variables: 23
Translator derived variables: 0
Translator facts: 104
Translator goal facts: 20
Translator mutex groups: 20
Translator total mutex groups size: 80
Translator operators: 162
Translator axioms: 0
Translator task size: 1113
Translator peak memory: 143052 KB
Writing output... [0.000s CPU, 0.004s wall-clock]
Done! [0.040s CPU, 0.039s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1799.87s
INFO     search memory limit: 3584 MB
INFO     search command line string: /infai/weidan00/downward/experiments/bachelor/data/bachelor-v1/code-7aa5f34_e5e41175/builds/release/bin/downward --search 'eager_wastar([add()], w=2)' --internal-plan-file sas_plan < output.sas
[t=6.9035e-05s, 17204 KB] reading input...
[t=0.00143385s, 17212 KB] done reading input!
[t=0.00333461s, 17608 KB] Simplifying 322 unary operators... done! [322 unary operators]
[t=0.00364584s, 17608 KB] time to simplify: 0.000378361s
[t=0.00375975s, 17608 KB] Initializing additive heuristic...
[t=0.00388017s, 17608 KB] Building successor generator...done!
[t=0.00409298s, 17608 KB] peak memory difference for successor generator creation: 0 KB
[t=0.00413123s, 17608 KB] time for successor generation creation: 8.6956e-05s
[t=0.00417871s, 17608 KB] Variables: 23
[t=0.00421797s, 17608 KB] FactPairs: 104
[t=0.00425761s, 17608 KB] Bytes per state: 8
[t=0.00438419s, 17608 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.00449315s, 17608 KB] New best heuristic value for add: 60
[t=0.00453692s, 17608 KB] g=0, 1 evaluated, 0 expanded
[t=0.00458451s, 17608 KB] Initial heuristic value for add: 60
[t=0.00462613s, 17608 KB] pruning method: none
[t=0.00469993s, 17608 KB] New best heuristic value for add: 59
[t=0.00474235s, 17608 KB] g=1, 3 evaluated, 1 expanded
[t=0.00510798s, 17608 KB] New best heuristic value for add: 58
[t=0.00515401s, 17608 KB] g=2, 43 evaluated, 2 expanded
[t=0.00532777s, 17608 KB] New best heuristic value for add: 57
[t=0.00537073s, 17608 KB] g=3, 63 evaluated, 3 expanded
[t=0.0054989s, 17608 KB] New best heuristic value for add: 56
[t=0.00554267s, 17608 KB] g=5, 66 evaluated, 5 expanded
[t=0.00587675s, 17608 KB] New best heuristic value for add: 55
[t=0.00592217s, 17608 KB] g=6, 104 evaluated, 6 expanded
[t=0.00608743s, 17608 KB] New best heuristic value for add: 54
[t=0.00613126s, 17608 KB] g=7, 123 evaluated, 7 expanded
[t=0.00623689s, 17608 KB] New best heuristic value for add: 53
[t=0.00627879s, 17608 KB] g=9, 129 evaluated, 9 expanded
[t=0.00659447s, 17608 KB] New best heuristic value for add: 52
[t=0.00663864s, 17608 KB] g=10, 165 evaluated, 10 expanded
[t=0.00679679s, 17608 KB] New best heuristic value for add: 51
[t=0.00683862s, 17608 KB] g=11, 183 evaluated, 11 expanded
[t=0.00694873s, 17608 KB] New best heuristic value for add: 50
[t=0.00699001s, 17608 KB] g=13, 192 evaluated, 13 expanded
[t=0.00729275s, 17608 KB] New best heuristic value for add: 49
[t=0.00733611s, 17608 KB] g=14, 226 evaluated, 14 expanded
[t=0.00748795s, 17608 KB] New best heuristic value for add: 48
[t=0.00753068s, 17608 KB] g=15, 243 evaluated, 15 expanded
[t=0.00765846s, 17608 KB] New best heuristic value for add: 47
[t=0.00770058s, 17608 KB] g=17, 255 evaluated, 17 expanded
[t=0.00800405s, 17608 KB] New best heuristic value for add: 46
[t=0.00804761s, 17608 KB] g=18, 287 evaluated, 18 expanded
[t=0.00819899s, 17608 KB] New best heuristic value for add: 45
[t=0.00824088s, 17608 KB] g=19, 303 evaluated, 19 expanded
[t=0.00838439s, 17608 KB] New best heuristic value for add: 44
[t=0.00842582s, 17608 KB] g=21, 318 evaluated, 21 expanded
[t=0.00868114s, 17608 KB] New best heuristic value for add: 43
[t=0.00872314s, 17608 KB] g=22, 348 evaluated, 22 expanded
[t=0.00886023s, 17608 KB] New best heuristic value for add: 42
[t=0.00890152s, 17608 KB] g=23, 363 evaluated, 23 expanded
[t=0.00906699s, 17608 KB] New best heuristic value for add: 41
[t=0.00910827s, 17608 KB] g=25, 381 evaluated, 25 expanded
[t=0.0093464s, 17608 KB] New best heuristic value for add: 40
[t=0.00938895s, 17608 KB] g=26, 409 evaluated, 26 expanded
[t=0.00951862s, 17608 KB] New best heuristic value for add: 39
[t=0.0095602s, 17608 KB] g=27, 423 evaluated, 27 expanded
[t=0.00973515s, 17608 KB] New best heuristic value for add: 38
[t=0.00977799s, 17608 KB] g=29, 444 evaluated, 29 expanded
[t=0.0100082s, 17608 KB] New best heuristic value for add: 37
[t=0.0100507s, 17608 KB] g=30, 470 evaluated, 30 expanded
[t=0.0101746s, 17608 KB] New best heuristic value for add: 36
[t=0.010216s, 17608 KB] g=31, 483 evaluated, 31 expanded
[t=0.01041s, 17608 KB] New best heuristic value for add: 35
[t=0.0104535s, 17608 KB] g=33, 507 evaluated, 33 expanded
[t=0.0107154s, 17608 KB] New best heuristic value for add: 34
[t=0.0107595s, 17608 KB] g=34, 531 evaluated, 34 expanded
[t=0.0108881s, 17608 KB] New best heuristic value for add: 33
[t=0.0109301s, 17608 KB] g=35, 543 evaluated, 35 expanded
[t=0.0111403s, 17608 KB] New best heuristic value for add: 32
[t=0.0111832s, 17608 KB] g=37, 570 evaluated, 37 expanded
[t=0.0113738s, 17608 KB] New best heuristic value for add: 31
[t=0.0114155s, 17608 KB] g=38, 592 evaluated, 38 expanded
[t=0.011527s, 17608 KB] New best heuristic value for add: 30
[t=0.0115682s, 17608 KB] g=39, 603 evaluated, 39 expanded
[t=0.0118073s, 17608 KB] New best heuristic value for add: 29
[t=0.0118507s, 17608 KB] g=41, 633 evaluated, 41 expanded
[t=0.0120275s, 17608 KB] New best heuristic value for add: 28
[t=0.0120697s, 17608 KB] g=42, 653 evaluated, 42 expanded
[t=0.0121753s, 17608 KB] New best heuristic value for add: 27
[t=0.0122163s, 17608 KB] g=43, 663 evaluated, 43 expanded
[t=0.0124527s, 17608 KB] New best heuristic value for add: 26
[t=0.0124948s, 17608 KB] g=45, 696 evaluated, 45 expanded
[t=0.0126649s, 17608 KB] New best heuristic value for add: 25
[t=0.012707s, 17608 KB] g=46, 714 evaluated, 46 expanded
[t=0.0128053s, 17608 KB] New best heuristic value for add: 24
[t=0.0128465s, 17608 KB] g=47, 723 evaluated, 47 expanded
[t=0.013098s, 17608 KB] New best heuristic value for add: 23
[t=0.0131411s, 17608 KB] g=49, 759 evaluated, 49 expanded
[t=0.0132876s, 17608 KB] New best heuristic value for add: 22
[t=0.0133306s, 17608 KB] g=50, 775 evaluated, 50 expanded
[t=0.013423s, 17608 KB] New best heuristic value for add: 21
[t=0.0134643s, 17608 KB] g=51, 783 evaluated, 51 expanded
[t=0.0137322s, 17608 KB] New best heuristic value for add: 20
[t=0.0137752s, 17608 KB] g=53, 822 evaluated, 53 expanded
[t=0.0139049s, 17608 KB] New best heuristic value for add: 19
[t=0.0139466s, 17608 KB] g=54, 836 evaluated, 54 expanded
[t=0.0140316s, 17608 KB] New best heuristic value for add: 18
[t=0.0140729s, 17608 KB] g=55, 843 evaluated, 55 expanded
[t=0.0143471s, 17608 KB] New best heuristic value for add: 17
[t=0.0143889s, 17608 KB] g=57, 885 evaluated, 57 expanded
[t=0.0145045s, 17608 KB] New best heuristic value for add: 16
[t=0.0145461s, 17608 KB] g=58, 897 evaluated, 58 expanded
[t=0.0146261s, 17608 KB] New best heuristic value for add: 15
[t=0.0146674s, 17608 KB] g=59, 903 evaluated, 59 expanded
[t=0.0149559s, 17608 KB] New best heuristic value for add: 14
[t=0.0149985s, 17608 KB] g=61, 948 evaluated, 61 expanded
[t=0.0151013s, 17608 KB] New best heuristic value for add: 13
[t=0.0151425s, 17608 KB] g=62, 958 evaluated, 62 expanded
[t=0.0152159s, 17608 KB] New best heuristic value for add: 12
[t=0.0152567s, 17608 KB] g=63, 963 evaluated, 63 expanded
[t=0.0155694s, 17608 KB] New best heuristic value for add: 11
[t=0.015612s, 17608 KB] g=65, 1011 evaluated, 65 expanded
[t=0.0157099s, 17608 KB] New best heuristic value for add: 10
[t=0.0157512s, 17608 KB] g=66, 1019 evaluated, 66 expanded
[t=0.0158203s, 17608 KB] New best heuristic value for add: 9
[t=0.0158611s, 17608 KB] g=67, 1023 evaluated, 67 expanded
[t=0.0162936s, 17608 KB] New best heuristic value for add: 8
[t=0.0163371s, 17608 KB] g=69, 1074 evaluated, 69 expanded
[t=0.0164167s, 17608 KB] New best heuristic value for add: 7
[t=0.0164582s, 17608 KB] g=70, 1080 evaluated, 70 expanded
[t=0.016521s, 17608 KB] New best heuristic value for add: 6
[t=0.0165621s, 17608 KB] g=71, 1083 evaluated, 71 expanded
[t=0.0168894s, 17608 KB] New best heuristic value for add: 5
[t=0.0169321s, 17608 KB] g=73, 1137 evaluated, 73 expanded
[t=0.0169983s, 17608 KB] New best heuristic value for add: 4
[t=0.0170395s, 17608 KB] g=74, 1141 evaluated, 74 expanded
[t=0.0170935s, 17608 KB] New best heuristic value for add: 3
[t=0.0171431s, 17608 KB] g=75, 1143 evaluated, 75 expanded
[t=0.0174812s, 17608 KB] New best heuristic value for add: 2
[t=0.0175235s, 17608 KB] g=75, 1200 evaluated, 77 expanded
[t=0.0175725s, 17608 KB] New best heuristic value for add: 1
[t=0.0176131s, 17608 KB] g=76, 1201 evaluated, 78 expanded
[t=0.0177441s, 17608 KB] New best heuristic value for add: 0
[t=0.0177859s, 17608 KB] g=77, 1222 evaluated, 79 expanded
[t=0.0178278s, 17608 KB] Solution found!
[t=0.0178754s, 17608 KB] Actual search time: 0.0132445s
pick ball1 rooma left (1)
move rooma roomb (1)
drop ball1 roomb left (1)
move roomb rooma (1)
pick ball10 rooma left (1)
move rooma roomb (1)
drop ball10 roomb left (1)
move roomb rooma (1)
pick ball11 rooma left (1)
move rooma roomb (1)
drop ball11 roomb left (1)
move roomb rooma (1)
pick ball12 rooma left (1)
move rooma roomb (1)
drop ball12 roomb left (1)
move roomb rooma (1)
pick ball13 rooma left (1)
move rooma roomb (1)
drop ball13 roomb left (1)
move roomb rooma (1)
pick ball14 rooma left (1)
move rooma roomb (1)
drop ball14 roomb left (1)
move roomb rooma (1)
pick ball15 rooma left (1)
move rooma roomb (1)
drop ball15 roomb left (1)
move roomb rooma (1)
pick ball16 rooma left (1)
move rooma roomb (1)
drop ball16 roomb left (1)
move roomb rooma (1)
pick ball17 rooma left (1)
move rooma roomb (1)
drop ball17 roomb left (1)
move roomb rooma (1)
pick ball18 rooma left (1)
move rooma roomb (1)
drop ball18 roomb left (1)
move roomb rooma (1)
pick ball19 rooma left (1)
move rooma roomb (1)
drop ball19 roomb left (1)
move roomb rooma (1)
pick ball2 rooma left (1)
move rooma roomb (1)
drop ball2 roomb left (1)
move roomb rooma (1)
pick ball20 rooma left (1)
move rooma roomb (1)
drop ball20 roomb left (1)
move roomb rooma (1)
pick ball3 rooma left (1)
move rooma roomb (1)
drop ball3 roomb left (1)
move roomb rooma (1)
pick ball4 rooma left (1)
move rooma roomb (1)
drop ball4 roomb left (1)
move roomb rooma (1)
pick ball5 rooma left (1)
move rooma roomb (1)
drop ball5 roomb left (1)
move roomb rooma (1)
pick ball6 rooma left (1)
move rooma roomb (1)
drop ball6 roomb left (1)
move roomb rooma (1)
pick ball7 rooma left (1)
move rooma roomb (1)
drop ball7 roomb left (1)
move roomb rooma (1)
pick ball8 rooma left (1)
pick ball9 rooma right (1)
move rooma roomb (1)
drop ball8 roomb left (1)
drop ball9 roomb right (1)
[t=0.0179187s, 17608 KB] Plan length: 77 step(s).
[t=0.0179187s, 17608 KB] Plan cost: 77
[t=0.0179187s, 17608 KB] Expanded 80 state(s).
[t=0.0179187s, 17608 KB] Reopened 0 state(s).
[t=0.0179187s, 17608 KB] Evaluated 1222 state(s).
[t=0.0179187s, 17608 KB] Evaluations: 1222
[t=0.0179187s, 17608 KB] Generated 1300 state(s).
[t=0.0179187s, 17608 KB] Dead ends: 0 state(s).
[t=0.0179187s, 17608 KB] Number of registered states: 1222
[t=0.0179187s, 17608 KB] Int hash set load factor: 1222/2048 = 0.59668
[t=0.0179187s, 17608 KB] Int hash set resizes: 11
[t=0.0179187s, 17608 KB] mean number of q cost that have been adjusted 0 times in relation to total number of q: -1
[t=0.0179187s, 17608 KB] mean number of q cost that have been adjusted 1 times in relation to total number of q: -1
[t=0.0179187s, 17608 KB] mean number of q cost that have been adjusted 2 times in relation to total number of q: -1
[t=0.0179187s, 17608 KB] mean number of q that are at some point overconsitent in relation to total number of q: -1
[t=0.0179187s, 17608 KB] mean number of q that are at first underconsisten in relation to total number of q: -1
[t=0.0179187s, 17608 KB] mean number of state variables that are not in common between two following states in relation to total number of state variables: -1
[t=0.0179187s, 17608 KB] variance number of state variables that are not in common between two following states in relation to total number of state variables: -1
[t=0.0179187s, 17608 KB] Search time: 0.0135355s
[t=0.0179187s, 17608 KB] Total time: 0.0179187s
Solution found.
Peak memory: 17608 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: validate domain.pddl problem.pddl sas_plan
