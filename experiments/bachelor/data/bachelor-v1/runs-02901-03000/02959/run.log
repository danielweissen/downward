INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799.96s
INFO     translator memory limit: 3584 MB
INFO     translator command line string: /infai/weidan00/downward/experiments/bachelor/.venv/bin/python3 /infai/weidan00/downward/experiments/bachelor/data/bachelor-v1/code-7aa5f34_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.010s wall-clock]
Normalizing task... [0.000s CPU, 0.001s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.002s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.040s CPU, 0.028s wall-clock]
Preparing model... [0.000s CPU, 0.009s wall-clock]
Generated 400 rules.
Computing model... [0.820s CPU, 0.829s wall-clock]
30399 relevant atoms
31995 auxiliary atoms
62394 final queue length
160559 total queue pushes
Completing instantiation... [2.580s CPU, 2.594s wall-clock]
Instantiating: [3.470s CPU, 3.484s wall-clock]
Computing fact groups...
Finding invariants...
41 initial candidates
Finding invariants: [0.070s CPU, 0.073s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
371 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.002s wall-clock]
Computing fact groups: [0.080s CPU, 0.079s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.140s CPU, 0.135s wall-clock]
Translating task: [3.220s CPU, 3.228s wall-clock]
80827 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
2 propositions removed
Detecting unreachable propositions: [1.930s CPU, 1.935s wall-clock]
Reordering and filtering variables...
373 of 373 variables necessary.
1 of 3 mutex groups necessary.
29843 of 29843 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.850s CPU, 0.845s wall-clock]
Translator variables: 373
Translator derived variables: 0
Translator facts: 749
Translator goal facts: 4
Translator mutex groups: 1
Translator total mutex groups size: 2
Translator operators: 29843
Translator axioms: 0
Translator task size: 360046
Translator peak memory: 374592 KB
Writing output... [0.570s CPU, 0.626s wall-clock]
Done! [10.240s CPU, 10.316s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1789.6s
INFO     search memory limit: 3584 MB
INFO     search command line string: /infai/weidan00/downward/experiments/bachelor/data/bachelor-v1/code-7aa5f34_e5e41175/builds/release/bin/downward --search 'eager_wastar([add()], w=2)' --internal-plan-file sas_plan < output.sas
[t=6.7873e-05s, 17204 KB] reading input...
[t=0.331549s, 30704 KB] done reading input!
[t=0.361705s, 47028 KB] Simplifying 178610 unary operators... done! [177938 unary operators]
[t=1.96581s, 61912 KB] time to simplify: 1.60421s
[t=1.9805s, 63672 KB] Initializing additive heuristic...
[t=1.98075s, 63672 KB] Building successor generator...done!
[t=2.00592s, 63672 KB] peak memory difference for successor generator creation: 0 KB
[t=2.00597s, 63672 KB] time for successor generation creation: 0.0249901s
[t=2.00711s, 63672 KB] Variables: 373
[t=2.00718s, 63672 KB] FactPairs: 749
[t=2.00722s, 63672 KB] Bytes per state: 48
[t=2.00746s, 63672 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=2.01172s, 63672 KB] New best heuristic value for add: 114
[t=2.01182s, 63672 KB] g=0, 1 evaluated, 0 expanded
[t=2.01187s, 63672 KB] Initial heuristic value for add: 114
[t=2.01192s, 63672 KB] pruning method: none
[t=2.02016s, 63672 KB] New best heuristic value for add: 77
[t=2.02027s, 63672 KB] g=1, 4 evaluated, 1 expanded
[t=2.02576s, 63672 KB] New best heuristic value for add: 69
[t=2.02586s, 63672 KB] g=2, 6 evaluated, 2 expanded
[t=2.03083s, 63672 KB] New best heuristic value for add: 61
[t=2.03093s, 63672 KB] g=3, 8 evaluated, 3 expanded
[t=2.03819s, 63672 KB] New best heuristic value for add: 53
[t=2.03829s, 63672 KB] g=4, 11 evaluated, 4 expanded
[t=2.043s, 63672 KB] New best heuristic value for add: 52
[t=2.0431s, 63672 KB] g=5, 13 evaluated, 5 expanded
[t=2.05035s, 63672 KB] New best heuristic value for add: 50
[t=2.05045s, 63672 KB] g=6, 16 evaluated, 6 expanded
[t=2.05291s, 63672 KB] New best heuristic value for add: 48
[t=2.05301s, 63672 KB] g=6, 17 evaluated, 6 expanded
[t=2.0577s, 63672 KB] New best heuristic value for add: 46
[t=2.0578s, 63672 KB] g=7, 19 evaluated, 7 expanded
[t=2.06026s, 63672 KB] New best heuristic value for add: 43
[t=2.06036s, 63672 KB] g=7, 20 evaluated, 7 expanded
[t=2.06502s, 63672 KB] New best heuristic value for add: 41
[t=2.06512s, 63672 KB] g=8, 22 evaluated, 8 expanded
[t=2.06752s, 63672 KB] New best heuristic value for add: 39
[t=2.06762s, 63672 KB] g=8, 23 evaluated, 8 expanded
[t=2.71636s, 63672 KB] New best heuristic value for add: 38
[t=2.71647s, 63672 KB] g=14, 304 evaluated, 103 expanded, 3 reopened
[t=2.72117s, 63672 KB] New best heuristic value for add: 37
[t=2.72128s, 63672 KB] g=15, 306 evaluated, 104 expanded, 3 reopened
[t=2.83733s, 63672 KB] New best heuristic value for add: 35
[t=2.83744s, 63672 KB] g=15, 357 evaluated, 123 expanded, 3 reopened
[t=2.84006s, 63672 KB] New best heuristic value for add: 34
[t=2.84016s, 63672 KB] g=15, 358 evaluated, 123 expanded, 3 reopened
[t=2.845s, 63672 KB] New best heuristic value for add: 32
[t=2.84511s, 63672 KB] g=16, 360 evaluated, 124 expanded, 3 reopened
[t=2.85975s, 63672 KB] New best heuristic value for add: 31
[t=2.85986s, 63672 KB] g=17, 366 evaluated, 125 expanded, 3 reopened
[t=2.97233s, 63672 KB] New best heuristic value for add: 30
[t=2.97245s, 63672 KB] g=18, 415 evaluated, 142 expanded, 3 reopened
[t=3.00461s, 63672 KB] New best heuristic value for add: 29
[t=3.00472s, 63672 KB] g=21, 429 evaluated, 148 expanded, 3 reopened
[t=3.13708s, 63672 KB] New best heuristic value for add: 26
[t=3.13719s, 63672 KB] g=26, 486 evaluated, 173 expanded, 3 reopened
[t=3.14204s, 63672 KB] New best heuristic value for add: 24
[t=3.14215s, 63672 KB] g=27, 488 evaluated, 174 expanded, 3 reopened
[t=3.14457s, 63672 KB] New best heuristic value for add: 22
[t=3.14467s, 63672 KB] g=27, 489 evaluated, 174 expanded, 3 reopened
[t=3.15852s, 63672 KB] New best heuristic value for add: 21
[t=3.15862s, 63672 KB] g=28, 495 evaluated, 175 expanded, 3 reopened
[t=3.19441s, 63672 KB] New best heuristic value for add: 19
[t=3.19452s, 63672 KB] g=31, 511 evaluated, 183 expanded, 3 reopened
[t=3.21895s, 63672 KB] New best heuristic value for add: 15
[t=3.21905s, 63672 KB] g=32, 522 evaluated, 186 expanded, 3 reopened
[t=3.23251s, 63672 KB] New best heuristic value for add: 14
[t=3.23261s, 63672 KB] g=33, 528 evaluated, 187 expanded, 3 reopened
[t=3.31145s, 63672 KB] New best heuristic value for add: 12
[t=3.31155s, 63672 KB] g=38, 562 evaluated, 199 expanded, 3 reopened
[t=3.31606s, 63672 KB] New best heuristic value for add: 11
[t=3.31617s, 63672 KB] g=39, 564 evaluated, 200 expanded, 3 reopened
[t=3.31854s, 63672 KB] New best heuristic value for add: 10
[t=3.31864s, 63672 KB] g=39, 565 evaluated, 200 expanded, 3 reopened
[t=3.32072s, 63672 KB] New best heuristic value for add: 9
[t=3.32082s, 63672 KB] g=40, 566 evaluated, 201 expanded, 3 reopened
[t=3.3253s, 63672 KB] New best heuristic value for add: 8
[t=3.32539s, 63672 KB] g=40, 568 evaluated, 201 expanded, 3 reopened
[t=3.327s, 63672 KB] New best heuristic value for add: 6
[t=3.32709s, 63672 KB] g=41, 569 evaluated, 202 expanded, 3 reopened
[t=3.33238s, 63672 KB] New best heuristic value for add: 4
[t=3.33248s, 63672 KB] g=42, 572 evaluated, 203 expanded, 3 reopened
[t=3.35264s, 63672 KB] New best heuristic value for add: 3
[t=3.35275s, 63672 KB] g=44, 585 evaluated, 208 expanded, 3 reopened
[t=3.35588s, 63672 KB] New best heuristic value for add: 2
[t=3.35598s, 63672 KB] g=45, 587 evaluated, 209 expanded, 3 reopened
[t=3.36359s, 63672 KB] New best heuristic value for add: 1
[t=3.36369s, 63672 KB] g=46, 592 evaluated, 210 expanded, 3 reopened
[t=3.36853s, 63672 KB] New best heuristic value for add: 0
[t=3.36862s, 63672 KB] g=47, 596 evaluated, 211 expanded, 3 reopened
[t=3.36867s, 63672 KB] Solution found!
[t=3.36872s, 63672 KB] Actual search time: 1.3568s
unpark pr2 xrel0 yrel0 (1)
base-right pr2 x0 x1 y0 (1)
base-right pr2 x1 x2 y0 (1)
base-down pr2 x2 y0 y1 (1)
base-right pr2 x2 x3 y1 (1)
base-right pr2 x3 x4 y1 (1)
base-down pr2 x4 y1 y2 (1)
base-down pr2 x4 y2 y3 (1)
park pr2 (1)
get-right pr2 x4 y3 xrel0 x4 yrel0 y3 object0 x5 (1)
unpark pr2 xrel0 yrel0 (1)
base-down pr2 x4 y3 y4 (1)
park pr2 (1)
put-up pr2 x4 y4 xrel0 x4 yrel0 y4 object0 y3 (1)
get-right pr2 x4 y4 xrel0 x4 yrel0 y4 object1 x5 (1)
unpark pr2 xrel0 yrel0 (1)
base-up pr2 x4 y4 y3 (1)
finish-object object0 x4 y3 (1)
park pr2 (1)
put-right pr2 x4 y3 xrel0 x4 yrel0 y3 object1 x5 (1)
get-down pr2 x4 y3 xrel0 x4 yrel0 y3 object3 y4 (1)
unpark pr2 xrel0 yrel0 (1)
base-right pr2 x4 x5 y3 (1)
park pr2 (1)
put-down pr2 x5 y3 xrel0 x5 yrel0 y3 object3 y4 (1)
unpark pr2 xrel0 yrel0 (1)
base-left pr2 x5 x4 y3 (1)
finish-object object3 x5 y4 (1)
park pr2 (1)
get-right pr2 x4 y3 xrel0 x4 yrel0 y3 object1 x5 (1)
put-down pr2 x4 y3 xrel0 x4 yrel0 y3 object1 y4 (1)
unpark pr2 xrel0 yrel0 (1)
finish-object object1 x4 y4 (1)
base-up pr2 x4 y3 y2 (1)
base-up pr2 x4 y2 y1 (1)
base-left pr2 x4 x3 y1 (1)
base-left pr2 x3 x2 y1 (1)
base-down pr2 x2 y1 y2 (1)
base-down pr2 x2 y2 y3 (1)
base-down pr2 x2 y3 y4 (1)
base-down pr2 x2 y4 y5 (1)
park pr2 (1)
gripper-down pr2 x2 y5 xrel0 x2 yrel0 yrel1 y5 y6 (1)
get-left pr2 x2 y5 xrel0 x2 yrel1 y6 object2 x1 (1)
gripper-up pr2 x2 y5 xrel0 x2 yrel1 yrel0 y6 y5 (1)
put-left pr2 x2 y5 xrel0 x2 yrel0 y5 object2 x1 (1)
finish-object object2 x1 y5 (1)
[t=3.36876s, 63672 KB] Plan length: 47 step(s).
[t=3.36876s, 63672 KB] Plan cost: 47
[t=3.36876s, 63672 KB] Expanded 212 state(s).
[t=3.36876s, 63672 KB] Reopened 3 state(s).
[t=3.36876s, 63672 KB] Evaluated 596 state(s).
[t=3.36876s, 63672 KB] Evaluations: 596
[t=3.36876s, 63672 KB] Generated 895 state(s).
[t=3.36876s, 63672 KB] Dead ends: 0 state(s).
[t=3.36876s, 63672 KB] Number of registered states: 596
[t=3.36876s, 63672 KB] Int hash set load factor: 596/1024 = 0.582031
[t=3.36876s, 63672 KB] Int hash set resizes: 10
[t=3.36876s, 63672 KB] mean number of q cost that have been adjusted 0 times in relation to total number of q: -1
[t=3.36876s, 63672 KB] mean number of q cost that have been adjusted 1 times in relation to total number of q: -1
[t=3.36876s, 63672 KB] mean number of q cost that have been adjusted 2 times in relation to total number of q: -1
[t=3.36876s, 63672 KB] mean number of q that are at some point overconsitent in relation to total number of q: -1
[t=3.36876s, 63672 KB] mean number of q that are at first underconsisten in relation to total number of q: -1
[t=3.36876s, 63672 KB] mean number of state variables that are not in common between two following states in relation to total number of state variables: -1
[t=3.36876s, 63672 KB] variance number of state variables that are not in common between two following states in relation to total number of state variables: -1
[t=3.36876s, 63672 KB] Search time: 1.36131s
[t=3.36876s, 63672 KB] Total time: 3.36876s
Solution found.
Peak memory: 63672 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: validate domain.pddl problem.pddl sas_plan
