INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799.95s
INFO     translator memory limit: 3584 MB
INFO     translator command line string: /infai/weidan00/downward/experiments/bachelor/.venv/bin/python3 /infai/weidan00/downward/experiments/bachelor/data/bachelor-v1/code-7aa5f34_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.010s wall-clock]
Normalizing task... [0.000s CPU, 0.001s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.002s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.030s CPU, 0.029s wall-clock]
Preparing model... [0.010s CPU, 0.009s wall-clock]
Generated 400 rules.
Computing model... [1.230s CPU, 1.234s wall-clock]
45717 relevant atoms
39821 auxiliary atoms
85538 final queue length
236723 total queue pushes
Completing instantiation... [4.320s CPU, 4.335s wall-clock]
Instantiating: [5.620s CPU, 5.639s wall-clock]
Computing fact groups...
Finding invariants...
41 initial candidates
Finding invariants: [0.110s CPU, 0.103s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
471 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.002s wall-clock]
Computing fact groups: [0.110s CPU, 0.111s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.001s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.200s CPU, 0.208s wall-clock]
Translating task: [5.170s CPU, 5.194s wall-clock]
124973 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
2 propositions removed
Detecting unreachable propositions: [2.430s CPU, 2.443s wall-clock]
Reordering and filtering variables...
473 of 473 variables necessary.
1 of 3 mutex groups necessary.
45042 of 45042 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [1.370s CPU, 1.360s wall-clock]
Translator variables: 473
Translator derived variables: 0
Translator facts: 949
Translator goal facts: 4
Translator mutex groups: 1
Translator total mutex groups size: 2
Translator operators: 45042
Translator axioms: 0
Translator task size: 549492
Translator peak memory: 497052 KB
Writing output... [0.910s CPU, 0.979s wall-clock]
Done! [15.820s CPU, 15.946s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1783.98s
INFO     search memory limit: 3584 MB
INFO     search command line string: /infai/weidan00/downward/experiments/bachelor/data/bachelor-v1/code-7aa5f34_e5e41175/builds/release/bin/downward --search 'eager_wastar([add()], w=2)' --internal-plan-file sas_plan < output.sas
[t=6.5362e-05s, 17204 KB] reading input...
[t=0.503866s, 37804 KB] done reading input!
[t=0.546516s, 57524 KB] Simplifying 275631 unary operators... done! [274383 unary operators]
[t=3.24181s, 82224 KB] time to simplify: 2.69541s
[t=3.26428s, 83692 KB] Initializing additive heuristic...
[t=3.26456s, 83692 KB] Building successor generator...done!
[t=3.30546s, 83692 KB] peak memory difference for successor generator creation: 0 KB
[t=3.30551s, 83692 KB] time for successor generation creation: 0.0407165s
[t=3.30594s, 83692 KB] Variables: 473
[t=3.306s, 83692 KB] FactPairs: 949
[t=3.30605s, 83692 KB] Bytes per state: 60
[t=3.30629s, 83692 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=3.31212s, 83692 KB] New best heuristic value for add: 111
[t=3.31222s, 83692 KB] g=0, 1 evaluated, 0 expanded
[t=3.31228s, 83692 KB] Initial heuristic value for add: 111
[t=3.31232s, 83692 KB] pruning method: none
[t=3.32832s, 83692 KB] New best heuristic value for add: 84
[t=3.32843s, 83692 KB] g=1, 4 evaluated, 1 expanded
[t=3.34014s, 83692 KB] New best heuristic value for add: 75
[t=3.34024s, 83692 KB] g=2, 6 evaluated, 2 expanded
[t=3.35065s, 83692 KB] New best heuristic value for add: 67
[t=3.35076s, 83692 KB] g=3, 8 evaluated, 3 expanded
[t=3.36101s, 83692 KB] New best heuristic value for add: 62
[t=3.36111s, 83692 KB] g=4, 10 evaluated, 4 expanded
[t=3.36635s, 83692 KB] New best heuristic value for add: 59
[t=3.36645s, 83692 KB] g=4, 11 evaluated, 4 expanded
[t=3.37602s, 83692 KB] New best heuristic value for add: 52
[t=3.37612s, 83692 KB] g=5, 13 evaluated, 5 expanded
[t=3.39574s, 83692 KB] New best heuristic value for add: 50
[t=3.39584s, 83692 KB] g=6, 17 evaluated, 6 expanded
[t=3.40034s, 83692 KB] New best heuristic value for add: 46
[t=3.40043s, 83692 KB] g=7, 18 evaluated, 7 expanded
[t=3.46743s, 83692 KB] New best heuristic value for add: 45
[t=3.46753s, 83692 KB] g=9, 32 evaluated, 11 expanded
[t=3.50031s, 83692 KB] New best heuristic value for add: 44
[t=3.50042s, 83692 KB] g=12, 39 evaluated, 14 expanded
[t=3.50936s, 83692 KB] New best heuristic value for add: 42
[t=3.50946s, 83692 KB] g=13, 41 evaluated, 15 expanded
[t=3.52342s, 83692 KB] New best heuristic value for add: 41
[t=3.52352s, 83692 KB] g=14, 44 evaluated, 16 expanded
[t=3.55532s, 83692 KB] New best heuristic value for add: 40
[t=3.55542s, 83692 KB] g=15, 52 evaluated, 18 expanded
[t=3.69265s, 83692 KB] New best heuristic value for add: 38
[t=3.69276s, 83692 KB] g=21, 85 evaluated, 31 expanded
[t=3.96446s, 83692 KB] New best heuristic value for add: 33
[t=3.96456s, 83692 KB] g=22, 150 evaluated, 56 expanded
[t=3.98486s, 83692 KB] New best heuristic value for add: 31
[t=3.98496s, 83692 KB] g=23, 155 evaluated, 57 expanded
[t=4.00817s, 83692 KB] New best heuristic value for add: 30
[t=4.00829s, 83692 KB] g=24, 160 evaluated, 58 expanded
[t=4.91722s, 83692 KB] New best heuristic value for add: 29
[t=4.91733s, 83692 KB] g=33, 379 evaluated, 141 expanded
[t=6.24663s, 83692 KB] New best heuristic value for add: 28
[t=6.24675s, 83692 KB] g=36, 686 evaluated, 255 expanded
[t=6.26772s, 83692 KB] New best heuristic value for add: 27
[t=6.26783s, 83692 KB] g=37, 691 evaluated, 256 expanded
[t=6.31134s, 83692 KB] New best heuristic value for add: 26
[t=6.31146s, 83692 KB] g=38, 701 evaluated, 259 expanded
[t=6.32731s, 83692 KB] New best heuristic value for add: 23
[t=6.32741s, 83692 KB] g=39, 705 evaluated, 260 expanded
[t=6.33491s, 83692 KB] New best heuristic value for add: 21
[t=6.33501s, 83692 KB] g=40, 707 evaluated, 261 expanded
[t=6.35914s, 83692 KB] New best heuristic value for add: 20
[t=6.35925s, 83692 KB] g=41, 713 evaluated, 262 expanded
[t=6.38907s, 83692 KB] New best heuristic value for add: 18
[t=6.38917s, 83692 KB] g=43, 720 evaluated, 264 expanded
[t=6.44714s, 83692 KB] New best heuristic value for add: 17
[t=6.44724s, 83692 KB] g=47, 734 evaluated, 269 expanded
[t=7.06504s, 83692 KB] New best heuristic value for add: 14
[t=7.06516s, 83692 KB] g=49, 882 evaluated, 338 expanded, 6 reopened
[t=7.08071s, 83692 KB] New best heuristic value for add: 13
[t=7.08081s, 83692 KB] g=50, 886 evaluated, 339 expanded, 6 reopened
[t=7.12434s, 83692 KB] New best heuristic value for add: 12
[t=7.12445s, 83692 KB] g=50, 898 evaluated, 344 expanded, 6 reopened
[t=7.24007s, 83692 KB] New best heuristic value for add: 11
[t=7.24017s, 83692 KB] g=56, 930 evaluated, 359 expanded, 6 reopened
[t=7.25389s, 83692 KB] New best heuristic value for add: 10
[t=7.25399s, 83692 KB] g=57, 934 evaluated, 360 expanded, 6 reopened
[t=7.33458s, 83692 KB] New best heuristic value for add: 9
[t=7.33468s, 83692 KB] g=60, 955 evaluated, 374 expanded, 6 reopened
[t=7.34297s, 83692 KB] New best heuristic value for add: 8
[t=7.34307s, 83692 KB] g=61, 957 evaluated, 375 expanded, 6 reopened
[t=7.35216s, 83692 KB] New best heuristic value for add: 7
[t=7.35225s, 83692 KB] g=61, 959 evaluated, 375 expanded, 6 reopened
[t=7.3558s, 83692 KB] New best heuristic value for add: 5
[t=7.3559s, 83692 KB] g=62, 960 evaluated, 376 expanded, 6 reopened
[t=7.38799s, 83692 KB] New best heuristic value for add: 4
[t=7.3881s, 83692 KB] g=64, 969 evaluated, 379 expanded, 6 reopened
[t=7.39154s, 83692 KB] New best heuristic value for add: 3
[t=7.39164s, 83692 KB] g=65, 970 evaluated, 380 expanded, 6 reopened
[t=7.40309s, 83692 KB] New best heuristic value for add: 2
[t=7.40321s, 83692 KB] g=66, 973 evaluated, 381 expanded, 6 reopened
[t=7.41338s, 83692 KB] New best heuristic value for add: 1
[t=7.41349s, 83692 KB] g=67, 976 evaluated, 382 expanded, 6 reopened
[t=7.42403s, 83692 KB] New best heuristic value for add: 0
[t=7.42413s, 83692 KB] g=68, 980 evaluated, 383 expanded, 6 reopened
[t=7.42418s, 83692 KB] Solution found!
[t=7.42424s, 83692 KB] Actual search time: 4.11192s
unpark pr2 xrel0 yrel0 (1)
base-right pr2 x0 x1 y0 (1)
base-right pr2 x1 x2 y0 (1)
base-down pr2 x2 y0 y1 (1)
base-down pr2 x2 y1 y2 (1)
base-right pr2 x2 x3 y2 (1)
base-down pr2 x3 y2 y3 (1)
base-right pr2 x3 x4 y3 (1)
base-right pr2 x4 x5 y3 (1)
base-right pr2 x5 x6 y3 (1)
base-down pr2 x6 y3 y4 (1)
base-down pr2 x6 y4 y5 (1)
base-left pr2 x6 x5 y5 (1)
base-left pr2 x5 x4 y5 (1)
base-down pr2 x4 y5 y6 (1)
park pr2 (1)
get-left pr2 x4 y6 xrel0 x4 yrel0 y6 object0 x3 (1)
unpark pr2 xrel0 yrel0 (1)
base-up pr2 x4 y6 y5 (1)
park pr2 (1)
put-left pr2 x4 y5 xrel0 x4 yrel0 y5 object0 x3 (1)
unpark pr2 xrel0 yrel0 (1)
base-right pr2 x4 x5 y5 (1)
finish-object object0 x3 y5 (1)
base-right pr2 x5 x6 y5 (1)
base-up pr2 x6 y5 y4 (1)
base-up pr2 x6 y4 y3 (1)
base-left pr2 x6 x5 y3 (1)
base-left pr2 x5 x4 y3 (1)
park pr2 (1)
get-up pr2 x4 y3 xrel0 x4 yrel0 y3 object2 y2 (1)
unpark pr2 xrel0 yrel0 (1)
base-right pr2 x4 x5 y3 (1)
base-right pr2 x5 x6 y3 (1)
base-down pr2 x6 y3 y4 (1)
base-down pr2 x6 y4 y5 (1)
park pr2 (1)
gripper-left pr2 x6 y5 xrel0 xrel-1 x6 x5 yrel0 y5 (1)
put-left pr2 x6 y5 xrel-1 x5 yrel0 y5 object2 x4 (1)
gripper-right pr2 x6 y5 xrel-1 xrel0 x5 x6 yrel0 y5 (1)
finish-object object2 x4 y5 (1)
gripper-down pr2 x6 y5 xrel0 x6 yrel0 yrel1 y5 y6 (1)
get-right pr2 x6 y5 xrel0 x6 yrel1 y6 object1 x7 (1)
gripper-up pr2 x6 y5 xrel0 x6 yrel1 yrel0 y6 y5 (1)
unpark pr2 xrel0 yrel0 (1)
base-up pr2 x6 y5 y4 (1)
base-up pr2 x6 y4 y3 (1)
base-left pr2 x6 x5 y3 (1)
base-left pr2 x5 x4 y3 (1)
park pr2 (1)
gripper-up pr2 x4 y3 xrel0 x4 yrel0 yrel-1 y3 y2 (1)
put-up pr2 x4 y3 xrel0 x4 yrel-1 y2 object1 y1 (1)
gripper-right pr2 x4 y3 xrel0 xrel1 x4 x5 yrel-1 y2 (1)
get-up pr2 x4 y3 xrel1 x5 yrel-1 y2 object3 y1 (1)
gripper-left pr2 x4 y3 xrel1 xrel0 x5 x4 yrel-1 y2 (1)
gripper-down pr2 x4 y3 xrel0 x4 yrel-1 yrel0 y2 y3 (1)
put-up pr2 x4 y3 xrel0 x4 yrel0 y3 object3 y2 (1)
finish-object object3 x4 y2 (1)
unpark pr2 xrel0 yrel0 (1)
base-left pr2 x4 x3 y3 (1)
base-up pr2 x3 y3 y2 (1)
park pr2 (1)
gripper-up pr2 x3 y2 xrel0 x3 yrel0 yrel-1 y2 y1 (1)
get-right pr2 x3 y2 xrel0 x3 yrel-1 y1 object1 x4 (1)
gripper-left pr2 x3 y2 xrel0 xrel-1 x3 x2 yrel-1 y1 (1)
gripper-down pr2 x3 y2 xrel-1 x2 yrel-1 yrel0 y1 y2 (1)
put-left pr2 x3 y2 xrel-1 x2 yrel0 y2 object1 x1 (1)
finish-object object1 x1 y2 (1)
[t=7.42429s, 83692 KB] Plan length: 68 step(s).
[t=7.42429s, 83692 KB] Plan cost: 68
[t=7.42429s, 83692 KB] Expanded 384 state(s).
[t=7.42429s, 83692 KB] Reopened 6 state(s).
[t=7.42429s, 83692 KB] Evaluated 980 state(s).
[t=7.42429s, 83692 KB] Evaluations: 980
[t=7.42429s, 83692 KB] Generated 1632 state(s).
[t=7.42429s, 83692 KB] Dead ends: 0 state(s).
[t=7.42429s, 83692 KB] Number of registered states: 980
[t=7.42429s, 83692 KB] Int hash set load factor: 980/1024 = 0.957031
[t=7.42429s, 83692 KB] Int hash set resizes: 10
[t=7.42429s, 83692 KB] mean number of q cost that have been adjusted 0 times in relation to total number of q: -1
[t=7.42429s, 83692 KB] mean number of q cost that have been adjusted 1 times in relation to total number of q: -1
[t=7.42429s, 83692 KB] mean number of q cost that have been adjusted 2 times in relation to total number of q: -1
[t=7.42429s, 83692 KB] mean number of q that are at some point overconsitent in relation to total number of q: -1
[t=7.42429s, 83692 KB] mean number of q that are at first underconsisten in relation to total number of q: -1
[t=7.42429s, 83692 KB] mean number of state variables that are not in common between two following states in relation to total number of state variables: -1
[t=7.42429s, 83692 KB] variance number of state variables that are not in common between two following states in relation to total number of state variables: -1
[t=7.42429s, 83692 KB] Search time: 4.118s
[t=7.42429s, 83692 KB] Total time: 7.42429s
Solution found.
Peak memory: 83692 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: validate domain.pddl problem.pddl sas_plan
