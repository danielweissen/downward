INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799.96s
INFO     translator memory limit: 3584 MB
INFO     translator command line string: /infai/weidan00/downward/experiments/bachelor/.venv/bin/python3 /infai/weidan00/downward/experiments/bachelor/data/bachelor-v1/code-7aa5f34_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.009s wall-clock]
Normalizing task... [0.000s CPU, 0.001s wall-clock]
Instantiating...
Generating Datalog program... [0.010s CPU, 0.002s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.014s wall-clock]
Preparing model... [0.010s CPU, 0.008s wall-clock]
Generated 284 rules.
Computing model... [0.360s CPU, 0.358s wall-clock]
10251 relevant atoms
20086 auxiliary atoms
30337 final queue length
65455 total queue pushes
Completing instantiation... [0.730s CPU, 0.736s wall-clock]
Instantiating: [1.130s CPU, 1.129s wall-clock]
Computing fact groups...
Finding invariants...
22 initial candidates
Finding invariants: [0.090s CPU, 0.084s wall-clock]
Checking invariant weight... [0.000s CPU, 0.001s wall-clock]
Instantiating groups... [0.010s CPU, 0.011s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.001s wall-clock]
Choosing groups...
328 uncovered facts
Choosing groups: [0.000s CPU, 0.003s wall-clock]
Building translation key... [0.000s CPU, 0.002s wall-clock]
Computing fact groups: [0.110s CPU, 0.108s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.001s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.002s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.030s CPU, 0.028s wall-clock]
Translating task: [0.820s CPU, 0.835s wall-clock]
8917 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
1 propositions removed
Detecting unreachable propositions: [0.430s CPU, 0.430s wall-clock]
Reordering and filtering variables...
343 of 354 variables necessary.
68 of 94 mutex groups necessary.
9069 of 9073 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.190s CPU, 0.192s wall-clock]
Translator variables: 343
Translator derived variables: 0
Translator facts: 1014
Translator goal facts: 4
Translator mutex groups: 68
Translator total mutex groups size: 873
Translator operators: 9069
Translator axioms: 0
Translator task size: 97335
Translator peak memory: 211868 KB
Writing output... [0.150s CPU, 0.170s wall-clock]
Done! [2.870s CPU, 2.912s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1797.02s
INFO     search memory limit: 3584 MB
INFO     search command line string: /infai/weidan00/downward/experiments/bachelor/data/bachelor-v1/code-7aa5f34_e5e41175/builds/release/bin/downward --search 'eager_wastar([add()], w=2)' --internal-plan-file sas_plan < output.sas
[t=5.8976e-05s, 17204 KB] reading input...
[t=0.0862571s, 21100 KB] done reading input!
[t=0.0961505s, 25600 KB] Simplifying 51569 unary operators... done! [50814 unary operators]
[t=0.197408s, 30000 KB] time to simplify: 0.101364s
[t=0.200965s, 30000 KB] Initializing additive heuristic...
[t=0.201164s, 30000 KB] Building successor generator...done!
[t=0.207295s, 30000 KB] peak memory difference for successor generator creation: 0 KB
[t=0.207339s, 30000 KB] time for successor generation creation: 0.00597124s
[t=0.207456s, 30000 KB] Variables: 343
[t=0.207501s, 30000 KB] FactPairs: 1014
[t=0.207541s, 30000 KB] Bytes per state: 56
[t=0.207681s, 30000 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.208786s, 30000 KB] New best heuristic value for add: 1274
[t=0.208849s, 30000 KB] g=0, 1 evaluated, 0 expanded
[t=0.208899s, 30000 KB] Initial heuristic value for add: 1274
[t=0.208941s, 30000 KB] pruning method: none
[t=0.20983s, 30000 KB] New best heuristic value for add: 1266
[t=0.209888s, 30000 KB] g=1, 2 evaluated, 1 expanded
[t=0.210714s, 30000 KB] New best heuristic value for add: 1236
[t=0.210769s, 30000 KB] g=1, 3 evaluated, 1 expanded
[t=0.212382s, 30000 KB] New best heuristic value for add: 1228
[t=0.212441s, 30000 KB] g=2, 5 evaluated, 2 expanded
[t=0.214729s, 30000 KB] New best heuristic value for add: 1222
[t=0.21479s, 30000 KB] g=3, 8 evaluated, 3 expanded
[t=0.217067s, 30000 KB] New best heuristic value for add: 1182
[t=0.217128s, 30000 KB] g=4, 11 evaluated, 4 expanded
[t=0.218646s, 30000 KB] New best heuristic value for add: 1148
[t=0.218706s, 30000 KB] g=5, 13 evaluated, 5 expanded
[t=0.22021s, 30000 KB] New best heuristic value for add: 1046
[t=0.220269s, 30000 KB] g=6, 15 evaluated, 6 expanded
[t=0.222418s, 30000 KB] New best heuristic value for add: 1044
[t=0.222477s, 30000 KB] g=7, 18 evaluated, 7 expanded
[t=0.223233s, 30000 KB] New best heuristic value for add: 983
[t=0.223298s, 30000 KB] g=7, 19 evaluated, 7 expanded
[t=0.224801s, 30000 KB] New best heuristic value for add: 880
[t=0.22486s, 30000 KB] g=8, 21 evaluated, 8 expanded
[t=0.226349s, 30000 KB] New best heuristic value for add: 875
[t=0.226407s, 30000 KB] g=9, 23 evaluated, 9 expanded
[t=0.227176s, 30000 KB] New best heuristic value for add: 799
[t=0.227231s, 30000 KB] g=9, 24 evaluated, 9 expanded
[t=0.228726s, 30000 KB] New best heuristic value for add: 732
[t=0.228784s, 30000 KB] g=10, 26 evaluated, 10 expanded
[t=0.235036s, 30000 KB] New best heuristic value for add: 722
[t=0.235105s, 30000 KB] g=13, 35 evaluated, 13 expanded
[t=0.237819s, 30000 KB] New best heuristic value for add: 658
[t=0.237884s, 30000 KB] g=14, 39 evaluated, 14 expanded
[t=0.240594s, 30000 KB] New best heuristic value for add: 657
[t=0.240657s, 30000 KB] g=15, 43 evaluated, 15 expanded
[t=0.242731s, 30000 KB] New best heuristic value for add: 616
[t=0.242792s, 30000 KB] g=16, 46 evaluated, 16 expanded
[t=0.247956s, 30000 KB] New best heuristic value for add: 614
[t=0.248024s, 30000 KB] g=16, 54 evaluated, 18 expanded
[t=0.266286s, 30000 KB] New best heuristic value for add: 601
[t=0.266368s, 30000 KB] g=21, 85 evaluated, 29 expanded
[t=0.268062s, 30000 KB] New best heuristic value for add: 599
[t=0.268126s, 30000 KB] g=22, 88 evaluated, 30 expanded
[t=0.270285s, 30000 KB] New best heuristic value for add: 594
[t=0.270346s, 30000 KB] g=23, 92 evaluated, 31 expanded
[t=0.272926s, 30000 KB] New best heuristic value for add: 575
[t=0.272987s, 30000 KB] g=24, 97 evaluated, 32 expanded
[t=0.275041s, 30000 KB] New best heuristic value for add: 539
[t=0.275102s, 30000 KB] g=25, 101 evaluated, 33 expanded
[t=0.27714s, 30000 KB] New best heuristic value for add: 538
[t=0.277199s, 30000 KB] g=26, 105 evaluated, 34 expanded
[t=0.277748s, 30000 KB] New best heuristic value for add: 508
[t=0.277802s, 30000 KB] g=26, 106 evaluated, 34 expanded
[t=0.28036s, 30000 KB] New best heuristic value for add: 477
[t=0.280419s, 30000 KB] g=27, 111 evaluated, 35 expanded
[t=0.281968s, 30000 KB] New best heuristic value for add: 455
[t=0.282025s, 30000 KB] g=28, 114 evaluated, 36 expanded
[t=0.285526s, 30000 KB] New best heuristic value for add: 445
[t=0.285588s, 30000 KB] g=29, 121 evaluated, 37 expanded
[t=0.313709s, 30000 KB] New best heuristic value for add: 432
[t=0.313798s, 30000 KB] g=37, 179 evaluated, 59 expanded
[t=0.315257s, 30000 KB] New best heuristic value for add: 429
[t=0.315322s, 30000 KB] g=38, 182 evaluated, 60 expanded
[t=0.316322s, 30000 KB] New best heuristic value for add: 421
[t=0.316379s, 30000 KB] g=38, 184 evaluated, 60 expanded
[t=0.317397s, 30000 KB] New best heuristic value for add: 410
[t=0.317454s, 30000 KB] g=39, 186 evaluated, 61 expanded
[t=0.318929s, 30000 KB] New best heuristic value for add: 399
[t=0.318986s, 30000 KB] g=40, 189 evaluated, 62 expanded
[t=0.322814s, 30000 KB] New best heuristic value for add: 383
[t=0.322882s, 30000 KB] g=42, 197 evaluated, 65 expanded
[t=0.32433s, 30000 KB] New best heuristic value for add: 381
[t=0.32439s, 30000 KB] g=43, 200 evaluated, 66 expanded
[t=0.326288s, 30000 KB] New best heuristic value for add: 353
[t=0.326348s, 30000 KB] g=44, 204 evaluated, 67 expanded
[t=0.328257s, 30000 KB] New best heuristic value for add: 343
[t=0.328316s, 30000 KB] g=45, 208 evaluated, 68 expanded
[t=0.533427s, 30000 KB] New best heuristic value for add: 336
[t=0.533522s, 30000 KB] g=46, 643 evaluated, 223 expanded
[t=2.45715s, 30000 KB] New best heuristic value for add: 326
[t=2.45727s, 30000 KB] g=59, 4892 evaluated, 2274 expanded, 581 reopened
[t=3.15202s, 30000 KB] New best heuristic value for add: 305
[t=3.15214s, 30000 KB] g=72, 6504 evaluated, 2931 expanded, 585 reopened
[t=3.15375s, 30000 KB] New best heuristic value for add: 295
[t=3.15381s, 30000 KB] g=73, 6508 evaluated, 2932 expanded, 585 reopened
[t=3.78865s, 30000 KB] New best heuristic value for add: 266
[t=3.78878s, 30000 KB] g=74, 8153 evaluated, 3540 expanded, 589 reopened
[t=3.79128s, 30000 KB] New best heuristic value for add: 259
[t=3.79134s, 30000 KB] g=75, 8160 evaluated, 3541 expanded, 589 reopened
[t=3.81177s, 30000 KB] New best heuristic value for add: 255
[t=3.81186s, 30000 KB] g=77, 8219 evaluated, 3552 expanded, 589 reopened
[t=3.81392s, 30000 KB] New best heuristic value for add: 238
[t=3.81399s, 30000 KB] g=78, 8225 evaluated, 3553 expanded, 589 reopened
[t=3.81571s, 30000 KB] New best heuristic value for add: 229
[t=3.81577s, 30000 KB] g=79, 8230 evaluated, 3554 expanded, 589 reopened
[t=3.8184s, 30000 KB] New best heuristic value for add: 224
[t=3.81846s, 30000 KB] g=80, 8238 evaluated, 3555 expanded, 589 reopened
[t=3.82041s, 30000 KB] New best heuristic value for add: 217
[t=3.82046s, 30000 KB] g=81, 8244 evaluated, 3556 expanded, 589 reopened
[t=3.82899s, 30000 KB] New best heuristic value for add: 215
[t=3.82906s, 30000 KB] g=83, 8271 evaluated, 3561 expanded, 589 reopened
[t=3.85946s, 30000 KB] New best heuristic value for add: 209
[t=3.85955s, 30000 KB] g=85, 8368 evaluated, 3581 expanded, 589 reopened
[t=4.40835s, 30000 KB] New best heuristic value for add: 190
[t=4.40847s, 30000 KB] g=91, 10141 evaluated, 4052 expanded, 598 reopened
[t=4.41126s, 30000 KB] New best heuristic value for add: 181
[t=4.41134s, 30000 KB] g=92, 10150 evaluated, 4053 expanded, 598 reopened
[t=4.4141s, 30000 KB] New best heuristic value for add: 176
[t=4.41417s, 30000 KB] g=93, 10159 evaluated, 4054 expanded, 598 reopened
[t=4.41693s, 30000 KB] New best heuristic value for add: 175
[t=4.417s, 30000 KB] g=94, 10168 evaluated, 4055 expanded, 598 reopened
[t=4.46832s, 30000 KB] New best heuristic value for add: 172
[t=4.46843s, 30000 KB] g=97, 10339 evaluated, 4079 expanded, 598 reopened
[t=7.07678s, 30000 KB] New best heuristic value for add: 168
[t=7.0769s, 30000 KB] g=97, 18977 evaluated, 7065 expanded, 1540 reopened
[t=7.07935s, 30000 KB] New best heuristic value for add: 150
[t=7.07943s, 30000 KB] g=98, 18985 evaluated, 7066 expanded, 1540 reopened
[t=7.08217s, 30000 KB] New best heuristic value for add: 149
[t=7.08223s, 30000 KB] g=99, 18994 evaluated, 7067 expanded, 1540 reopened
[t=7.08288s, 30000 KB] New best heuristic value for add: 144
[t=7.08294s, 30000 KB] g=99, 18996 evaluated, 7067 expanded, 1540 reopened
[t=7.08507s, 30000 KB] New best heuristic value for add: 140
[t=7.08513s, 30000 KB] g=100, 19003 evaluated, 7068 expanded, 1540 reopened
[t=7.08756s, 30000 KB] New best heuristic value for add: 131
[t=7.08763s, 30000 KB] g=101, 19011 evaluated, 7069 expanded, 1540 reopened
[t=7.09037s, 30000 KB] New best heuristic value for add: 123
[t=7.09044s, 30000 KB] g=102, 19020 evaluated, 7070 expanded, 1540 reopened
[t=7.09403s, 30000 KB] New best heuristic value for add: 117
[t=7.0941s, 30000 KB] g=103, 19032 evaluated, 7071 expanded, 1540 reopened
[t=7.09654s, 30000 KB] New best heuristic value for add: 116
[t=7.09661s, 30000 KB] g=104, 19040 evaluated, 7072 expanded, 1540 reopened
[t=7.09755s, 30000 KB] New best heuristic value for add: 113
[t=7.09761s, 30000 KB] g=104, 19043 evaluated, 7072 expanded, 1540 reopened
[t=7.09974s, 30000 KB] New best heuristic value for add: 112
[t=7.0998s, 30000 KB] g=105, 19050 evaluated, 7073 expanded, 1540 reopened
[t=7.10016s, 30000 KB] New best heuristic value for add: 110
[t=7.10021s, 30000 KB] g=105, 19051 evaluated, 7073 expanded, 1540 reopened
[t=7.10587s, 30000 KB] New best heuristic value for add: 99
[t=7.10594s, 30000 KB] g=107, 19070 evaluated, 7075 expanded, 1540 reopened
[t=7.11775s, 30000 KB] New best heuristic value for add: 98
[t=7.11783s, 30000 KB] g=109, 19110 evaluated, 7078 expanded, 1540 reopened
[t=7.95603s, 30000 KB] New best heuristic value for add: 96
[t=7.95615s, 30000 KB] g=113, 21948 evaluated, 7560 expanded, 1540 reopened
[t=7.95728s, 30000 KB] New best heuristic value for add: 92
[t=7.95736s, 30000 KB] g=113, 21952 evaluated, 7560 expanded, 1540 reopened
[t=7.96004s, 30000 KB] New best heuristic value for add: 90
[t=7.9601s, 30000 KB] g=114, 21962 evaluated, 7561 expanded, 1540 reopened
[t=7.96799s, 30000 KB] New best heuristic value for add: 86
[t=7.96807s, 30000 KB] g=116, 21992 evaluated, 7564 expanded, 1540 reopened
[t=8.21477s, 30000 KB] New best heuristic value for add: 85
[t=8.21488s, 30000 KB] g=119, 22935 evaluated, 7713 expanded, 1546 reopened
[t=8.21704s, 30000 KB] New best heuristic value for add: 81
[t=8.21711s, 30000 KB] g=120, 22943 evaluated, 7714 expanded, 1546 reopened
[t=8.2182s, 30000 KB] New best heuristic value for add: 78
[t=8.21826s, 30000 KB] g=120, 22947 evaluated, 7714 expanded, 1546 reopened
[t=8.21987s, 30000 KB] New best heuristic value for add: 73
[t=8.21993s, 30000 KB] g=121, 22953 evaluated, 7715 expanded, 1546 reopened
[t=8.22023s, 30000 KB] New best heuristic value for add: 70
[t=8.22029s, 30000 KB] g=121, 22954 evaluated, 7715 expanded, 1546 reopened
[t=8.22266s, 30000 KB] New best heuristic value for add: 66
[t=8.22272s, 30000 KB] g=122, 22963 evaluated, 7716 expanded, 1546 reopened
[t=8.22302s, 30000 KB] New best heuristic value for add: 65
[t=8.22308s, 30000 KB] g=122, 22964 evaluated, 7716 expanded, 1546 reopened
[t=8.22594s, 30000 KB] New best heuristic value for add: 61
[t=8.226s, 30000 KB] g=123, 22975 evaluated, 7717 expanded, 1546 reopened
[t=8.23087s, 30000 KB] New best heuristic value for add: 54
[t=8.23094s, 30000 KB] g=124, 22994 evaluated, 7718 expanded, 1546 reopened
[t=8.23227s, 30000 KB] New best heuristic value for add: 50
[t=8.23233s, 30000 KB] g=125, 22999 evaluated, 7719 expanded, 1546 reopened
[t=8.2364s, 30000 KB] New best heuristic value for add: 46
[t=8.23646s, 30000 KB] g=126, 23015 evaluated, 7720 expanded, 1546 reopened
[t=8.2385s, 30000 KB] New best heuristic value for add: 42
[t=8.23857s, 30000 KB] g=127, 23023 evaluated, 7721 expanded, 1546 reopened
[t=8.24204s, 30000 KB] New best heuristic value for add: 41
[t=8.2421s, 30000 KB] g=128, 23037 evaluated, 7722 expanded, 1546 reopened
[t=8.24286s, 30000 KB] New best heuristic value for add: 38
[t=8.24292s, 30000 KB] g=128, 23040 evaluated, 7722 expanded, 1546 reopened
[t=8.24463s, 30000 KB] New best heuristic value for add: 36
[t=8.24469s, 30000 KB] g=129, 23047 evaluated, 7723 expanded, 1546 reopened
[t=8.24663s, 30000 KB] New best heuristic value for add: 34
[t=8.24669s, 30000 KB] g=129, 23055 evaluated, 7723 expanded, 1546 reopened
[t=8.24792s, 30000 KB] New best heuristic value for add: 31
[t=8.24798s, 30000 KB] g=130, 23060 evaluated, 7724 expanded, 1546 reopened
[t=8.25123s, 30000 KB] New best heuristic value for add: 29
[t=8.25129s, 30000 KB] g=131, 23074 evaluated, 7725 expanded, 1546 reopened
[t=8.25244s, 30000 KB] New best heuristic value for add: 28
[t=8.25249s, 30000 KB] g=131, 23079 evaluated, 7725 expanded, 1546 reopened
[t=8.25297s, 30000 KB] New best heuristic value for add: 26
[t=8.25303s, 30000 KB] g=132, 23081 evaluated, 7726 expanded, 1546 reopened
[t=8.25497s, 30000 KB] New best heuristic value for add: 25
[t=8.25503s, 30000 KB] g=132, 23090 evaluated, 7726 expanded, 1546 reopened
[t=8.25571s, 30000 KB] New best heuristic value for add: 23
[t=8.25576s, 30000 KB] g=133, 23093 evaluated, 7727 expanded, 1546 reopened
[t=8.25815s, 30000 KB] New best heuristic value for add: 21
[t=8.25821s, 30000 KB] g=134, 23105 evaluated, 7728 expanded, 1546 reopened
[t=8.25844s, 30000 KB] New best heuristic value for add: 20
[t=8.2585s, 30000 KB] g=134, 23106 evaluated, 7728 expanded, 1546 reopened
[t=8.26081s, 30000 KB] New best heuristic value for add: 18
[t=8.26087s, 30000 KB] g=135, 23118 evaluated, 7729 expanded, 1546 reopened
[t=8.26277s, 30000 KB] New best heuristic value for add: 16
[t=8.26284s, 30000 KB] g=136, 23128 evaluated, 7730 expanded, 1546 reopened
[t=8.26506s, 30000 KB] New best heuristic value for add: 14
[t=8.26512s, 30000 KB] g=137, 23140 evaluated, 7731 expanded, 1546 reopened
[t=8.2669s, 30000 KB] New best heuristic value for add: 11
[t=8.26697s, 30000 KB] g=138, 23150 evaluated, 7732 expanded, 1546 reopened
[t=8.26732s, 30000 KB] New best heuristic value for add: 9
[t=8.26738s, 30000 KB] g=139, 23152 evaluated, 7733 expanded, 1546 reopened
[t=8.26871s, 30000 KB] New best heuristic value for add: 8
[t=8.26877s, 30000 KB] g=140, 23160 evaluated, 7734 expanded, 1546 reopened
[t=8.27001s, 30000 KB] New best heuristic value for add: 7
[t=8.27007s, 30000 KB] g=140, 23168 evaluated, 7734 expanded, 1546 reopened
[t=8.27027s, 30000 KB] New best heuristic value for add: 6
[t=8.27032s, 30000 KB] g=141, 23169 evaluated, 7735 expanded, 1546 reopened
[t=8.27063s, 30000 KB] New best heuristic value for add: 5
[t=8.27068s, 30000 KB] g=141, 23171 evaluated, 7735 expanded, 1546 reopened
[t=8.27196s, 30000 KB] New best heuristic value for add: 4
[t=8.27201s, 30000 KB] g=142, 23180 evaluated, 7736 expanded, 1546 reopened
[t=8.27372s, 30000 KB] New best heuristic value for add: 3
[t=8.27377s, 30000 KB] g=143, 23193 evaluated, 7737 expanded, 1546 reopened
[t=8.27455s, 30000 KB] New best heuristic value for add: 2
[t=8.27461s, 30000 KB] g=144, 23199 evaluated, 7738 expanded, 1546 reopened
[t=8.27535s, 30000 KB] New best heuristic value for add: 1
[t=8.27541s, 30000 KB] g=145, 23205 evaluated, 7739 expanded, 1546 reopened
[t=8.27599s, 30000 KB] New best heuristic value for add: 0
[t=8.27604s, 30000 KB] g=146, 23210 evaluated, 7740 expanded, 1546 reopened
[t=8.2762s, 30000 KB] Solution found!
[t=8.27628s, 30000 KB] Actual search time: 8.06733s
tal-to-home da d9 h7 d0 d n1 n0 (1)
move-col-to-col s3 s6 h4 (1)
tal-to-col h7 d3 s8 d9 (1)
turn-deck d3 d9 (1)
turn-deck d9 h3 (1)
turn-deck h3 d2 (1)
turn-deck d2 d7 (1)
turn-deck d7 ca (1)
turn-deck ca d8 (1)
turn-deck d8 s5 (1)
tal-to-col s5 d8 d6 s4 (1)
turn-deck d8 s4 (1)
turn-deck s4 d4 (1)
turn-deck d4 c9 (1)
tal-to-col c9 d4 dt h8 (1)
turn-deck d4 h8 (1)
tal-to-col h8 d4 c9 s9 (1)
turn-deck d4 s9 (1)
turn-deck s9 c3 (1)
turn-deck c3 dj (1)
turn-deck dj h5 (1)
tal-to-col h5 dj s6 ht (1)
tal-to-col dj c3 sq ht (1)
turn-deck c3 ht (1)
turn-deck ht ct (1)
turn-deck ct hj (1)
turn-deck hj sa (1)
tal-to-home sa dk hj s0 s n1 n0 (1)
turn-deck hj dk (1)
move-col-to-col-b s6 h7 coln0 coln1 (1)
tal-to-col-e dk hj d5 coln1 coln0 (1)
move-col-to-col-b cq dk coln0 coln1 (1)
turn-deck hj d5 (1)
turn-deck-a d5 d3 (1)
turn-deck d3 d9 (1)
turn-deck d9 h3 (1)
turn-deck h3 d2 (1)
tal-to-home d2 d7 h3 da d n2 n1 (1)
turn-deck h3 d7 (1)
turn-deck d7 ca (1)
tal-to-home ca d8 d7 c0 c n1 n0 (1)
turn-deck d7 d8 (1)
turn-deck d8 s4 (1)
turn-deck s4 d4 (1)
turn-deck d4 s9 (1)
turn-deck s9 c3 (1)
turn-deck c3 ht (1)
turn-deck ht ct (1)
turn-deck ct hj (1)
turn-deck hj d5 (1)
turn-deck-a d5 d3 (1)
tal-to-home-b d3 d9 d2 d n3 n2 (1)
turn-deck d9 h3 (1)
turn-deck h3 d7 (1)
turn-deck d7 d8 (1)
turn-deck d8 s4 (1)
turn-deck s4 d4 (1)
tal-to-home d4 s9 s4 d3 d n4 n3 (1)
turn-deck s4 s9 (1)
turn-deck s9 c3 (1)
turn-deck c3 ht (1)
turn-deck ht ct (1)
tal-to-col ct ht dj hj (1)
turn-deck ht hj (1)
turn-deck hj d5 (1)
tal-to-home-c d5 hj d4 d n5 n4 (1)
turn-deck-a hj d9 (1)
tal-to-col-b d9 ct h3 (1)
turn-deck h3 d7 (1)
move-col-to-col h4 ck s5 (1)
move-col-to-col s8 c8 d9 (1)
move-col-to-col-c ck c7 coln1 coln0 (1)
move-col-to-col d6 s2 c7 (1)
col-to-home s2 dq s n2 sa n1 (1)
col-to-home s3 h4 s n3 s2 n2 (1)
tal-to-col d7 h3 c8 d8 (1)
turn-deck h3 d8 (1)
turn-deck d8 s4 (1)
tal-to-home s4 s9 d8 s3 s n4 n3 (1)
turn-deck d8 s9 (1)
turn-deck s9 c3 (1)
tal-to-col c3 s9 h4 ht (1)
turn-deck s9 ht (1)
turn-deck ht hj (1)
move-col-to-col dq hk ck (1)
move-col-to-col c7 h9 h8 (1)
move-col-to-col c8 c6 h9 (1)
move-col-to-col h5 s6 c6 (1)
move-col-to-col c6 c5 d7 (1)
move-col-to-col h4 s5 c5 (1)
col-to-home s5 d6 s n5 s4 n4 (1)
col-to-home s6 h7 s n6 s5 n5 (1)
move-col-to-col c6 d7 h7 (1)
move-col-to-col c5 s7 d6 (1)
col-to-home s7 c2 s n7 s6 n6 (1)
col-to-home c2 h6 c n2 ca n1 (1)
move-col-to-col c5 d6 h6 (1)
col-to-home d6 c7 d n6 d5 n5 (1)
col-to-home d7 c8 d n7 d6 n6 (1)
move-col-to-col-b h6 c7 coln0 coln1 (1)
move-col-to-col-c hk c4 coln1 coln0 (1)
move-col-to-col c4 sj h5 (1)
move-col-to-col h7 s8 c8 (1)
col-to-home c3 h4 c n3 c2 n2 (1)
col-to-home c4 h5 c n4 c3 n3 (1)
move-col-to-col dt ha sj (1)
col-to-home ha cj h n1 h0 n0 (1)
col-to-home s8 d9 s n8 s7 n7 (1)
tal-to-col-c hj cq ht (1)
tal-to-col-c ht cj s9 (1)
move-col-to-col c9 dt ht (1)
tal-to-col-c s9 dt d8 (1)
tal-to-home-c d8 h3 d7 d n8 n7 (1)
move-col-to-col ct dj hj (1)
col-to-home s9 dt s n9 s8 n8 (1)
col-to-home d9 ct d n9 d8 n8 (1)
move-col-to-col sq st hk (1)
col-to-home st h2 s n10 s9 n9 (1)
col-to-home-b h2 ha h n2 n1 coln0 coln1 (1)
tal-to-home-d h3 h2 h n3 n2 (1)
col-to-home h4 c5 h n4 h3 n3 (1)
col-to-home dt sj d n10 d9 n9 (1)
col-to-home c5 h6 c n5 c4 n4 (1)
col-to-home h5 c6 h n5 h4 n4 (1)
col-to-home c6 h7 c n6 c5 n5 (1)
col-to-home h6 c7 h n6 h5 n5 (1)
col-to-home c7 h8 c n7 c6 n6 (1)
col-to-home h7 c8 h n7 h6 n6 (1)
col-to-home dj sq d n11 dt n10 (1)
col-to-home c8 h9 c n8 c7 n7 (1)
col-to-home h8 c9 h n8 h7 n7 (1)
col-to-home c9 ht c n9 c8 n8 (1)
col-to-home h9 hq h n9 h8 n8 (1)
col-to-home-b sj st s n11 n10 coln1 coln2 (1)
col-to-home sq hk s n12 sj n11 (1)
col-to-home dq ck d n12 dj n11 (1)
col-to-home ht cj h n10 h9 n9 (1)
col-to-home ct hj c n10 c9 n9 (1)
col-to-home cj sk c n11 ct n10 (1)
col-to-home hj cq h n11 ht n10 (1)
col-to-home cq dk c n12 cj n11 (1)
col-to-home-b sk sq s n13 n12 coln2 coln3 (1)
col-to-home-b hq hj h n12 n11 coln3 coln4 (1)
col-to-home-b hk hq h n13 n12 coln4 coln5 (1)
col-to-home-b ck cq c n13 n12 coln5 coln6 (1)
col-to-home-b dk dq d n13 n12 coln6 coln7 (1)
[t=8.27632s, 30000 KB] Plan length: 146 step(s).
[t=8.27632s, 30000 KB] Plan cost: 146
[t=8.27632s, 30000 KB] Expanded 7741 state(s).
[t=8.27632s, 30000 KB] Reopened 1546 state(s).
[t=8.27632s, 30000 KB] Evaluated 23211 state(s).
[t=8.27632s, 30000 KB] Evaluations: 23211
[t=8.27632s, 30000 KB] Generated 59732 state(s).
[t=8.27632s, 30000 KB] Dead ends: 20 state(s).
[t=8.27632s, 30000 KB] Number of registered states: 23211
[t=8.27632s, 30000 KB] Int hash set load factor: 23211/32768 = 0.708344
[t=8.27632s, 30000 KB] Int hash set resizes: 15
[t=8.27632s, 30000 KB] mean number of q cost that have been adjusted 0 times in relation to total number of q: -1
[t=8.27632s, 30000 KB] mean number of q cost that have been adjusted 1 times in relation to total number of q: -1
[t=8.27632s, 30000 KB] mean number of q cost that have been adjusted 2 times in relation to total number of q: -1
[t=8.27632s, 30000 KB] mean number of q that are at some point overconsitent in relation to total number of q: -1
[t=8.27632s, 30000 KB] mean number of q that are at first underconsisten in relation to total number of q: -1
[t=8.27632s, 30000 KB] mean number of state variables that are not in common between two following states in relation to total number of state variables: -1
[t=8.27632s, 30000 KB] variance number of state variables that are not in common between two following states in relation to total number of state variables: -1
[t=8.27632s, 30000 KB] Search time: 8.06864s
[t=8.27632s, 30000 KB] Total time: 8.27632s
Solution found.
Peak memory: 30000 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: validate domain.pddl problem.pddl sas_plan
