INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799.96s
INFO     translator memory limit: 3584 MB
INFO     translator command line string: /infai/weidan00/downward/experiments/bachelor/.venv/bin/python3 /infai/weidan00/downward/experiments/bachelor/data/bachelor-v1/code-7aa5f34_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.009s wall-clock]
Normalizing task... [0.000s CPU, 0.001s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.002s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.030s CPU, 0.028s wall-clock]
Preparing model... [0.010s CPU, 0.009s wall-clock]
Generated 400 rules.
Computing model... [1.140s CPU, 1.151s wall-clock]
44031 relevant atoms
39275 auxiliary atoms
83306 final queue length
231101 total queue pushes
Completing instantiation... [3.830s CPU, 3.843s wall-clock]
Instantiating: [5.040s CPU, 5.061s wall-clock]
Computing fact groups...
Finding invariants...
41 initial candidates
Finding invariants: [0.100s CPU, 0.097s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
447 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.002s wall-clock]
Computing fact groups: [0.110s CPU, 0.104s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.001s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.200s CPU, 0.198s wall-clock]
Translating task: [4.770s CPU, 4.796s wall-clock]
123317 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
2 propositions removed
Detecting unreachable propositions: [2.770s CPU, 2.766s wall-clock]
Reordering and filtering variables...
449 of 449 variables necessary.
1 of 3 mutex groups necessary.
43386 of 43386 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [1.300s CPU, 1.311s wall-clock]
Translator variables: 449
Translator derived variables: 0
Translator facts: 901
Translator goal facts: 4
Translator mutex groups: 1
Translator total mutex groups size: 2
Translator operators: 43386
Translator axioms: 0
Translator task size: 533688
Translator peak memory: 485660 KB
Writing output... [0.860s CPU, 0.924s wall-clock]
Done! [15.070s CPU, 15.188s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1784.75s
INFO     search memory limit: 3584 MB
INFO     search command line string: /infai/weidan00/downward/experiments/bachelor/data/bachelor-v1/code-7aa5f34_e5e41175/builds/release/bin/downward --search 'eager_wastar([add()], w=2)' --internal-plan-file sas_plan < output.sas
[t=7.8292e-05s, 17204 KB] reading input...
[t=0.489122s, 37252 KB] done reading input!
[t=0.529549s, 56752 KB] Simplifying 270663 unary operators... done! [269991 unary operators]
[t=3.05694s, 81052 KB] time to simplify: 2.52749s
[t=3.07959s, 82064 KB] Initializing additive heuristic...
[t=3.07983s, 82064 KB] Building successor generator...done!
[t=3.11848s, 82064 KB] peak memory difference for successor generator creation: 0 KB
[t=3.11853s, 82064 KB] time for successor generation creation: 0.0384726s
[t=3.11893s, 82064 KB] Variables: 449
[t=3.11899s, 82064 KB] FactPairs: 901
[t=3.11903s, 82064 KB] Bytes per state: 60
[t=3.11925s, 82064 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=3.12522s, 82064 KB] New best heuristic value for add: 123
[t=3.12532s, 82064 KB] g=0, 1 evaluated, 0 expanded
[t=3.12537s, 82064 KB] Initial heuristic value for add: 123
[t=3.12541s, 82064 KB] pruning method: none
[t=3.14045s, 82064 KB] New best heuristic value for add: 84
[t=3.14055s, 82064 KB] g=1, 4 evaluated, 1 expanded
[t=3.15557s, 82064 KB] New best heuristic value for add: 75
[t=3.15566s, 82064 KB] g=2, 7 evaluated, 2 expanded
[t=3.16976s, 82064 KB] New best heuristic value for add: 73
[t=3.16985s, 82064 KB] g=3, 10 evaluated, 3 expanded
[t=3.18825s, 82064 KB] New best heuristic value for add: 66
[t=3.18835s, 82064 KB] g=4, 14 evaluated, 4 expanded
[t=3.20135s, 82064 KB] New best heuristic value for add: 63
[t=3.20144s, 82064 KB] g=5, 17 evaluated, 5 expanded
[t=3.21844s, 82064 KB] New best heuristic value for add: 58
[t=3.21854s, 82064 KB] g=6, 21 evaluated, 6 expanded
[t=3.24456s, 82064 KB] New best heuristic value for add: 56
[t=3.24465s, 82064 KB] g=7, 27 evaluated, 7 expanded
[t=3.26599s, 82064 KB] New best heuristic value for add: 55
[t=3.26608s, 82064 KB] g=8, 32 evaluated, 8 expanded
[t=3.31799s, 82064 KB] New best heuristic value for add: 51
[t=3.31809s, 82064 KB] g=11, 44 evaluated, 12 expanded
[t=3.34189s, 82064 KB] New best heuristic value for add: 47
[t=3.34198s, 82064 KB] g=13, 50 evaluated, 14 expanded
[t=3.35789s, 82064 KB] New best heuristic value for add: 42
[t=3.35799s, 82064 KB] g=14, 54 evaluated, 15 expanded
[t=3.36973s, 82064 KB] New best heuristic value for add: 37
[t=3.36982s, 82064 KB] g=15, 57 evaluated, 16 expanded
[t=3.38152s, 82064 KB] New best heuristic value for add: 34
[t=3.38162s, 82064 KB] g=16, 60 evaluated, 17 expanded
[t=3.47062s, 82064 KB] New best heuristic value for add: 33
[t=3.47072s, 82064 KB] g=20, 84 evaluated, 26 expanded
[t=3.57913s, 82064 KB] New best heuristic value for add: 27
[t=3.57923s, 82064 KB] g=23, 114 evaluated, 38 expanded
[t=3.59885s, 82064 KB] New best heuristic value for add: 26
[t=3.59895s, 82064 KB] g=24, 119 evaluated, 39 expanded
[t=4.10902s, 82064 KB] New best heuristic value for add: 25
[t=4.10912s, 82064 KB] g=31, 259 evaluated, 93 expanded
[t=4.12795s, 82064 KB] New best heuristic value for add: 24
[t=4.12804s, 82064 KB] g=33, 264 evaluated, 95 expanded
[t=4.22516s, 82064 KB] New best heuristic value for add: 23
[t=4.22526s, 82064 KB] g=35, 290 evaluated, 103 expanded
[t=4.2443s, 82064 KB] New best heuristic value for add: 21
[t=4.2444s, 82064 KB] g=36, 295 evaluated, 104 expanded
[t=4.46634s, 82064 KB] New best heuristic value for add: 17
[t=4.46644s, 82064 KB] g=39, 357 evaluated, 127 expanded
[t=4.4879s, 82064 KB] New best heuristic value for add: 16
[t=4.48799s, 82064 KB] g=40, 363 evaluated, 128 expanded
[t=4.51117s, 82064 KB] New best heuristic value for add: 14
[t=4.51126s, 82064 KB] g=42, 369 evaluated, 130 expanded
[t=4.63537s, 82064 KB] New best heuristic value for add: 12
[t=4.63546s, 82064 KB] g=47, 403 evaluated, 143 expanded
[t=4.67927s, 82064 KB] New best heuristic value for add: 11
[t=4.67937s, 82064 KB] g=50, 415 evaluated, 147 expanded
[t=4.7701s, 82064 KB] New best heuristic value for add: 10
[t=4.7702s, 82064 KB] g=53, 441 evaluated, 155 expanded
[t=4.78757s, 82064 KB] New best heuristic value for add: 9
[t=4.78767s, 82064 KB] g=54, 446 evaluated, 156 expanded
[t=4.79577s, 82064 KB] New best heuristic value for add: 8
[t=4.79586s, 82064 KB] g=55, 448 evaluated, 157 expanded
[t=4.82397s, 82064 KB] New best heuristic value for add: 7
[t=4.82406s, 82064 KB] g=57, 456 evaluated, 159 expanded
[t=4.82669s, 82064 KB] New best heuristic value for add: 6
[t=4.82678s, 82064 KB] g=58, 457 evaluated, 160 expanded
[t=4.84346s, 82064 KB] New best heuristic value for add: 5
[t=4.84355s, 82064 KB] g=59, 463 evaluated, 162 expanded
[t=4.94684s, 82064 KB] New best heuristic value for add: 4
[t=4.94694s, 82064 KB] g=62, 501 evaluated, 179 expanded
[t=4.96057s, 82064 KB] New best heuristic value for add: 3
[t=4.96067s, 82064 KB] g=63, 506 evaluated, 180 expanded
[t=4.96869s, 82064 KB] New best heuristic value for add: 2
[t=4.96878s, 82064 KB] g=64, 509 evaluated, 181 expanded
[t=4.97158s, 82064 KB] New best heuristic value for add: 1
[t=4.97166s, 82064 KB] g=65, 510 evaluated, 182 expanded
[t=4.97509s, 82064 KB] New best heuristic value for add: 0
[t=4.97518s, 82064 KB] g=66, 512 evaluated, 183 expanded
[t=4.97523s, 82064 KB] Solution found!
[t=4.97528s, 82064 KB] Actual search time: 1.84986s
unpark pr2 xrel0 yrel0 (1)
base-right pr2 x0 x1 y0 (1)
base-right pr2 x1 x2 y0 (1)
base-down pr2 x2 y0 y1 (1)
base-down pr2 x2 y1 y2 (1)
base-left pr2 x2 x1 y2 (1)
base-down pr2 x1 y2 y3 (1)
finish-object object0 x3 y5 (1)
base-down pr2 x1 y3 y4 (1)
base-down pr2 x1 y4 y5 (1)
base-down pr2 x1 y5 y6 (1)
base-down pr2 x1 y6 y7 (1)
base-down pr2 x1 y7 y8 (1)
base-right pr2 x1 x2 y8 (1)
base-right pr2 x2 x3 y8 (1)
base-up pr2 x3 y8 y7 (1)
park pr2 (1)
get-up pr2 x3 y7 xrel0 x3 yrel0 y7 object3 y6 (1)
unpark pr2 xrel0 yrel0 (1)
base-right pr2 x3 x4 y7 (1)
park pr2 (1)
put-up pr2 x4 y7 xrel0 x4 yrel0 y7 object3 y6 (1)
unpark pr2 xrel0 yrel0 (1)
finish-object object3 x4 y6 (1)
base-down pr2 x4 y7 y8 (1)
base-right pr2 x4 x5 y8 (1)
base-right pr2 x5 x6 y8 (1)
base-up pr2 x6 y8 y7 (1)
park pr2 (1)
get-right pr2 x6 y7 xrel0 x6 yrel0 y7 object2 x7 (1)
unpark pr2 xrel0 yrel0 (1)
base-down pr2 x6 y7 y8 (1)
base-left pr2 x6 x5 y8 (1)
base-left pr2 x5 x4 y8 (1)
base-up pr2 x4 y8 y7 (1)
base-up pr2 x4 y7 y6 (1)
park pr2 (1)
put-up pr2 x4 y6 xrel0 x4 yrel0 y6 object2 y5 (1)
unpark pr2 xrel0 yrel0 (1)
finish-object object2 x4 y5 (1)
base-left pr2 x4 x3 y6 (1)
base-down pr2 x3 y6 y7 (1)
base-down pr2 x3 y7 y8 (1)
base-left pr2 x3 x2 y8 (1)
base-left pr2 x2 x1 y8 (1)
base-up pr2 x1 y8 y7 (1)
base-up pr2 x1 y7 y6 (1)
base-up pr2 x1 y6 y5 (1)
base-up pr2 x1 y5 y4 (1)
base-up pr2 x1 y4 y3 (1)
base-up pr2 x1 y3 y2 (1)
park pr2 (1)
get-up pr2 x1 y2 xrel0 x1 yrel0 y2 object1 y1 (1)
unpark pr2 xrel0 yrel0 (1)
base-down pr2 x1 y2 y3 (1)
base-down pr2 x1 y3 y4 (1)
base-down pr2 x1 y4 y5 (1)
base-down pr2 x1 y5 y6 (1)
base-down pr2 x1 y6 y7 (1)
base-down pr2 x1 y7 y8 (1)
base-right pr2 x1 x2 y8 (1)
park pr2 (1)
gripper-right pr2 x2 y8 xrel0 xrel1 x2 x3 yrel0 y8 (1)
gripper-up pr2 x2 y8 xrel1 x3 yrel0 yrel-1 y8 y7 (1)
put-up pr2 x2 y8 xrel1 x3 yrel-1 y7 object1 y6 (1)
finish-object object1 x3 y6 (1)
[t=4.97532s, 82064 KB] Plan length: 66 step(s).
[t=4.97532s, 82064 KB] Plan cost: 66
[t=4.97532s, 82064 KB] Expanded 184 state(s).
[t=4.97532s, 82064 KB] Reopened 0 state(s).
[t=4.97532s, 82064 KB] Evaluated 512 state(s).
[t=4.97532s, 82064 KB] Evaluations: 512
[t=4.97532s, 82064 KB] Generated 796 state(s).
[t=4.97532s, 82064 KB] Dead ends: 0 state(s).
[t=4.97532s, 82064 KB] Number of registered states: 512
[t=4.97532s, 82064 KB] Int hash set load factor: 512/512 = 1
[t=4.97532s, 82064 KB] Int hash set resizes: 9
[t=4.97532s, 82064 KB] mean number of q cost that have been adjusted 0 times in relation to total number of q: -1
[t=4.97532s, 82064 KB] mean number of q cost that have been adjusted 1 times in relation to total number of q: -1
[t=4.97532s, 82064 KB] mean number of q cost that have been adjusted 2 times in relation to total number of q: -1
[t=4.97532s, 82064 KB] mean number of q that are at some point overconsitent in relation to total number of q: -1
[t=4.97532s, 82064 KB] mean number of q that are at first underconsisten in relation to total number of q: -1
[t=4.97532s, 82064 KB] mean number of state variables that are not in common between two following states in relation to total number of state variables: -1
[t=4.97532s, 82064 KB] variance number of state variables that are not in common between two following states in relation to total number of state variables: -1
[t=4.97532s, 82064 KB] Search time: 1.85607s
[t=4.97532s, 82064 KB] Total time: 4.97532s
Solution found.
Peak memory: 82064 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: validate domain.pddl problem.pddl sas_plan
