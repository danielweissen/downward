INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799.93s
INFO     translator memory limit: 3584 MB
INFO     translator command line string: /infai/weidan00/downward/experiments/bachelor/.venv/bin/python3 /infai/weidan00/downward/experiments/bachelor/data/bachelor-v1/code-7aa5f34_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.008s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.002s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.004s wall-clock]
Preparing model... [0.010s CPU, 0.008s wall-clock]
Generated 26 rules.
Computing model... [0.040s CPU, 0.039s wall-clock]
1373 relevant atoms
1106 auxiliary atoms
2479 final queue length
3208 total queue pushes
Completing instantiation... [0.050s CPU, 0.041s wall-clock]
Instantiating: [0.100s CPU, 0.096s wall-clock]
Computing fact groups...
Finding invariants...
6 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
28 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.004s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.030s CPU, 0.034s wall-clock]
14 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
1 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.019s wall-clock]
Reordering and filtering variables...
29 of 29 variables necessary.
0 of 1 mutex groups necessary.
784 of 784 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.005s wall-clock]
Translator variables: 29
Translator derived variables: 0
Translator facts: 84
Translator goal facts: 14
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 784
Translator axioms: 0
Translator task size: 2507
Translator peak memory: 144844 KB
Writing output... [0.010s CPU, 0.014s wall-clock]
Done! [0.180s CPU, 0.184s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1799.64s
INFO     search memory limit: 3584 MB
INFO     search command line string: /infai/weidan00/downward/experiments/bachelor/data/bachelor-v1/code-7aa5f34_e5e41175/builds/release/bin/downward --search 'eager_wastar([add()], w=2)' --internal-plan-file sas_plan < output.sas
[t=0.000103803s, 17204 KB] reading input...
[t=0.00588436s, 17344 KB] done reading input!
[t=0.00893382s, 17608 KB] Simplifying 798 unary operators... done! [798 unary operators]
[t=0.00964101s, 17740 KB] time to simplify: 0.000855394s
[t=0.0098513s, 17740 KB] Initializing additive heuristic...
[t=0.0100497s, 17740 KB] Building successor generator...done!
[t=0.0105128s, 17740 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0105824s, 17740 KB] time for successor generation creation: 0.000251905s
[t=0.010666s, 17740 KB] Variables: 29
[t=0.0107272s, 17740 KB] FactPairs: 84
[t=0.0107853s, 17740 KB] Bytes per state: 8
[t=0.0109914s, 17740 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.0111386s, 17740 KB] New best heuristic value for add: 55
[t=0.0112029s, 17740 KB] g=0, 1 evaluated, 0 expanded
[t=0.0112842s, 17740 KB] Initial heuristic value for add: 55
[t=0.0113493s, 17740 KB] pruning method: none
[t=0.0114557s, 17740 KB] New best heuristic value for add: 54
[t=0.0115223s, 17740 KB] g=1, 2 evaluated, 1 expanded
[t=0.0117041s, 17740 KB] New best heuristic value for add: 53
[t=0.011777s, 17740 KB] g=1, 9 evaluated, 1 expanded
[t=0.0121571s, 17740 KB] New best heuristic value for add: 52
[t=0.0122325s, 17740 KB] g=2, 30 evaluated, 2 expanded
[t=0.0126311s, 17740 KB] New best heuristic value for add: 51
[t=0.0126986s, 17740 KB] g=3, 52 evaluated, 3 expanded
[t=0.0128568s, 17740 KB] New best heuristic value for add: 50
[t=0.012926s, 17740 KB] g=4, 58 evaluated, 4 expanded
[t=0.0134521s, 17740 KB] New best heuristic value for add: 49
[t=0.0135291s, 17740 KB] g=6, 86 evaluated, 7 expanded
[t=0.013703s, 17740 KB] New best heuristic value for add: 48
[t=0.0137695s, 17740 KB] g=7, 93 evaluated, 8 expanded
[t=0.0141653s, 17740 KB] New best heuristic value for add: 47
[t=0.0142386s, 17740 KB] g=8, 114 evaluated, 10 expanded
[t=0.0144923s, 17740 KB] New best heuristic value for add: 46
[t=0.014563s, 17740 KB] g=9, 126 evaluated, 11 expanded
[t=0.0148965s, 17740 KB] New best heuristic value for add: 45
[t=0.0149826s, 17740 KB] g=10, 144 evaluated, 13 expanded
[t=0.0151671s, 17740 KB] New best heuristic value for add: 44
[t=0.0152347s, 17740 KB] g=11, 151 evaluated, 14 expanded
[t=0.0156199s, 17740 KB] New best heuristic value for add: 43
[t=0.0156933s, 17740 KB] g=12, 172 evaluated, 16 expanded
[t=0.0158026s, 17740 KB] New best heuristic value for add: 42
[t=0.0158746s, 17740 KB] g=13, 174 evaluated, 17 expanded
[t=0.0163445s, 17740 KB] New best heuristic value for add: 41
[t=0.0164166s, 17740 KB] g=14, 202 evaluated, 18 expanded
[t=0.0166401s, 17740 KB] New best heuristic value for add: 40
[t=0.0167118s, 17740 KB] g=14, 215 evaluated, 18 expanded
[t=0.0169985s, 17740 KB] New best heuristic value for add: 39
[t=0.0170697s, 17740 KB] g=15, 229 evaluated, 19 expanded
[t=0.0174498s, 17740 KB] New best heuristic value for add: 38
[t=0.0175229s, 17740 KB] g=16, 251 evaluated, 20 expanded
[t=0.0177711s, 17740 KB] New best heuristic value for add: 37
[t=0.0178444s, 17740 KB] g=17, 258 evaluated, 22 expanded
[t=0.0181581s, 17740 KB] New best heuristic value for add: 36
[t=0.0182303s, 17740 KB] g=18, 275 evaluated, 23 expanded
[t=0.0185241s, 17740 KB] New best heuristic value for add: 35
[t=0.018591s, 17740 KB] g=19, 289 evaluated, 26 expanded
[t=0.0188456s, 17740 KB] New best heuristic value for add: 34
[t=0.0189172s, 17740 KB] g=19, 304 evaluated, 26 expanded
[t=0.0195925s, 17740 KB] New best heuristic value for add: 33
[t=0.0196684s, 17740 KB] g=21, 345 evaluated, 31 expanded
[t=0.0199307s, 17740 KB] New best heuristic value for add: 32
[t=0.020003s, 17740 KB] g=21, 359 evaluated, 31 expanded
[t=0.0206948s, 17740 KB] New best heuristic value for add: 31
[t=0.0207731s, 17740 KB] g=23, 402 evaluated, 36 expanded
[t=0.0210193s, 17740 KB] New best heuristic value for add: 30
[t=0.0210888s, 17740 KB] g=23, 415 evaluated, 36 expanded
[t=0.021754s, 17740 KB] New best heuristic value for add: 29
[t=0.021832s, 17740 KB] g=25, 459 evaluated, 42 expanded
[t=0.0221519s, 17740 KB] New best heuristic value for add: 28
[t=0.0222093s, 17740 KB] g=25, 478 evaluated, 42 expanded
[t=0.0229159s, 17740 KB] New best heuristic value for add: 27
[t=0.0229978s, 17740 KB] g=27, 517 evaluated, 48 expanded
[t=0.023239s, 17740 KB] New best heuristic value for add: 26
[t=0.023309s, 17740 KB] g=27, 529 evaluated, 48 expanded
[t=0.0235143s, 17740 KB] New best heuristic value for add: 25
[t=0.0235797s, 17740 KB] g=28, 541 evaluated, 49 expanded
[t=0.0240191s, 17740 KB] New best heuristic value for add: 24
[t=0.024095s, 17740 KB] g=29, 569 evaluated, 50 expanded
[t=0.0246474s, 17740 KB] New best heuristic value for add: 23
[t=0.0247231s, 17740 KB] g=31, 602 evaluated, 58 expanded
[t=0.0251102s, 17740 KB] New best heuristic value for add: 22
[t=0.025184s, 17740 KB] g=31, 626 evaluated, 58 expanded
[t=0.025381s, 17740 KB] New best heuristic value for add: 21
[t=0.0254481s, 17740 KB] g=33, 633 evaluated, 63 expanded
[t=0.0256971s, 17740 KB] New best heuristic value for add: 20
[t=0.0257706s, 17740 KB] g=33, 650 evaluated, 63 expanded
[t=0.0259793s, 17740 KB] New best heuristic value for add: 19
[t=0.0260475s, 17740 KB] g=35, 658 evaluated, 67 expanded
[t=0.0264126s, 17740 KB] New best heuristic value for add: 18
[t=0.0264839s, 17740 KB] g=35, 682 evaluated, 67 expanded
[t=0.0266972s, 17740 KB] New best heuristic value for add: 17
[t=0.0267658s, 17740 KB] g=37, 690 evaluated, 71 expanded
[t=0.0270222s, 17740 KB] New best heuristic value for add: 16
[t=0.0270834s, 17740 KB] g=37, 707 evaluated, 71 expanded
[t=0.0272543s, 17740 KB] New best heuristic value for add: 15
[t=0.0273246s, 17740 KB] g=39, 714 evaluated, 75 expanded
[t=0.0276831s, 17740 KB] New best heuristic value for add: 14
[t=0.0277573s, 17740 KB] g=39, 738 evaluated, 75 expanded
[t=0.0278494s, 17740 KB] New best heuristic value for add: 13
[t=0.0279123s, 17740 KB] g=40, 739 evaluated, 76 expanded
[t=0.0283183s, 17740 KB] New best heuristic value for add: 12
[t=0.0283999s, 17740 KB] g=42, 767 evaluated, 79 expanded
[t=0.0285174s, 17740 KB] New best heuristic value for add: 11
[t=0.0285807s, 17740 KB] g=43, 770 evaluated, 80 expanded
[t=0.0289574s, 17740 KB] New best heuristic value for add: 10
[t=0.0290315s, 17740 KB] g=44, 795 evaluated, 82 expanded
[t=0.0291839s, 17740 KB] New best heuristic value for add: 9
[t=0.029246s, 17740 KB] g=45, 803 evaluated, 83 expanded
[t=0.0296023s, 17740 KB] New best heuristic value for add: 8
[t=0.0296782s, 17740 KB] g=46, 824 evaluated, 86 expanded
[t=0.0297995s, 17740 KB] New best heuristic value for add: 7
[t=0.0298709s, 17740 KB] g=47, 827 evaluated, 87 expanded
[t=0.0302787s, 17740 KB] New best heuristic value for add: 6
[t=0.0303548s, 17740 KB] g=48, 853 evaluated, 89 expanded
[t=0.0304748s, 17740 KB] New best heuristic value for add: 5
[t=0.0305401s, 17740 KB] g=49, 857 evaluated, 90 expanded
[t=0.0308922s, 17740 KB] New best heuristic value for add: 4
[t=0.0309653s, 17740 KB] g=50, 882 evaluated, 92 expanded
[t=0.0310851s, 17740 KB] New best heuristic value for add: 3
[t=0.0311498s, 17740 KB] g=51, 885 evaluated, 93 expanded
[t=0.0314878s, 17740 KB] New best heuristic value for add: 2
[t=0.0315593s, 17740 KB] g=52, 910 evaluated, 94 expanded
[t=0.0318768s, 17740 KB] New best heuristic value for add: 1
[t=0.0319537s, 17740 KB] g=53, 937 evaluated, 95 expanded
[t=0.0320425s, 17740 KB] New best heuristic value for add: 0
[t=0.032107s, 17740 KB] g=54, 938 evaluated, 96 expanded
[t=0.03217s, 17740 KB] Solution found!
[t=0.0322376s, 17740 KB] Actual search time: 0.0208729s
up f0 f15 (1)
board f15 p7 (1)
up f15 f22 (1)
board f22 p12 (1)
down f22 f15 (1)
depart f15 p12 (1)
down f15 f6 (1)
board f6 p3 (1)
up f6 f17 (1)
board f17 p11 (1)
down f17 f9 (1)
board f9 p10 (1)
board f9 p8 (1)
up f9 f14 (1)
depart f14 p10 (1)
up f14 f24 (1)
depart f24 p8 (1)
depart f24 p11 (1)
down f24 f0 (1)
board f0 p2 (1)
up f0 f1 (1)
board f1 p4 (1)
up f1 f14 (1)
depart f14 p2 (1)
down f14 f4 (1)
board f4 p5 (1)
up f4 f22 (1)
depart f22 p5 (1)
down f22 f17 (1)
depart f17 p4 (1)
down f17 f5 (1)
board f5 p9 (1)
up f5 f15 (1)
depart f15 p9 (1)
down f15 f6 (1)
depart f6 p7 (1)
up f6 f19 (1)
board f19 p0 (1)
up f19 f27 (1)
depart f27 p0 (1)
down f27 f20 (1)
board f20 p13 (1)
down f20 f7 (1)
depart f7 p3 (1)
up f7 f25 (1)
board f25 p6 (1)
down f25 f22 (1)
depart f22 p6 (1)
up f22 f26 (1)
board f26 p1 (1)
down f26 f10 (1)
depart f10 p1 (1)
up f10 f27 (1)
depart f27 p13 (1)
[t=0.0323017s, 17740 KB] Plan length: 54 step(s).
[t=0.0323017s, 17740 KB] Plan cost: 54
[t=0.0323017s, 17740 KB] Expanded 97 state(s).
[t=0.0323017s, 17740 KB] Reopened 0 state(s).
[t=0.0323017s, 17740 KB] Evaluated 938 state(s).
[t=0.0323017s, 17740 KB] Evaluations: 938
[t=0.0323017s, 17740 KB] Generated 2666 state(s).
[t=0.0323017s, 17740 KB] Dead ends: 0 state(s).
[t=0.0323017s, 17740 KB] Number of registered states: 938
[t=0.0323017s, 17740 KB] Int hash set load factor: 938/1024 = 0.916016
[t=0.0323017s, 17740 KB] Int hash set resizes: 10
[t=0.0323017s, 17740 KB] mean number of q cost that have been adjusted 0 times in relation to total number of q: -1
[t=0.0323017s, 17740 KB] mean number of q cost that have been adjusted 1 times in relation to total number of q: -1
[t=0.0323017s, 17740 KB] mean number of q cost that have been adjusted 2 times in relation to total number of q: -1
[t=0.0323017s, 17740 KB] mean number of q that are at some point overconsitent in relation to total number of q: -1
[t=0.0323017s, 17740 KB] mean number of q that are at first underconsisten in relation to total number of q: -1
[t=0.0323017s, 17740 KB] mean number of state variables that are not in common between two following states in relation to total number of state variables: -1
[t=0.0323017s, 17740 KB] variance number of state variables that are not in common between two following states in relation to total number of state variables: -1
[t=0.0323017s, 17740 KB] Search time: 0.0213115s
[t=0.0323017s, 17740 KB] Total time: 0.0323017s
Solution found.
Peak memory: 17740 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: validate domain.pddl problem.pddl sas_plan
